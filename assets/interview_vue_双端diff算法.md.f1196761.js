import{_ as s,o as n,c as l,S as a}from"./chunks/framework.59c3ae61.js";const i=JSON.parse('{"title":"双端 diff 算法","description":"","frontmatter":{"isTimeLine":true,"title":"双端 diff 算法","date":"2023-9-18","tags":["面试经验","Vue 源码解析"],"categories":["面试经验"]},"headers":[],"relativePath":"interview/vue/双端diff算法.md","filePath":"interview/vue/双端diff算法.md","lastUpdated":1699096181000}'),p={name:"interview/vue/双端diff算法.md"},o=a(`<h1 id="双端-diff-算法" tabindex="-1">双端 diff 算法 <a class="header-anchor" href="#双端-diff-算法" aria-label="Permalink to &quot;双端 diff 算法&quot;">​</a></h1><p>简单 diff 算法已经在一定程度上减少了 DOM 操作的次数，但它对 DOM 的移动操作并不是最优的。</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00548.jpeg" alt=""></p><p>以上面两组节点为例，如果使用简单 Diff 算法来更新它，会发生两次 DOM 移动操作。</p><ul><li>将 p-1 移动到 p-3 后面</li><li>将 p-2 移动到 p-1 后面</li></ul><p>上面这种更新过程并非最优解。实际上，只要把 p-3 移动到 p-1 前面就可以完成更新，只需要完成一次 DOM 移动操作。但简单 Diff 算法并不能做到这样的更新，需要使用双端 Diff 算法。</p><h2 id="双端-diff-算法的原理" tabindex="-1">双端 Diff 算法的原理 <a class="header-anchor" href="#双端-diff-算法的原理" aria-label="Permalink to &quot;双端 Diff 算法的原理&quot;">​</a></h2><p><strong>双端 Diff 算法</strong>是一种同时对新旧两组子节点的两个端点进行比较的算法。因此，需要四个索引值，分别指向新旧两组子节点的端点。</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00550.jpeg" alt=""></p><p>代码如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">patchChildren</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">n2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">container</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 封装 patchKeyedChildren 函数处理两组子节点</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patchKeyedChildren</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">n1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">11</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">patchKeyedChildren</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">n2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">container</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 四个索引值</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>通过这四个索引值，就可以找到它们所指向的虚拟节点了。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">patchKeyedChildren</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">n2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">container</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 四个索引值</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 四个索引指向的 vnode 节点</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>有了新旧子节点中的第一个节点和最后一个节点的信息后，就可以进行双端比较了。</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00551.jpeg" alt=""></p><p>对于上面这种情况，<strong>双端比较的具体过程如下：</strong></p><ol><li><p>比较旧子节点中的<em>第一个</em>子节点 p-1 与新子节点中的<em>第一个</em>子节点 p-4，由于两者 key 值不同，因此不可复用，所以什么都不做。</p></li><li><p>比较旧子节点中的<em>最后一个</em>子节点 p-4 与新子节点中的<em>最后一个</em>子节点 p-3。由于两者 key 值不同，因此不可复用，所以什么都不做。</p></li><li><p>比较旧子节点中的<em>第一个</em>子节点 p-1 与新子节点中的<em>最后一个</em>子节点 p-3，由于两者 key 值不同，因此不可复用，所以什么都不做。</p></li><li><p>比较旧子节点中的<em>最后一个</em>子节点 p-4 与新子节点中的<em>第一个</em>子节点 p-3，由于两者 key 值相同，所以可以进行 DOM 复用。</p></li></ol><p>在第四步中，找到了相同的节点，说明它们对应的真实 DOM 节点可以复用。对于这两个节点，只需要通过 DOM 移动操作完成更新即可。</p><p>旧子节点中的最后一个子节点和新子节点中的第一个子节点相同，说明：**节点 p-4 原本是最后一个子节点，但在新的顺序中，它变成零第一个子节点。**也就是说，节点 p-4 在更新后会变成第一个子节点。<strong>可以将索引 oldEndIdx 指向的虚拟节点对应的真实 DOM 移动到索引 oldStartIdx 指向的虚拟节点对应的真实 DOM 前。</strong></p><p>代码如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">patchKeyedChildren</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">n1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">n2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">container</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">n2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">children</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 四个索引值</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 四个索引指向的 vnode 节点</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">14</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 第一步：oldStartVNode 和 newStartVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 第二步：oldEndVNode 和 newEndVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 第三步：oldStartVNode 和 newEndVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">21</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">22</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 第四步：oldEndVNode 和 newStartVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">23</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 仍然需要调用 patch 函数进行打补丁</span></span>
<span class="line"><span style="color:#F78C6C;">24</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">25</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 移动 DOM 操作</span></span>
<span class="line"><span style="color:#F78C6C;">26</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// oldEndVNode.el 移动到 oldStartVNode.el 前面</span></span>
<span class="line"><span style="color:#F78C6C;">27</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">28</span></span>
<span class="line"><span style="color:#F78C6C;">29</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 移动 DOM 完成后，更新索引值，并指向下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">30</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">31</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">32</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">33</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在第四步中，找到了具有相同 key 值的节点。这说明，原来处于尾部的节点在新的顺序中应该处于头部。</p><p>所以只需要以头部元素 oldStartVNode.el 作为锚点，将尾部元素oldEndVNode.el 移动到锚点前面即可。</p><p>但需要注意的是，在进行 DOM 的移动操作之前，仍然需要调用 patch 函数在新旧虚拟节点之间打补丁。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当两个具有相同 key 值的节点需要进行位置调整时，虽然它们具有相同的 key 值，但它们的其他属性或子节点可能存在差异。如果没有调用 patch 函数进行补丁操作，那么移动节点后，新的位置上的节点可能会出现不一致的状态，导致渲染结果不符合预期。</p></div><p>第一步 DOM 移动操作完成后，新旧子节点及真实 DOM 节点的状态如下：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00553.jpeg" alt=""></p><p>此时真实 DOM 节点的顺序与新子节点的顺序还不一致，因为 Diff 算法还没有结束，还需要进行下一轮更新。</p><p>将更新逻辑封装到一个 while 循环中，代码如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤一：oldStartVNode 和 newStartVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤二：oldEndVNode 和 newEndVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤三：oldStartVNode 和 newEndVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤四：oldEndVNode 和 newStartVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 仍然需要调用 patch 函数进行打补丁</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 移动 DOM 操作</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// oldEndVNode.el 移动到 oldStartVNode.el 前面</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">15</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 移动 DOM 完成后，更新索引值，指向下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>每一轮更新完成后，四个索引值都会更新，所以整个 while 循环执行的条件是： 头部索引值小于等于尾部索引值。</p><p>第一轮更新结束后循环条件仍然成立，因此需要进行下一轮比较：</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>也可以用 <strong>头部节点</strong> 代指第一个子节点， <strong>尾部节点</strong> 代指最后一个子节点。</p></div><ol><li><p>比较旧子节点中的头部节点 p-1 与新子节点中的头部节点 p-2，由于两者 key 值不同，因此不可复用，所以什么都不做。</p></li><li><p>比较旧子节点中的尾部节点 p-3 与新子节点中的尾部节点 p-3，两者 key 值相同，可以复用。由于两者位置一致，都处于尾部，因此，不需要对真实 DOM 进行移动，只需要打补丁即可，代码如下：</p></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤一：oldStartVNode 和 newStartVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤二：oldEndVNode 和 newEndVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 节点在新的顺序中仍然处于尾部，不需要移动，但仍需打补丁</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 更新索引和头尾部节点变量</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤三：oldStartVNode 和 newEndVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 步骤四：oldEndVNode 和 newStartVNode 比较</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这一轮更新完成后，新旧子节点与真实 DOM节点的状态如下：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00555.jpeg" alt=""></p><p>真实 DOM 的顺序相比上一轮没有发生变化，因为这一轮没有对 DOM 节点进行移动，只对 p-3 节点进行打补丁的操作。</p><p>紧接着，进行第三轮的比较：</p><ol><li><p>比较旧的一组子节点中的头部节点 p-1 与新的一组子节点中的头部节点 p-2，看看它们是否相同。由于两者的key 值不同，不可复用，因此什么都不做。</p></li><li><p>比较旧的一组子节点中的尾部节点 p-2 与新的一组子节点中的尾部节点 p-1，看看它们是否相同，由于两者的key 值不同，不可复用，因此什么都不做。</p></li><li><p>：比较旧的一组子节点中的头部节点 p-1 与新的一组子节点中的尾部节点 p-1。两者的 key 值相同，可以复用。</p></li></ol><p>在第三步的比较中，找到了相同的节点，说明：<strong>节点 p-1 原本是头部节点，但在新的顺序中，它变成了尾部节点。</strong></p><p>因此，需要将节点 p-1 对应的真实 DOM 移动到旧子节点的尾部节点 p-2 对应的真实 DOM 后面，并更新索引。</p><p>本轮比较结束后，两组节点及真实 DOM 的状态如下：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00555.jpeg" alt=""></p><p>这一步的代码实现如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 调用 patch 函数在 oldStartVNode 和 newEndVNode 之间打补丁</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 将旧的一组子节点的头部节点对应的真实 DOM 节点 oldStartVNode.el 移动到</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 旧的一组子节点的尾部节点对应的真实 DOM 节点后面</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nextSibling</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 更新相关索引到下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">19</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">21</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">22</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">23</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>如果旧子节点的头部节点与新子节点的尾部节点匹配，则说明该旧节点所对应的真实DOM 节点需要移动到尾部。</p><p>因此，需要获取当前尾部节点的下一个兄弟节点作为锚点，即oldEndVNode.el.nextSibling。最后，更新相关索引到下一个位置。</p><p>当前新旧子节点的头部索引和尾部索引发生重合，但仍满足循环的条件，所以还会进行下一轮的更新。</p><ol><li>比较旧子节点中的头部节点 p-2 与新子节点中的头部节点 p-2。发现两者 key 值相同，可以复用。但两者在新旧两组子节点中都是头部节点，因此不需要移动，只需要调用 patch 函数进行打补丁即可。</li></ol><p>代码实现如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 调用 patch 函数在 oldStartVNode 与 newStartVNode 之间打补丁</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 更新相关索引，指向下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">nextSibling</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">15</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">21</span></span>
<span class="line"><span style="color:#F78C6C;">22</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">23</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">24</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">25</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>这一轮更新后，新旧子节点及真实 DOM 节点的状态如下：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00556.jpeg" alt=""></p><h2 id="非理想状况的处理方式" tabindex="-1">非理想状况的处理方式 <a class="header-anchor" href="#非理想状况的处理方式" aria-label="Permalink to &quot;非理想状况的处理方式&quot;">​</a></h2><p>双端 Diff 算法的每一轮比较的过程都分为四个步骤，但每一轮比较不可能都会命中四个步骤中的一个，这是非常理想的情况。</p><p>以下面这组节点为例：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00563.jpeg" alt=""></p><p>当按照双端 Diff 算法的思路对它们进行第一轮比较时，会发现无法命中四个步骤中的任何一步。</p><p>此时，只能通过只能加额外的处理步骤来处理这种非理想情况。头尾的四个节点都没有可复用的节点，就应该尝试非头尾的节点能否复用。</p><p>具体做法为，在旧子节点中寻找新子节点的头部，代码如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 遍历旧的一组子节点，试图寻找与 newStartVNode 拥有相同 key 值的节点</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// idxInOld 就是新的一组子节点的头部节点在旧的一组子节点中的索引</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findIndex</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">     )</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00564.jpeg" alt=""></p><p>当拿新子节点的头部节点 p-2 在旧子节点中寻找时，发现可复用的节点在索引为 1 的位置。</p><p>说明节点 p-2 原本不是头部节点，但在更新后它应该变为头部节点。</p><p>所以需要将节点 p-2 对应的真实 DOM 节点移动到旧子节点的头部节点 p-1 对应的真实 DOM 节点之前。</p><p>具体实现如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 遍历旧 children，试图寻找与 newStartVNode 拥有相同 key 值的元素</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findIndex</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     )</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// idxInOld 大于 0，说明找到了可复用的节点，并且需要将其对应的真实 DOM 移动到头部</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">// idxInOld 位置对应的 vnode 就是需要移动的节点</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">       </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">// 不要忘记除移动操作外还应该打补丁</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">21</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">// 将 vnodeToMove.el 移动到头部节点 oldStartVNode.el 之前，因此使用后者作为锚点</span></span>
<span class="line"><span style="color:#F78C6C;">22</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">23</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">// 由于位置 idxInOld 处的节点所对应的真实 DOM 已经移动到了别处，因此将其设置为 undefined</span></span>
<span class="line"><span style="color:#F78C6C;">24</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#F78C6C;">25</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">// 最后更新 newStartIdx 到下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">26</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">27</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">28</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">29</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>经过上面的操作后，新旧两组子节点以及真实 DOM 节点的状态如下：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00565.jpeg" alt=""></p><p>接着，双端 Diff 算法会继续进行。</p><p>需要注意的是，过程中会遇到之前被设为 undefined 的节点。这说明该节点已经被处理过了，因此可以直接跳过。为此，需要补充这部分逻辑的代码。具体如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 增加两个判断分支，如果头尾部节点为 undefined，则说明该节点已经被处理过了，直接跳到下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findIndex</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">     )</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;">       </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">21</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">22</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">23</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#F78C6C;">24</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">25</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">26</span></span>
<span class="line"><span style="color:#F78C6C;">27</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">28</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="添加新元素" tabindex="-1">添加新元素 <a class="header-anchor" href="#添加新元素" aria-label="Permalink to &quot;添加新元素&quot;">​</a></h2><p>当一轮比较过程中不会命中四个步骤中的任何一步时，会拿新的一组子节点中的头部节点去旧的一组子节点中寻找可复用的节点。然而，并不一定能找到。</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00571.jpeg" alt=""></p><p>对这组节点进行第一轮比较时，无法找到可复用的节点。因为旧子节点中根本没有 p-4 节点。</p><p>这说明节点 p-4 是一个新增节点，因为它是新子节点中的头节点，所以直接将它挂载到旧子节点的头部节点对应的真实 DOM 节点前即可。</p><p>代码如下：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 增加两个判断分支，如果头尾部节点为 undefined，则说明该节点已经被处理过了，直接跳到下一个位置</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">04</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">oldEndVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">14</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">16</span><span style="color:#F07178;">     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findIndex</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F78C6C;">17</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">key</span></span>
<span class="line"><span style="color:#F78C6C;">18</span><span style="color:#F07178;">     )</span></span>
<span class="line"><span style="color:#F78C6C;">19</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">20</span><span style="color:#F07178;">       </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">21</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">22</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">insert</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">vnodeToMove</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">23</span><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">idxInOld</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">undefined</span></span>
<span class="line"><span style="color:#F78C6C;">24</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">25</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">// 将 newStartVNode 作为新节点挂载到头部，使用当前头部节点 oldStartVNode.el 作为锚点</span></span>
<span class="line"><span style="color:#F78C6C;">26</span><span style="color:#F07178;">       </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">27</span><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">28</span><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">newStartVNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#F78C6C;">29</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">30</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>上面的代码还存在一些问题，如果频繁对尾部节点进行更新，会导致 oldEndIdx 小于 oldStartIdx 而结束更新的过程。</p><p>如下所示：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00577.jpeg" alt=""></p><p>节点 p-4 直接在更新过程中被遗漏了，没有得到任何处理。</p><p>为了弥补这个缺陷，需要添加额外的处理代码：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">04</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 循环结束后检查索引值的情况，</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (oldEndIdx </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> oldStartIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 如果满足条件，则说明有新的节点遗留，需要挂载它们</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newStartIdx</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newEndIdx</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">patch</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">newChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartVNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>在 while 循环结束后增加一个条件判断，检查四个索引值的情况。如果还存在未挂载的新节点，将它们一一挂载到 oldStartVNode 对应的真实 DOM 节点前。</p><h2 id="移除不存在的元素" tabindex="-1">移除不存在的元素 <a class="header-anchor" href="#移除不存在的元素" aria-label="Permalink to &quot;移除不存在的元素&quot;">​</a></h2><p>我们还会遇到新节点中的节点少于旧节点的情况，此时，需要移除元素。</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00578.jpeg" alt=""></p><p>对上面这组节点进行数轮更新后，新旧两组子节点以及真实 DOM 节点的状态如下：</p><p><img src="https://res.weread.qq.com/wrepub/CB_3300028078_image00580.jpeg" alt=""></p><p>此时变量 newStartIdx 的值大于变量 newEndIdx 的值，满足更新停止的条件，于是更新结束。</p><p>但此时旧的一组子节点中仍存在未被处理的节点，应该将其移除。因此，需要增加额外的代码来处理它：</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">01</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> (oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">02</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">03</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">04</span></span>
<span class="line"><span style="color:#F78C6C;">05</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (oldEndIdx </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> oldStartIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> newEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">06</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 添加新节点</span></span>
<span class="line"><span style="color:#F78C6C;">07</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 省略部分代码</span></span>
<span class="line"><span style="color:#F78C6C;">08</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> (newEndIdx </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> newStartIdx </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> oldStartIdx </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#A6ACCD;"> oldEndIdx) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">09</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">// 移除操作</span></span>
<span class="line"><span style="color:#F78C6C;">10</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldStartIdx</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">oldEndIdx</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F78C6C;">11</span><span style="color:#F07178;">     </span><span style="color:#82AAFF;">unmount</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">oldChildren</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">])</span></span>
<span class="line"><span style="color:#F78C6C;">12</span><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F78C6C;">13</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>与处理新增节点类似，在 while 循环结束后添加一个 elseif 的分支，用来卸载已不存在的节点。此时，处于 oldStartIdx 和 oldEndIdx 这个区间的节点应该被卸载。</p>`,96),e=[o];function t(c,r,y,F,D,C){return n(),l("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
