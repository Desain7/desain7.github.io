<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Desain</title>
        <link>https://desain7.top</link>
        <description>要从那时起，不再动摇（前端相关技术分享）</description>
        <lastBuildDate>Wed, 23 Aug 2023 10:23:20 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-cn</language>
        <image>
            <title>Desain</title>
            <url>https://oss.desain7.top/pic94500053.jpg</url>
            <link>https://desain7.top</link>
        </image>
        <copyright>Copyright (c) 2022-present, Desain</copyright>
        <item>
            <title><![CDATA[新年快乐，虎虎生威]]></title>
            <link>https://desain7.top./_configDoc/newyear/2022.html</link>
            <guid>https://desain7.top./_configDoc/newyear/2022.html</guid>
            <pubDate>Sun, 30 Jan 2022 16:00:00 GMT</pubDate>
            <description><![CDATA[给大家送上`红包封面`和`红包`
新的一年祝大家新年快乐，虎年大吉，虎虎生威，如虎添翼，恭喜发财，财源滚滚
微信`扫码领取`红包`封面`
支付宝搜索`红包`,选择`收口令红包`
输入`粥里有勺糖01`]]></description>
            <content:encoded><![CDATA[<h1 id="新年快乐-虎虎生威" tabindex="-1">新年快乐，虎虎生威 <a class="header-anchor" href="#新年快乐-虎虎生威" aria-label="Permalink to &quot;新年快乐，虎虎生威&quot;">&ZeroWidthSpace;</a></h1>
<p>给大家送上<code>红包封面</code>和<code>红包</code></p>
<p>新的一年祝大家新年快乐，虎年大吉，虎虎生威，如虎添翼，恭喜发财，财源滚滚</p>
<p>微信<code>扫码领取</code>红包<code>封面</code></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTY0MzYzMTQ2MjY5OQ==643631462699" alt="图片"></p>
<p>支付宝搜索<code>红包</code>,选择<code>收口令红包</code></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTY0MzYzMTg5MDgzNA==643631890834" alt="图片"></p>
<p>输入<code>粥里有勺糖01</code>领取<code>红包</code></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTY0MzcyMDEyMzQyMw==643720123423" alt="图片"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[关于自己]]></title>
            <link>https://desain7.top./aboutme.html</link>
            <guid>https://desain7.top./aboutme.html</guid>
            <pubDate>Fri, 10 Dec 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[99年出生，标准的理工男一枚,毕业于(西南石油大学),热爱开源与知识分享
目前就职于 🛵美团🛵（Base 北京）
 :sparkles:当下
巩固自己的基础知识，完善博客中规划的剩余内容
提升技术]]></description>
            <content:encoded><![CDATA[<h1 id="关于自己" tabindex="-1">关于自己 <a class="header-anchor" href="#关于自己" aria-label="Permalink to &quot;关于自己&quot;">&ZeroWidthSpace;</a></h1>
<p>99年出生，标准的理工男一枚,毕业于(<a href="https://www.swpu.edu.cn/" target="_blank" rel="noreferrer">西南石油大学</a>),热爱开源与知识分享</p>
<p>目前就职于 🛵<strong>美团</strong>🛵（Base 北京）</p>
<h2 id="当下" tabindex="-1">✨当下 <a class="header-anchor" href="#当下" aria-label="Permalink to &quot;:sparkles:当下&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNDcyMTQ4NTMyOA==604721485328" alt="图片"></p>
<p>巩固自己的基础知识，完善博客中规划的剩余内容</p>
<p>提升技术深度</p>
<h2 id="未来" tabindex="-1">🚀未来 <a class="header-anchor" href="#未来" aria-label="Permalink to &quot;:rocket:未来&quot;">&ZeroWidthSpace;</a></h2>
<p>沉淀技术,广度与深度3/7分，打磨自己做的一些小应用,确定自己最终深挖的领域</p>
<h2 id="座右铭" tabindex="-1">📝座右铭 <a class="header-anchor" href="#座右铭" aria-label="Permalink to &quot;:pencil:座右铭&quot;">&ZeroWidthSpace;</a></h2>
<p>你的指尖,拥有改变世界的力量😄</p>
<h2 id="联系我" tabindex="-1">☎️联系我 <a class="header-anchor" href="#联系我" aria-label="Permalink to &quot;:phone:联系我&quot;">&ZeroWidthSpace;</a></h2>
<p><strong>邮箱</strong>：engineerzjl@foxmail.com</p>
<p><strong>微信</strong>：</p>
<img src="https://img.cdn.sugarat.top/mdImg/MTYxMzIwMTA0NzIyNg==wx.jpg" style="width:200px;">
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[前端校招考点汇总]]></title>
            <link>https://desain7.top./_configDoc/top/campusProblem.html</link>
            <guid>https://desain7.top./_configDoc/top/campusProblem.html</guid>
            <pubDate>Fri, 10 Dec 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[ 措辞
* 了解：听说过这个概念，知道是干什么的
* 熟悉：能快速地利用这个技术构建一个可用的应用
* 精通：读过源码，了解其原理，可对其修改以满足某些特殊需求
笔者能力有限，如有遗漏之处，请在评论中]]></description>
            <content:encoded><![CDATA[<h1 id="前端校招考点汇总" tabindex="-1">前端校招考点汇总 <a class="header-anchor" href="#前端校招考点汇总" aria-label="Permalink to &quot;前端校招考点汇总&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="措辞" tabindex="-1">措辞 <a class="header-anchor" href="#措辞" aria-label="Permalink to &quot;措辞&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>了解：听说过这个概念，知道是干什么的</li>
<li>熟悉：能快速地利用这个技术构建一个可用的应用</li>
<li>精通：读过源码，了解其原理，可对其修改以满足某些特殊需求</li>
</ul>
<p>笔者能力有限，如有遗漏之处，请在评论中补充，或者直接提PR完</p>
<redirectBtn href="/offer/campus/index" text="查看" />]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[内容预告-最近准备整理的内容]]></title>
            <link>https://desain7.top./_configDoc/top/notice.html</link>
            <guid>https://desain7.top./_configDoc/top/notice.html</guid>
            <pubDate>Sun, 03 Oct 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[由于砖太烫手，这部分内容鸽了有大办年了，争取21Q4完善其中一部分内容
你也可以在评论区留下所遇到的相关面试题哟
 随笔内容
* Node.js 中的ESM
* 模块联邦
* monorepo
  *]]></description>
            <content:encoded><![CDATA[<h1 id="内容预告-最近准备撰写的内容" tabindex="-1">内容预告-最近准备撰写的内容 <a class="header-anchor" href="#内容预告-最近准备撰写的内容" aria-label="Permalink to &quot;内容预告-最近准备撰写的内容&quot;">&ZeroWidthSpace;</a></h1>
<p>由于砖太烫手，这部分内容鸽了有大办年了，争取21Q4完善其中一部分内容</p>
<p>你也可以在评论区留下所遇到的相关面试题哟</p>
<h2 id="随笔内容" tabindex="-1">随笔内容 <a class="header-anchor" href="#随笔内容" aria-label="Permalink to &quot;随笔内容&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>Node.js 中的ESM</li>
<li>模块联邦</li>
<li>monorepo
<ul>
<li>learn</li>
<li>yarn</li>
<li>pnpm</li>
</ul>
</li>
<li>Vite
<ul>
<li>原理</li>
<li>插件机制</li>
<li>mini版实现</li>
</ul>
</li>
<li>NCC</li>
<li>bundle与chunk</li>
<li>web SDK开发
<ul>
<li>工程模板</li>
<li>通用鼠标指针SDK</li>
<li>监控sdk实现</li>
</ul>
</li>
<li>Node SDK
<ul>
<li>工程模板创建</li>
</ul>
</li>
<li>前端水印实现</li>
<li>Nginx
<ul>
<li>学习</li>
<li>njs</li>
</ul>
</li>
<li>npx</li>
<li>pnpm yarn npm 使用对比</li>
<li>一键引入工程工具的CLI工具开发</li>
<li>vite插件开发实践</li>
</ul>
<h2 id="浏览器专题" tabindex="-1">🌏<a href="./../../bigWeb/browser/">浏览器专题</a> <a class="header-anchor" href="#浏览器专题" aria-label="Permalink to &quot;:earth_asia:[浏览器专题](./../../bigWeb/browser/index.md)&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="./../../bigWeb/browser/core.html">内核</a></li>
<li><a href="./../../bigWeb/browser/render.html">渲染机制</a></li>
<li><a href="./../../bigWeb/browser/block.html">阻塞渲染</a></li>
<li><a href="./../../bigWeb/browser/cache.html">缓存机制</a></li>
<li><a href="./../../bigWeb/browser/storage.html">本地存储</a></li>
<li><a href="./../../bigWeb/browser/safe.html">安全</a></li>
<li><a href="./../../bigWeb/browser/cors.html">跨域与跨站</a></li>
<li><a href="./../../bigWeb/browser/eventloop.html">event loop</a></li>
<li><a href="./../../bigWeb/browser/problem.html">常见面试题</a></li>
</ul>
<h2 id="校招面试" tabindex="-1">📝<a href="./../../bigWeb/browser/">校招面试</a> <a class="header-anchor" href="#校招面试" aria-label="Permalink to &quot;:pencil:[校招面试](./../../bigWeb/browser/index.md)&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="./../../offer/campus/javascript.html">JS</a></li>
<li><a href="./../../offer/campus/internet.html">计网</a></li>
<li><a href="./../../offer/campus/css.html">CSS</a></li>
<li><a href="./../../offer/campus/html.html">HTML</a></li>
<li>操作系统</li>
<li>框架</li>
<li>。。。未完待续</li>
</ul>
<h2 id="性能优化专题" tabindex="-1">🚀性能优化专题 <a class="header-anchor" href="#性能优化专题" aria-label="Permalink to &quot;:rocket:性能优化专题&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>浏览器</li>
<li>首屏</li>
<li>白屏</li>
<li>长列表</li>
<li>图片</li>
<li>。。。</li>
</ul>
<h2 id="大前端相关概念" tabindex="-1">⚡大前端相关概念 <a class="header-anchor" href="#大前端相关概念" aria-label="Permalink to &quot;:zap:大前端相关概念&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="./../../technology/theory/serverless.html">Serverless</a></li>
<li>css架构</li>
<li>微前端</li>
<li>lowCode</li>
<li>容器化</li>
<li>智能化</li>
<li>跨端</li>
<li>小程序</li>
<li>....</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[我收藏的资源]]></title>
            <link>https://desain7.top./_configDoc/top/address.html</link>
            <guid>https://desain7.top./_configDoc/top/address.html</guid>
            <pubDate>Fri, 30 Jul 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[
 电子书相关
* 漫画算法
* 鸠摩搜书
* GeekGist. - 优质电子书资源站点
* IT eBooks - 优质电子书资源站点（外）
* 书栈网 - IT 互联网 免费的开源编程书籍
* ]]></description>
            <content:encoded><![CDATA[<h1 id="我收藏的资源" tabindex="-1">我收藏的资源 <a class="header-anchor" href="#我收藏的资源" aria-label="Permalink to &quot;我收藏的资源&quot;">&ZeroWidthSpace;</a></h1>
<blockquote>
<p>个人收藏的一些在线资源,欢迎评论区推荐你觉得好的资源,大家一起学习,共同进步</p>
</blockquote>
<h2 id="电子书相关" tabindex="-1">电子书相关 <a class="header-anchor" href="#电子书相关" aria-label="Permalink to &quot;电子书相关&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.cxyxiaowu.com/suanfa-2/manhuasuanfa" target="_blank" rel="noreferrer">漫画算法</a></li>
<li><a href="https://www.jiumodiary.com/" target="_blank" rel="noreferrer">鸠摩搜书</a></li>
<li><a href="https://geekgist.com/" target="_blank" rel="noreferrer">GeekGist</a>. - 优质电子书资源站点</li>
<li><a href="https://it-ebooks.info/" target="_blank" rel="noreferrer">IT eBooks</a> - 优质电子书资源站点（外）</li>
<li><a href="https://www.bookstack.cn/" target="_blank" rel="noreferrer">书栈网</a> - IT 互联网 免费的开源编程书籍</li>
<li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="noreferrer">free-programming-books-zh_CN</a> - 免费的编程中文书籍索引</li>
<li><a href="https://wangdoc.com/" target="_blank" rel="noreferrer">网道</a> - 为互联网开发提供高质量的、拥有自主版权的、可以自由使用的中文软件文档</li>
<li><a href="https://h-wakanda.github.io/css-animation-101-cn/" target="_blank" rel="noreferrer">css-animation-101</a> - Css动画入门</li>
<li><a href="https://cn.history.js.org/index.html" target="_blank" rel="noreferrer">javascript 20年</a></li>
<li><a href="https://dmitripavlutin.com/tag/react/" target="_blank" rel="noreferrer">&quot;react&quot; posts</a></li>
<li><a href="https://websec.readthedocs.io/zh/latest" target="_blank" rel="noreferrer">Web安全学习资料</a></li>
</ul>
<h2 id="在线学习" tabindex="-1">在线学习 <a class="header-anchor" href="#在线学习" aria-label="Permalink to &quot;在线学习&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.freecodecamp.org/learn/" target="_blank" rel="noreferrer">freeCodeCamp</a>- 前端相关技术栈实践入门</li>
<li><a href="https://learngitbranching.js.org/" target="_blank" rel="noreferrer">learn Git Branching</a> - 在线git 操作学习</li>
<li><a href="https://try.redis.io/" target="_blank" rel="noreferrer">在线Redis</a> - try redis</li>
</ul>
<h2 id="vs-code插件" tabindex="-1">Vs Code插件 <a class="header-anchor" href="#vs-code插件" aria-label="Permalink to &quot;Vs Code插件&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker" target="_blank" rel="noreferrer">Code Spell Checker​</a> - 代码拼写检查</li>
</ul>
<h2 id="资源集合导航" tabindex="-1">资源集合导航 <a class="header-anchor" href="#资源集合导航" aria-label="Permalink to &quot;资源集合导航&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.code-nav.cn/" target="_blank" rel="noreferrer">编程导航</a></li>
<li><a href="https://adzhp.cn/" target="_blank" rel="noreferrer">爱达杂货铺</a></li>
<li><a href="https://devtool.tech/" target="_blank" rel="noreferrer">开发者武器库</a> - 属于程序员的工具箱</li>
<li><a href="https://chrome.zzzmh.cn/" target="_blank" rel="noreferrer">极简插件</a> - Chrome扩展插件商店_优质crx应用</li>
<li><a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noreferrer">阿里巴巴开源镜像站</a> - 阿里云官方镜像站</li>
<li><a href="https://n6app.com/" target="_blank" rel="noreferrer">牛6网</a> - 常用网址聚合</li>
<li><a href="https://tool.lu/" target="_blank" rel="noreferrer">在线工具</a> - 你的工具箱</li>
<li><a href="https://shengxinjing.cn/" target="_blank" rel="noreferrer">大圣编程自学网</a></li>
</ul>
<h2 id="代码-仓库" tabindex="-1">代码&amp;仓库 <a class="header-anchor" href="#代码-仓库" aria-label="Permalink to &quot;代码&amp;仓库&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://github.com/ryanmcdermott/clean-code-javascript#set-default-objects-with-objectassign" target="_blank" rel="noreferrer">clean-code-javascript​</a>​ - 整洁代码实践精髓</li>
<li><a href="https://ld246.com/article/1553314584340?utm_source=ld246.com" target="_blank" rel="noreferrer">每天 30 秒系列之 JavaScript 代码</a> - 精选常见代码集</li>
<li><a href="https://ld246.com/tag/30seconds" target="_blank" rel="noreferrer">30Seconds</a> - 前端知识精选集，包含 HTML、CSS、JavaScript、React、Node、安全等方面，每天仅需 30 秒。</li>
<li><a href="https://www.xicons.org/#/zh-CN" target="_blank" rel="noreferrer">xicons</a> - Icons for Vue &amp; React</li>
<li><a href="https://github.com/daniel-lundin/snabbt.js" target="_blank" rel="noreferrer">snabbt.js</a> - Fast animations with Javascript and CSS transforms</li>
</ul>
<h2 id="开发利器" tabindex="-1">开发利器 <a class="header-anchor" href="#开发利器" aria-label="Permalink to &quot;开发利器&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://u.tools/docs/guide/about-uTools.html#%E6%88%AA%E5%9B%BE%E9%A2%84%E8%A7%88" target="_blank" rel="noreferrer">uTools</a> - uTools 是一个极简、插件化的现代桌面软件，通过自由选配丰富的插件，打造得心应手的工具集合。</li>
</ul>
<h2 id="文档手册-信息查询" tabindex="-1">文档手册 &amp; 信息查询 <a class="header-anchor" href="#文档手册-信息查询" aria-label="Permalink to &quot;文档手册 &amp; 信息查询&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noreferrer">emoji-cheat-sheet</a> - emoji 表情对应 的字符（可在markdown文档中直接使用）</li>
<li><a href="https://whatwg-cn.github.io/html/" target="_blank" rel="noreferrer">HTML Standard</a> - 定义了Web平台 很大一部分的内容（非常多，不仅仅只html）</li>
<li><a href="https://www.emojiall.com/zh-hans" target="_blank" rel="noreferrer">Emoji表情符号词典</a></li>
<li><a href="https://acronyms.thefreedictionary.com/hdx" target="_blank" rel="noreferrer">英文缩写查询网站</a></li>
<li><a href="https://caniuse.com/" target="_blank" rel="noreferrer">Can I Use</a> - 查询 &quot;三剑客&quot;相关特性 的兼容范围</li>
<li><a href="https://node.green/" target="_blank" rel="noreferrer">node.green</a> 不同Node版本对ES的支持程度</li>
<li><a href="https://kangax.github.io/compat-table/es6/" target="_blank" rel="noreferrer">compat-table</a> ES新提案进度，与浏览器对ES个版本的支持程度 查询</li>
<li><a href="https://jscig.github.io/#" target="_blank" rel="noreferrer">JavaScript</a> 中文兴趣组</li>
<li><a href="https://guide.aotu.io/index.html" target="_blank" rel="noreferrer">凹凸实验室 - 前端代码规范</a></li>
<li><a href="https://lab.magiconch.com/nbnhhsh/" target="_blank" rel="noreferrer">能不能好好说话</a> - yyds</li>
<li><a href="https://webgradients.com/" target="_blank" rel="noreferrer">webgradients</a> - Free Gradients Collection: Sketch/Photoshop/CSS</li>
<li><a href="https://uigradients.com/#EmeraldWater" target="_blank" rel="noreferrer">uiGradients</a> - uiGradients is a handpicked collection of beautiful color gradients for designers and developers.</li>
<li><a href="http://cn.piliapp.com/symbol/" target="_blank" rel="noreferrer">特殊符号</a> - 特殊符号查询</li>
<li><a href="https://jkchao.github.io/typescript-book-chinese/#why" target="_blank" rel="noreferrer">深入理解 TypeScript</a></li>
<li><a href="https://f2e.tech/" target="_blank" rel="noreferrer">阿里巴巴知识图谱</a></li>
<li><a href="https://www.postcss.parts/" target="_blank" rel="noreferrer">postcss插件</a></li>
</ul>
<h2 id="在线演示" tabindex="-1">在线演示 <a class="header-anchor" href="#在线演示" aria-label="Permalink to &quot;在线演示&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://stackblitz.com/" target="_blank" rel="noreferrer">stackblitz</a> - 在线代码编辑器 - Code the Future In Your Browser.</li>
<li><a href="https://codepen.io/" target="_blank" rel="noreferrer">codepen</a> - 在线web demo编辑 - （很多高能的CSS demo）分享web示例代码片段</li>
</ul>
<h2 id="在线工具" tabindex="-1">在线工具 <a class="header-anchor" href="#在线工具" aria-label="Permalink to &quot;在线工具&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://unbug.github.io/codelf/" target="_blank" rel="noreferrer">CODELF</a> - 解决变量命名难题</li>
<li><a href="https://carbon.now.sh/" target="_blank" rel="noreferrer">carbon</a> - 为各种语言代码上色然后 导出 SVG/PNG 用于分享或者演示</li>
<li><a href="https://regexper.com/" target="_blank" rel="noreferrer">regexper</a> - 正则逻辑可视化</li>
<li><a href="https://cubic-bezier.com" target="_blank" rel="noreferrer">cubic-bezier</a> - 贝塞尔曲线</li>
<li><a href="https://tool.lu/nav/" target="_blank" rel="noreferrer">tool.lu</a> - 在线工具合集</li>
<li><a href="https://999fin.com/" target="_blank" rel="noreferrer">999fin</a> - 南湖-在线工具集合</li>
<li><a href="https://zh.snipaste.com/" target="_blank" rel="noreferrer">snipaste</a> - 截图+ 贴图，提高您的工作效率.</li>
<li><a href="https://fabiaoqing.com/" target="_blank" rel="noreferrer">发表情</a> -  斗图必备</li>
<li><a href="https://tinypng.com/" target="_blank" rel="noreferrer">tinypng</a> - 图片压缩</li>
<li><a href="https://npm.devtool.tech/" target="_blank" rel="noreferrer">npm.devtool.tech</a> - 在这里了解一个 npm 包的一切事情，发布体积，安装体积，打包体积，代码体积，你可在这里在线运行每一个库的代码，对比相似库的质量</li>
<li><a href="https://www.remove.bg/zh" target="_blank" rel="noreferrer">remove.bg</a> - 图片背景消除 - 100% 全自动且免费</li>
<li><a href="https://hoppscotch.io/" target="_blank" rel="noreferrer">Hoppscotch</a> - Open source API development ecosystem</li>
<li><a href="https://www.canva.cn/?display-com-option=true" target="_blank" rel="noreferrer">Canva中文官网</a> - Canva可画在线平面设计软件_免费设计模板素材和海量正版图片</li>
<li><a href="https://jsx-lite.builder.io/?outputTab=vue" target="_blank" rel="noreferrer">JSX Lite Fiddle</a> -  compile to common frameworks, import from popular tools</li>
<li><a href="https://www.staticfile.org/" target="_blank" rel="noreferrer">Staticfile CDN</a> - 免费、快速、开放的 CDN 服务</li>
<li><a href="https://www.tuhaokuai.com/" target="_blank" rel="noreferrer">图好快</a> - 在线图片压缩</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[美团招聘]]></title>
            <link>https://desain7.top./_configDoc/show/bole.html</link>
            <guid>https://desain7.top./_configDoc/show/bole.html</guid>
            <pubDate>Fri, 16 Jul 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[全年招聘前端&客户端
进度可查，可随时骚扰，欢迎同学们投递，可加入QQ交流群：1047199470
 部门介绍
到店事业群-平台技术部-到店餐饮研发
TODO
 校园招聘
每年的春招（3-5月），秋招]]></description>
            <content:encoded><![CDATA[<h1 id="美团招聘" tabindex="-1">美团招聘 <a class="header-anchor" href="#美团招聘" aria-label="Permalink to &quot;美团招聘&quot;">&ZeroWidthSpace;</a></h1>
<p><strong>全年</strong>招聘前端&amp;客户端</p>
<p>进度可查，可随时骚扰，欢迎同学们投递，可加入QQ交流群：<strong>1047199470</strong></p>
<h2 id="部门介绍" tabindex="-1">部门介绍 <a class="header-anchor" href="#部门介绍" aria-label="Permalink to &quot;部门介绍&quot;">&ZeroWidthSpace;</a></h2>
<p>到店事业群-平台技术部-到店餐饮研发</p>
<p>TODO</p>
<h2 id="校园招聘" tabindex="-1">校园招聘 <a class="header-anchor" href="#校园招聘" aria-label="Permalink to &quot;校园招聘&quot;">&ZeroWidthSpace;</a></h2>
<p>每年的春招（3-5月），秋招（7-10月）开启</p>
<p>扫描内推码投递</p>
<img src="https://img.cdn.sugarat.top/mdImg/MTYzMzMzOTI3NzE0NA==633339277144" style="max-width:320px;">
<h2 id="社招" tabindex="-1">社招 <a class="header-anchor" href="#社招" aria-label="Permalink to &quot;社招&quot;">&ZeroWidthSpace;</a></h2>
<p>反馈快，效率高。</p>
<p>Base 北京/上海。</p>
<p>长期招前端&amp;客户端，发简历到邮箱 <strong><a href="mailto:engineerzjl@foxmail.com" target="_blank" rel="noreferrer">engineerzjl@foxmail.com</a></strong> 进行内推。</p>
<p>也可加微信小窗私聊，进一步了解岗位部门相关信息</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[分享小册《Chrome-DevTools的使用技巧》中的精华]]></title>
            <link>https://desain7.top./bigWeb/browser/chrome-devtools-study.html</link>
            <guid>https://desain7.top./bigWeb/browser/chrome-devtools-study.html</guid>
            <pubDate>Sun, 16 May 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[ 前言
花了大概半天时间 温习了一遍（主要是忘了O(∩_∩)O哈哈~）掘金小册：你不知道的 Chrome 调试技巧-
和大家分享一些个人认为比较实用的内容，感兴趣的朋友推荐去阅读一下这本小册
 查看详]]></description>
            <content:encoded><![CDATA[<h1 id="分享小册《chrome-devtools的使用技巧》中的精华" tabindex="-1">分享小册《Chrome-DevTools的使用技巧》中的精华 <a class="header-anchor" href="#分享小册《chrome-devtools的使用技巧》中的精华" aria-label="Permalink to &quot;分享小册《Chrome-DevTools的使用技巧》中的精华&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">&ZeroWidthSpace;</a></h2>
<p>花了大概半天时间 温习了一遍（主要是忘了O(∩_∩)O哈哈~）<a href="https://juejin.cn/book/6844733783166418958" target="_blank" rel="noreferrer">掘金小册：你不知道的 Chrome 调试技巧</a>-&gt; <a href="https://www.frontendwingman.com/Chrome/" target="_blank" rel="noreferrer">开源免费版链接</a></p>
<p>和大家分享一些个人认为比较实用的内容，感兴趣的朋友推荐去阅读一下这本小册</p>
<h2 id="查看详细chrome版本信息" tabindex="-1">查看详细Chrome版本信息 <a class="header-anchor" href="#查看详细chrome版本信息" aria-label="Permalink to &quot;查看详细Chrome版本信息&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器中输入<a href="chrome://version/" target="_blank" rel="noreferrer">chrome://version/</a>查看</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MDM4NTEyMw==621240385123" alt="图片"></p>
<h2 id="预设代码块" tabindex="-1">预设代码块 <a class="header-anchor" href="#预设代码块" aria-label="Permalink to &quot;预设代码块&quot;">&ZeroWidthSpace;</a></h2>
<p>可以将一些高频使用的<code>工具脚本</code>代码块保存下来，下次使用可以直接调用</p>
<h3 id="例如-查看掘金页面中已加载的文章" tabindex="-1">例如:查看掘金页面中已加载的文章 <a class="header-anchor" href="#例如-查看掘金页面中已加载的文章" aria-label="Permalink to &quot;例如:查看掘金页面中已加载的文章&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">posts</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">$$</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">.title-row&gt;a</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">table</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">posts</span><span style="color: #89DDFF">,</span><span style="color: #F07178">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">textContent</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">href</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">])</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MjcyNjA4Mw==621242726083" alt="图片"></p>
<p>接下来复用这个代码块,在Source面板的 snippets中新建一个Snippet并将代码块写入</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzc5ODI4Mzc2Nw==617798283767" alt="图片"></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0Mjk1MzAzMw==621242953033" alt="图片"></p>
<p>从今以后就可以直接command运行，通过指令运行 <code>!scriptName</code>即可执行脚本</p>
<p>tips: 默认打开Command会有一个 <code>&gt;</code> 记得先删除</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MzAyODY3Mg==621243028672" alt="图片"></p>
<h2 id="command面板" tabindex="-1">Command面板 <a class="header-anchor" href="#command面板" aria-label="Permalink to &quot;Command面板&quot;">&ZeroWidthSpace;</a></h2>
<p>快捷键 Ctrl + Shift + P</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MTgxODMyMw==621241818324" alt="图片"></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MTg0NzMxNA==621241847314" alt="图片"></p>
<h3 id="截图" tabindex="-1">截图 <a class="header-anchor" href="#截图" aria-label="Permalink to &quot;截图&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzc5NzM3MzkzMg==617797373932" alt=""></p>
<ul>
<li>页面截图: Capture full size screenshot</li>
<li>指定区域: Capture area screenshot</li>
<li>指定DOM节点: Capture node screenshot</li>
<li>当前屏幕: Capture screenshot</li>
</ul>
<h3 id="显示console时间戳" tabindex="-1">显示console时间戳 <a class="header-anchor" href="#显示console时间戳" aria-label="Permalink to &quot;显示console时间戳&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MjAxMzgwNQ==621242013805" alt="图片"></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MjA0NDg0MA==621242044840" alt="图片"></p>
<h2 id="console面板相关" tabindex="-1">Console面板相关 <a class="header-anchor" href="#console面板相关" aria-label="Permalink to &quot;Console面板相关&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="copy方法" tabindex="-1">copy方法 <a class="header-anchor" href="#copy方法" aria-label="Permalink to &quot;copy方法&quot;">&ZeroWidthSpace;</a></h3>
<p>有一个全局的<code>copy</code>方法，可以在console面板中<strong>复制任何能够拿到的资源到剪贴板中</strong></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MDc2NjkzMQ==621240766931" alt="图片"></p>
<h3 id="符号" tabindex="-1">$符号 <a class="header-anchor" href="#符号" aria-label="Permalink to &quot;$符号&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="number" tabindex="-1">$number <a class="header-anchor" href="#number" aria-label="Permalink to &quot;$number&quot;">&ZeroWidthSpace;</a></h4>
<p>$0 是对我们当前在 Element面板 中选中的 html 节点的引用</p>
<p>$1 是对上一次我们选择的节点的引用， $2 是对在那之前选择的节点的引用以此类推,直到 $4</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzc5OTMzNTA4MQ==617799335081" alt=""></p>
<h4 id="与" tabindex="-1">$与$$ <a class="header-anchor" href="#与" aria-label="Permalink to &quot;$与$$&quot;">&ZeroWidthSpace;</a></h4>
<ul>
<li>$ 等价于 document.querySelector()</li>
<li>$$ 等价于 document.querySelectorAll()</li>
</ul>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzc5OTUxNzIwNw==617799517207" alt=""></p>
<h4 id="" tabindex="-1">$_ <a class="header-anchor" href="#" aria-label="Permalink to &quot;$_&quot;">&ZeroWidthSpace;</a></h4>
<p>上次打印结果的引用</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzc5OTc2NjQ4Ng==617799766486" alt=""></p>
<h3 id="console-table" tabindex="-1">console.table <a class="header-anchor" href="#console-table" aria-label="Permalink to &quot;console.table&quot;">&ZeroWidthSpace;</a></h3>
<p>可以将 数组 (或者是 类数组 的对象)打印成一个漂亮的表格</p>
<p>在需要使用<code>console.log(arrData)</code>查看数据时，换成<code>console.table(arrData,columns)</code>，不妨会更直观一些</p>
<p>第二个参数指定要展示的列</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MTQzNzg0NQ==621241437845" alt="图片"></p>
<h3 id="time与timeend" tabindex="-1">time与timeEnd <a class="header-anchor" href="#time与timeend" aria-label="Permalink to &quot;time与timeEnd&quot;">&ZeroWidthSpace;</a></h3>
<p><code>console.time</code>与<code>console.timeEnd</code>，两个方法配合计算并打印时间戳</p>
<p>通常用于测试方法的执行时间</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTI0MTY3NDgxNg==621241674816" alt="图片"></p>
<h2 id="network面板" tabindex="-1">Network面板 <a class="header-anchor" href="#network面板" aria-label="Permalink to &quot;Network面板&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="filter" tabindex="-1">Filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;Filter&quot;">&ZeroWidthSpace;</a></h3>
<p>用于过滤请求</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzgwNDk3NzgyNg==617804977826" alt="图片"></p>
<p>通过 <code>-</code> 查看所有筛选条件</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxNzgwNTA3MDc3Ng==617805070776" alt="图片"></p>
<h3 id="自定义请求表中展示的项" tabindex="-1">自定义请求表中展示的项 <a class="header-anchor" href="#自定义请求表中展示的项" aria-label="Permalink to &quot;自定义请求表中展示的项&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTIxODY5Mzc4Mw==621218693783" alt="图片"></p>
<h3 id="重新发送请求" tabindex="-1">重新发送请求 <a class="header-anchor" href="#重新发送请求" aria-label="Permalink to &quot;重新发送请求&quot;">&ZeroWidthSpace;</a></h3>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTIxODc3NTE2MQ==621218775161" alt="图片"></p>
<h2 id="drawer" tabindex="-1">Drawer <a class="header-anchor" href="#drawer" aria-label="Permalink to &quot;Drawer&quot;">&ZeroWidthSpace;</a></h2>
<p><code>ESC</code>控制打开/关闭Drawer</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTIyMDg1NTk2NQ==621220855965" alt="图片"></p>
<p>所有的功能选项</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTIyMDk3MDc4NQ==621220970786" alt="图片"></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTIyMDkxOTIxNg==621220919216" alt="图片"></p>
<h3 id="查看更改change" tabindex="-1">查看更改Change <a class="header-anchor" href="#查看更改change" aria-label="Permalink to &quot;查看更改Change&quot;">&ZeroWidthSpace;</a></h3>
<p>在Element面板中更改元素的样式可以在这直接查看</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYyMTIyNDQxMjE4OQ==621224412189" alt="图片"></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-事件循环机制]]></title>
            <link>https://desain7.top./bigWeb/browser/eventloop.html</link>
            <guid>https://desain7.top./bigWeb/browser/eventloop.html</guid>
            <pubDate>Mon, 01 Feb 2021 16:00:00 GMT</pubDate>
            <description><![CDATA[ 前言
先简单聊聊JavaScript与此主题有关的其它内容，加深读者对内容的吸收与理解
 解释性语言

脚本语言编写的代码通常是逐行解释执行而非编译（c/c++,java），所以通常又叫做解释性语言]]></description>
            <content:encoded><![CDATA[<h1 id="浏览器中的event-loop" tabindex="-1">浏览器中的Event loop <a class="header-anchor" href="#浏览器中的event-loop" aria-label="Permalink to &quot;浏览器中的Event loop&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">&ZeroWidthSpace;</a></h2>
<p>先简单聊聊JavaScript与此主题有关的其它内容，加深读者对内容的吸收与理解</p>
<h3 id="解释性语言" tabindex="-1">解释性语言 <a class="header-anchor" href="#解释性语言" aria-label="Permalink to &quot;解释性语言&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>脚本语言是为了缩短传统的编写-编译-链接-运行（edit-compile-link-run）过程而创建的计算机编程语言</p>
</blockquote>
<p><strong>脚本语言</strong>编写的代码通常是<strong>逐行解释执行</strong>而非编译（c/c++,java），所以通常又叫做<strong>解释性语言</strong></p>
<p>所以<code>javascript</code>与<code>python</code>,<code>shell</code>一样，也是一门优秀的解释性语言</p>
<p>制约解释性语言的性能瓶颈之一就是解释器，好在<code>javascript</code>有著名的V8（Android，Chrome）与JSCore（IOS，Safari）等优秀的解释器引擎,js得以大范围推广，它们是必不可少的功臣</p>
<h3 id="单线程模型" tabindex="-1">单线程模型 <a class="header-anchor" href="#单线程模型" aria-label="Permalink to &quot;单线程模型&quot;">&ZeroWidthSpace;</a></h3>
<p><code>javascript</code>语言的一大特点就是单线程，即同一时间只能做一件事</p>
<p><strong>为什么是单线程？</strong></p>
<p>作为浏览器脚本语言，<code>javascript</code>的主要用途是与用户互动，以及操作DOM,这决定了它只能是单线程，否则会带来很复杂的同步问题</p>
<p>例如：假定<code>javascript</code>同时有两个线程，一个线程在某个DOM节点上添加内容，另一个线程删除了这个节点，这时浏览器不知道应该以哪个线程为准？</p>
<p>所以，为了避免复杂性，从一诞生，<code>javascript</code>就是单线程的</p>
<p><strong>单线程的优势</strong></p>
<ul>
<li>不会出现因线程之间争夺资源导致的死锁现象</li>
<li>所有代码都是同步执行的</li>
<li>没有线程切换的资源开销</li>
</ul>
<p><strong>单线程的缺点</strong></p>
<ul>
<li>单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着</li>
</ul>
<h3 id="任务队列" tabindex="-1">任务队列 <a class="header-anchor" href="#任务队列" aria-label="Permalink to &quot;任务队列&quot;">&ZeroWidthSpace;</a></h3>
<p>浏览器中存在有很多耗时的任务的场景，网路请求(ajax),监听事件的传递,定时器等等</p>
<p><code>javascript</code>语言的设计者意识到，这时主线程完全可以不管IO设备，挂起处于等待中的任务，先运行排在后面的任务。等到IO设备返回了结果，再回过头，把挂起的任务继续执行下去</p>
<p>于是对所有任务进行了划分，分为 <strong>同步任务</strong> 与 <strong>异步任务</strong></p>
<h4 id="同步任务" tabindex="-1">同步任务 <a class="header-anchor" href="#同步任务" aria-label="Permalink to &quot;同步任务&quot;">&ZeroWidthSpace;</a></h4>
<p>在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务</p>
<p>即顺序执行</p>
<h4 id="异步任务" tabindex="-1">异步任务 <a class="header-anchor" href="#异步任务" aria-label="Permalink to &quot;异步任务&quot;">&ZeroWidthSpace;</a></h4>
<p>不进入主线程、而进入<strong>任务队列</strong>的任务</p>
<p>只有当<strong>任务队列</strong>通知主线程，某个异步任务可以执行了的时候，该任务才会进入主线程执行</p>
<p>当解释器引擎遇到异步任务时，会将其挂起，在<strong>时机成熟</strong>时，将其回调函数放入到任务队列中</p>
<p>打个比方，就像炒菜一样，锅里的东西一直在翻炒着(主线程)，各种调料（不同的异步任务）只会在需要的时候被加入锅里，然后完成其使命</p>
<h3 id="异步机制" tabindex="-1">异步机制 <a class="header-anchor" href="#异步机制" aria-label="Permalink to &quot;异步机制&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>所有同步任务都在主线程上执行，形成一个<strong>执行栈</strong></li>
<li>主线程之外，还存在一个<strong>任务队列</strong>，只要异步任务有了运行结果，就在&quot;任务队列&quot;之中放置一个事件</li>
<li>一旦执行栈中的所有同步任务执行完毕，系统就会读取&quot;任务队列&quot;，看看里面有哪些事件。哪些对应的异步任务，于是结束等待状态，进入执行栈，开始执行</li>
</ol>
<p>只要主线程空了，就会去读取&quot;任务队列&quot;，这就是<code>javascript</code>的运行机制。主线程不断重复上面的第3步</p>
<h3 id="事件与回调" tabindex="-1">事件与回调 <a class="header-anchor" href="#事件与回调" aria-label="Permalink to &quot;事件与回调&quot;">&ZeroWidthSpace;</a></h3>
<p>&quot;任务队列&quot;是一个事件的队列，IO设备（鼠标，键盘等）完成一项任务，就在&quot;任务队列&quot;中添加一个事件，表示相关的异步任务可以进入&quot;执行栈&quot;了。主线程读取&quot;任务队列&quot;，就是读取里面有哪些事件</p>
<p>只要指定过<strong>回调函数</strong>，这些事件（鼠标点击，键盘按键，页面滚动等）发生时就会进入&quot;任务队列&quot;，等待主线程读取</p>
<p>所谓&quot;回调函数&quot;，就是那些会被主线程挂起来的代码。异步任务必须指定回调函数，当主线程开始执行异步任务，就是执行对应的回调函数</p>
<p>队列有先进先出的特性，主线程会优先读取任务队列最前面的事件</p>
<p>主线程的读取过程基本上是自动的，只要”执行栈“一清空，&quot;任务队列&quot;上第1位的事件就会自动进入主线程</p>
<p>针对于定时器事件，主线程会先检查一下执行时间，只有到了规定的时间，才能返回给主线程，即到了一定时间后才把事件对应的回调函数放入执行栈中</p>
<h2 id="event-loop" tabindex="-1">Event loop <a class="header-anchor" href="#event-loop" aria-label="Permalink to &quot;Event loop&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什么是event-loop" tabindex="-1">什么是Event Loop <a class="header-anchor" href="#什么是event-loop" aria-label="Permalink to &quot;什么是Event Loop&quot;">&ZeroWidthSpace;</a></h3>
<p>也就是通常说的事件循环</p>
<blockquote>
<p>Event Loop是一个<strong>执行模型</strong>，在不同的地方(不同的语言)有不同的实现</p>
</blockquote>
<p>js的事件循环负责执行代码、收集和处理事件以及执行队列中的子任务，与其它语言的模型截然不同</p>
<p>js的事件循环模型与许多其他语言相比有一个非常有趣的特性是，它<strong>永不阻塞</strong>,处理 I/O 通常通过事件和回调来执行</p>
<p>因此当一个应用正等待一个 AJAX 请求返回时，它仍然可以处理其它事情，如用户输入，鼠标点击/滚动等</p>
<h3 id="什么是执行栈" tabindex="-1">什么是执行栈 <a class="header-anchor" href="#什么是执行栈" aria-label="Permalink to &quot;什么是执行栈&quot;">&ZeroWidthSpace;</a></h3>
<p>执行栈可以认为是一个存储函数调用的<code>栈结构</code>，遵循先进后出的原则</p>
<p>js开始执行代码的时候会首先创建一个<code>main</code>函数,然后根据执行的代码,根据先进后出的原则,后执行的函数先弹出栈</p>
<p>这里有一个可视化执行栈的在线工具 -&gt; <a href="http://latentflip.com/loupe" target="_blank" rel="noreferrer">Loupe</a></p>
<p>示例</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">a</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">v</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #89DDFF">*</span><span style="color: #F78C6C">4</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">b</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">v</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">a</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #89DDFF">*</span><span style="color: #F78C6C">3</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #82AAFF">b</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">))</span></span></code></pre>
</div><p>进栈顺序</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F78C6C">1.</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #F78C6C">2.</span><span style="color: #A6ACCD"> console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #82AAFF">b</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">))</span></span>
<span class="line"><span style="color: #F78C6C">3.</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">b</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #F78C6C">4.</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">a</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">6</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><p>出栈顺序</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F78C6C">1.</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">a</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">6</span><span style="color: #A6ACCD">)  </span><span style="color: #676E95; font-style: italic">// 24</span></span>
<span class="line"><span style="color: #F78C6C">2.</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">b</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">)  </span><span style="color: #676E95; font-style: italic">// 24</span></span>
<span class="line"><span style="color: #F78C6C">3.</span><span style="color: #A6ACCD"> console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #82AAFF">b</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">)) </span><span style="color: #676E95; font-style: italic">// 24</span></span>
<span class="line"><span style="color: #F78C6C">4.</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">main</span><span style="color: #A6ACCD">()</span></span></code></pre>
</div><p>使用递归的时候，因为栈可存放的函数是有限制的，一旦存放了过多的函数且没有得到释放的话，就会出现爆栈(如下图所示)</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYxMTA2ODQxNTc5OQ==611068415799" alt="图片"></p>
<h2 id="浏览器中的-event-loop" tabindex="-1">浏览器中的 Event Loop <a class="header-anchor" href="#浏览器中的-event-loop" aria-label="Permalink to &quot;浏览器中的 Event Loop&quot;">&ZeroWidthSpace;</a></h2>
<p>通过上面的阐述，大概也是知道了js是如何执行的，了解了如何以单线程同步执行的方式处理异步任务的机制，下面开始详细描述一下执行的过程</p>
<p>执行 js 代码的时候其实就是往<strong>执行栈</strong>中放入函数/回调函数,当遇到异步的代码时，会被挂起并在需要执行的时候加入到 任务队列（有多种）中,一旦执行栈为空，时间循环机制 就会从 任务队列中拿出需要执行的代码并放入执行栈中执行</p>
<p><strong>所以本质上来说 js 中的异步依旧还是同步的行为</strong></p>
<h3 id="任务源" tabindex="-1">任务源 <a class="header-anchor" href="#任务源" aria-label="Permalink to &quot;任务源&quot;">&ZeroWidthSpace;</a></h3>
<p>不同任务源会被分到不同的任务队列中</p>
<h4 id="微任务" tabindex="-1">微任务 <a class="header-anchor" href="#微任务" aria-label="Permalink to &quot;微任务&quot;">&ZeroWidthSpace;</a></h4>
<blockquote>
<p>微任务(microtask):jobs</p>
</blockquote>
<ul>
<li>promise</li>
<li>MutationObserver</li>
<li>...</li>
</ul>
<h4 id="宏任务" tabindex="-1">宏任务 <a class="header-anchor" href="#宏任务" aria-label="Permalink to &quot;宏任务&quot;">&ZeroWidthSpace;</a></h4>
<blockquote>
<p>宏任务(macrotask):tasks</p>
</blockquote>
<ul>
<li>script</li>
<li>xhr</li>
<li>setTimeout</li>
<li>setInterval</li>
<li>requestAnimationFrame</li>
<li>I/O</li>
<li>UI rendering</li>
<li>...</li>
</ul>
<h3 id="event-loop执行顺序" tabindex="-1">Event Loop执行顺序 <a class="header-anchor" href="#event-loop执行顺序" aria-label="Permalink to &quot;Event Loop执行顺序&quot;">&ZeroWidthSpace;</a></h3>
<p>这里先抛出浏览器中js的事件循环的不同任务的执行顺序</p>
<p>在事件循环中，<strong>每进行一次循环操作称为 tick</strong></p>
<ol>
<li>执行所有的同步代码</li>
<li>执行完所有同步代码后，执行栈为空，查询是否有异步任务需要执行</li>
<li>执行 <code>微任务</code>,如果在执行 微任务 的过程中，又产生了 微任务，那么会加入到 微任务的队列 的末尾，也会在这个周期被调用执行</li>
<li>执行完所有微任务后，如有必要会渲染页面:
<ul>
<li>判断document是否需要更新
<ul>
<li>大部分显示设备还是 60Hz 的刷新率，所以 16.6ms 才会更新一次渲染</li>
</ul>
</li>
<li>判断是否有 resize 或者 scroll 事件，有的话会去触发事件
<ul>
<li>所以 resize 和 scroll 事件也是至少 16.6ms 才会触发一次，即<strong>自带节流</strong>功能。</li>
</ul>
</li>
<li>判断是否触发了 media query（媒体查询）</li>
<li>更新动画并且发送事件</li>
<li>判断是否有全屏操作事件</li>
<li>执行 requestAnimationFrame 回调</li>
<li>执行 IntersectionObserver 回调，该方法用于判断元素是否可见，可以用于懒加载上</li>
<li>更新界面</li>
</ul>
</li>
<li>开始下一轮 Event Loop ，从宏任务中取出一个执行,再然后微任务...</li>
</ol>
<h4 id="小结归纳" tabindex="-1">小结归纳 <a class="header-anchor" href="#小结归纳" aria-label="Permalink to &quot;小结归纳&quot;">&ZeroWidthSpace;</a></h4>
<ul>
<li>宏任务一次只从宏任务队列中取一个任务执行，执行完后就去执行微任务队列中的任务</li>
<li>微任务队列中所有的任务都会被依次取出来执行，直到微任务队列为空；</li>
<li>执行UI rendering，它的时间节点是在执行完所有的微任务之后，下一个宏任务之前</li>
<li>定时器不是绝对准确的
<ul>
<li>SetTimeout/SetInterval只是在指定时间后将其回调函数放入到宏任务队列中</li>
</ul>
</li>
</ul>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzE0NTA5MTE0Mg==583145091142" alt="图片"></p>
<h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">&ZeroWidthSpace;</a></h3>
<p>下面通过一个示例来阐述一下代码的执行顺序</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">script start</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">async1</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">async2</span><span style="color: #F07178">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">async1 end</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">async2</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">async2 end</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">async1</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span><span style="color: #C792EA">function</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">setTimeout</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">},</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD; font-style: italic">resolve</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Promise</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(</span><span style="color: #C792EA">function</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">promise1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(</span><span style="color: #C792EA">function</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">promise2</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">script end</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><ol>
<li>执行同步代码 输出  <code>script start</code>
<ul>
<li>console.log('script start')</li>
</ul>
</li>
<li>执行async1中的同步代码输出<code>async2 end</code>
<ul>
<li>async1()</li>
<li>async2()
<ul>
<li>因为函数有async标志，所以返回的是Promise，我们记为<strong>P1</strong></li>
</ul>
</li>
<li>console.log('async2 end')</li>
<li>await
<ul>
<li>await为让出线程的标志,即执行await async2()后就回到 async1外部</li>
<li>而await 就是 generator 加上 Promise 的语法糖，且内部实现了自动执行 generator，所以这里又套上了一层Promise，我们记为<strong>P2</strong>,其包裹着<strong>P1</strong></li>
</ul>
</li>
</ul>
</li>
<li>遇到异步任务定时器，我们先给它挂起，记为 <strong>S1</strong></li>
<li>执行new Promise 的构造函数，输出 <code>Promise</code>
<ol>
<li>console.log('Promise')</li>
<li>resolve()</li>
</ol>
<ul>
<li>生成新的微任务记为 <strong>P3</strong></li>
</ul>
</li>
<li>执行同步代码输出 <code>script end</code></li>
<li>此时所有的同步代码执行完成，微任务与宏任务队列情况分别是
<ol>
<li>微任务:[<strong>P2</strong>,<strong>P3</strong>]</li>
<li>宏任务:[<strong>S1</strong>]</li>
</ol>
</li>
<li>执行所有的微任务
<ol>
<li>取出<strong>P2</strong>执行，产生新的微任务 <strong>P1</strong>加入到队列中 [<strong>P3</strong>,<strong>P1</strong>]</li>
<li>取出<strong>P3</strong>执行, 打印输出<code>promise1</code>,产生新的微任务 <strong>P4</strong> 加入队列中 [<strong>P1</strong>,<strong>P4</strong>]</li>
<li>取出<strong>P1</strong>执行, 无输出,产生新的微任务 <strong>P5</strong> 加入队列中 [<strong>P4</strong>,<strong>P5</strong>]</li>
<li>取出P4执行, 输出<code>promise2</code>,无新的任务产生 [P5]</li>
<li>取出P5执行, 输出<code>async1 end</code>,无新的任务产生 []</li>
</ol>
</li>
</ol>
<h4 id="旧版浏览器的结果为" tabindex="-1">旧版浏览器的结果为 <a class="header-anchor" href="#旧版浏览器的结果为" aria-label="Permalink to &quot;旧版浏览器的结果为&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// script start --&gt; async2 end --&gt; Promise --&gt; script end --&gt; promise1 --&gt; promise2</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// async1 end --&gt; setTimeout</span></span></code></pre>
</div><p>因为 await 后面跟着 Promise 的话，<code>async1 end</code> 需要等待3个 microtick 才能执行到</p>
<p><strong>async1</strong> 其等价的v8<strong>优化前</strong>的旧版代码为</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">async1</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #F07178">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">resolve</span><span style="color: #89DDFF">)</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">p</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #F07178">(</span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #C792EA">=&gt;</span><span style="color: #82AAFF">res</span><span style="color: #F07178">(</span><span style="color: #82AAFF">async2</span><span style="color: #F07178">()))</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">p</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">async1 end</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h4 id="新版浏览器的结果为" tabindex="-1">新版浏览器的结果为 <a class="header-anchor" href="#新版浏览器的结果为" aria-label="Permalink to &quot;新版浏览器的结果为&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// script start --&gt; async2 end --&gt; Promise --&gt; script end --&gt; async1 end </span></span>
<span class="line"><span style="color: #676E95; font-style: italic">//  promise1 --&gt; promise2 --&gt; setTimeout</span></span></code></pre>
</div><p>在本例中上述的 <strong>P2</strong>包裹<strong>P1</strong> 合并成了一个，即await后面如果是Promise将不会再进行一次Promise包装</p>
<p><strong>async1</strong> 其等价的v8<strong>优化后</strong>的代码为</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">async1</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #F07178">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">resolve</span><span style="color: #89DDFF">)</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">p</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #82AAFF">async2</span><span style="color: #F07178">())</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">p</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">async1 end</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h4 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">&ZeroWidthSpace;</a></h4>
<ol>
<li>在新版浏览器中，await promiseFun，3个 microtick 被优化为了 2个 microtick
<ul>
<li>new Promise 替换为了 Promise.resolve</li>
<li>Promise.resolve的参数如果是Promise则直接返回这个Promise</li>
</ul>
</li>
</ol>
<h4 id="补充" tabindex="-1">补充 <a class="header-anchor" href="#补充" aria-label="Permalink to &quot;补充&quot;">&ZeroWidthSpace;</a></h4>
<p>问题追溯可查看</p>
<ul>
<li><a href="https://v8.js.cn/blog/fast-async/" target="_blank" rel="noreferrer">更快的异步函数和 Promise</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/53944576" target="_blank" rel="noreferrer">v8是怎么实现更快的 await ？深入理解 await 的运行机制</a></li>
</ul>
<h3 id="自测" tabindex="-1">自测 <a class="header-anchor" href="#自测" aria-label="Permalink to &quot;自测&quot;">&ZeroWidthSpace;</a></h3>
<p>自测试1</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">2</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">3</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">resolve</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">reject</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">4</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #F78C6C">5</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">6</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">7</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><details>
  <summary><mark><font color=darkred>点击查看答案</font></mark></summary>
  <p> 输出结果</p>
  <pre><code>  
  // 1 4 7 5 2 3 6
  </code></pre>
</details>
<p>自测2</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">2</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">3</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">resolve</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">reject</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">4</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #F78C6C">5</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">  </span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #FFCB6B">Promise</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">6</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">7</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">setTimeout</span><span style="color: #F07178">(</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">8</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">9</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span></code></pre>
</div><details>
  <summary><mark><font color=darkred>点击查看答案</font></mark></summary>
  <p> 输出结果</p>
  <pre><code>  
  // 1 4 10 5 6 7 2 3 9 8
  </code></pre>
</details>
<h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2014/10/event-loop.html" target="_blank" rel="noreferrer">阮一峰：JavaScript 运行机制详解：再谈Event Loop</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop" target="_blank" rel="noreferrer">MDN：并发模型与事件循环 </a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-跨域与跨站]]></title>
            <link>https://desain7.top./bigWeb/browser/cors.html</link>
            <guid>https://desain7.top./bigWeb/browser/cors.html</guid>
            <pubDate>Fri, 18 Dec 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ 同源策略
浏览器有同源策略,如果两个URL的协议,域名,端口完全一致才是同源
有一个不一致就是跨域
示例
以当前页面为例：`https://sugarat.top/bigWeb/browser/cr]]></description>
            <content:encoded><![CDATA[<h1 id="跨域与跨站" tabindex="-1">跨域与跨站 <a class="header-anchor" href="#跨域与跨站" aria-label="Permalink to &quot;跨域与跨站&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="同源策略" tabindex="-1">同源策略 <a class="header-anchor" href="#同源策略" aria-label="Permalink to &quot;同源策略&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器有同源策略,如果两个URL的<strong>协议</strong>,<strong>域名</strong>,<strong>端口</strong>完全一致才是同源</p>
<p>有一个不一致就是<strong>跨域</strong></p>
<p><strong>示例</strong></p>
<p>以当前页面为例：<code>https://sugarat.top/bigWeb/browser/cros.html</code></p>
<ul>
<li>协议：https</li>
<li>域名：sugarat.top</li>
<li>端口：443 (https默认443，http默认80)</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">URL</th>
<th style="text-align:center">是否同源</th>
<th style="text-align:center">理由</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://sugarat.top" target="_blank" rel="noreferrer">https://sugarat.top</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">协议,域名,端口 均一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://sugarat.top" target="_blank" rel="noreferrer">http://sugarat.top</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">协议，端口不一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://sugarat.top:8080" target="_blank" rel="noreferrer">https://sugarat.top:8080</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">端口 不一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://ep.sugarat.top" target="_blank" rel="noreferrer">https://ep.sugarat.top</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">域名 不一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://imgbed.sugarat.top" target="_blank" rel="noreferrer">https://imgbed.sugarat.top</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">域名 不一致</td>
</tr>
</tbody>
</table>
<h3 id="同源策略限制" tabindex="-1">同源策略限制 <a class="header-anchor" href="#同源策略限制" aria-label="Permalink to &quot;同源策略限制&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>DOM: 禁止操作非源页面的DOM与JS对象
<ul>
<li>这里主要场景是iframe跨域的情况，非同源的iframe是限制互相访问的</li>
</ul>
</li>
<li>XmlHttpRequest: 禁止使用XHR对象向不同源的服务器地址发起HTTP请求，即不能发送跨域ajax请求
<ul>
<li>主要用来防止<a href="./safe.html#csrf">CSRF</a>（跨站请求伪造）攻击</li>
</ul>
</li>
<li>本地存储: Cookie、LocalStorage 和 IndexDB 无法跨域读取</li>
</ol>
<p>非同源也有可以通信的方案，后文会做出介绍</p>
<h3 id="为什么需要同源策略🤔" tabindex="-1">为什么需要同源策略🤔 <a class="header-anchor" href="#为什么需要同源策略🤔" aria-label="Permalink to &quot;为什么需要同源策略🤔&quot;">&ZeroWidthSpace;</a></h3>
<p>这里先列举反例</p>
<div class="warning custom-block"><p class="custom-block-title">例1</p>
<p><strong>如果iframe可以跨域，就会有以下攻击场景</strong></p>
<ol>
<li>一个假网站<code>https://a.com</code>，内部嵌套一个全屏的iframe标签指向一个银行网站 <code>https://b.com</code></li>
<li>用户访问假网站除了域名，别的部分和银行的网站没有任何差别</li>
<li>开发者可以在假网站中注入输入事件监听脚本，跨域访问<code>https://b.com</code>节点中的内容</li>
<li>此时用户的输入都能被监听到，这样假网站就拿到了用户的账号密码</li>
</ol>
<p>这样一次攻击就完成了</p>
</div>
<div class="warning custom-block"><p class="custom-block-title">例2</p>
<p><strong>如果ajax可以跨域，就会有以下攻击场景</strong></p>
<ol>
<li>用户在银行网站<code>https://b.com</code>进行了登录，网站使用cookie鉴权</li>
<li>攻击者直接从网站<code>https://a.com</code>发起一个指向银行网站的攻击请求，此跨域请求会携带上目标站点上的cookie</li>
<li>银行服务端验证用户cookie无误，返回对应的响应数据</li>
<li>此时就造成了用户信息泄露，用户是无法感知到的</li>
</ol>
<p>这样一次攻击就完成了</p>
</div>
<p>采用同源策略限制跨域访问,主要就是为了用户信息的安全考虑</p>
<h2 id="跨域" tabindex="-1">跨域 <a class="header-anchor" href="#跨域" aria-label="Permalink to &quot;跨域&quot;">&ZeroWidthSpace;</a></h2>
<p>违反同源策略就是跨域</p>
<h3 id="影响" tabindex="-1">影响 <a class="header-anchor" href="#影响" aria-label="Permalink to &quot;影响&quot;">&ZeroWidthSpace;</a></h3>
<p>最常见的两种跨域场景就是</p>
<ul>
<li>ajax跨域</li>
<li>iframe跨域</li>
</ul>
<h3 id="跨域示例" tabindex="-1">跨域示例 <a class="header-anchor" href="#跨域示例" aria-label="Permalink to &quot;跨域示例&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>ajax跨域</strong></p>
<p>执行下面代码会在开发者工具中的 Console面板看到以下错误信息</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">Access to fetch at </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://ep.sugarat.top/</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> from origin </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http://127.0.0.1:5500</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> has been blocked by CORS </span><span style="color: #FFCB6B">policy</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #A6ACCD">No </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Access-Control-Allow-Origin</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> header is present on the requested resource</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD"> </span></span>
<span class="line"><span style="color: #A6ACCD">If an opaque response serves your needs</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> set the request</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">s mode to </span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">no</span><span style="color: #89DDFF">-</span><span style="color: #A6ACCD">cors</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> to fetch the resource with CORS disabled.</span></span></code></pre>
</div><p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjY1MTgwMTg3OQ==606651801879" alt="图片"></p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">btn</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">click me</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $btn </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">btn</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        $btn</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onclick</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">fetch</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">https://ep.sugarat.top/</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                method</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">get</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>iframe跨域</strong></p>
<p>无法跨域访问iframe中的DOM元素信息</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">https://sugarat.top/</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">width</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">100%</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">height</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">1000px</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">frameborder</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> iframe </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementsByTagName</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iframe</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">        console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">contentWindow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">outerHTML)</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="跨站" tabindex="-1">跨站 <a class="header-anchor" href="#跨站" aria-label="Permalink to &quot;跨站&quot;">&ZeroWidthSpace;</a></h2>
<p>Cookie与此息息相关，Cookie实际上遵守的是“同站”策略</p>
<h3 id="什么是同站" tabindex="-1">什么是同站 <a class="header-anchor" href="#什么是同站" aria-label="Permalink to &quot;什么是同站&quot;">&ZeroWidthSpace;</a></h3>
<p>只要两个 URL 的 eTLD+1 相同即是同站,不需要考虑协议和端口</p>
<p><strong>eTLD</strong>: (effective top-level domain) 有效顶级域名，注册于 Mozilla 维护的公共后缀列表（Public Suffix List）中,如<code>.com</code>、<code>.co.uk</code>、<code>.github.io</code>,<code>.top</code> 等</p>
<p><strong>eTLD+1</strong>: 有效顶级域名+二级域名，如 <code>taobao.com</code>,<code>baidu.com</code>,<code>sugarat.top</code></p>
<p>tips: 这里的一级,二级域名主要指计算机网络中规定的，与通常业务开发中所指的一二级域名有些许差异</p>
<p>以当前页面为例：<code>https://sugarat.top/bigWeb/browser/cros.html</code></p>
<ul>
<li>eTLD: .top</li>
<li>eTLD+1: sugarat.top</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">URL</th>
<th style="text-align:center">是否同站</th>
<th style="text-align:center">理由</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://sugarat.top" target="_blank" rel="noreferrer">https://sugarat.top</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">eTLD+1一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://ep.sugarat.top" target="_blank" rel="noreferrer">http://ep.sugarat.top</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">eTLD+1一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://ep.sugarat.top:8080" target="_blank" rel="noreferrer">https://ep.sugarat.top:8080</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">eTLD+1一致</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://baidu.com" target="_blank" rel="noreferrer">https://baidu.com</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">eTLD 不一致</td>
</tr>
</tbody>
</table>
<p>只要eTLD+1不同就是跨站</p>
<h3 id="对cookie的影响" tabindex="-1">对Cookie的影响 <a class="header-anchor" href="#对cookie的影响" aria-label="Permalink to &quot;对Cookie的影响&quot;">&ZeroWidthSpace;</a></h3>
<p>因为Cookie遵循的是同站策略，很多网站都是把一些权限，用户行为，主题，个人的配置信息</p>
<p>所以很多网站会把这些信息存在二级域名下，即让其子域名能够共享这些配置，鉴权信息</p>
<p><strong>以taobao举例</strong></p>
<p>打开 <code>taobao.com</code>,可以看到其cookie有</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjY0Mjk2NjAxNg==606642966016" alt="图片"></p>
<p>我们在 <code>ai.taobao,com</code>下也可看到这些cookie</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjY0MzA0ODI1MA==606643048250" alt="图片"></p>
<h2 id="预检请求" tabindex="-1">预检请求 <a class="header-anchor" href="#预检请求" aria-label="Permalink to &quot;预检请求&quot;">&ZeroWidthSpace;</a></h2>
<p>使用后端开启CORS解决跨域的方式，浏览器会把请求分成两种类型</p>
<ul>
<li>简单请求</li>
<li>复杂请求</li>
</ul>
<h4 id="简单请求" tabindex="-1">简单请求 <a class="header-anchor" href="#简单请求" aria-label="Permalink to &quot;简单请求&quot;">&ZeroWidthSpace;</a></h4>
<p>触发简单请求的条件↓</p>
<p><strong>1.请求方法仅限于</strong>:</p>
<ul>
<li>GET</li>
<li>HEAD</li>
<li>POST</li>
</ul>
<p><strong>2.Content-Type仅限于</strong>:</p>
<ul>
<li>text/plain</li>
<li>multipart/form-data</li>
<li>application/x-www-form-urlencoded</li>
</ul>
<h4 id="复杂请求" tabindex="-1">复杂请求 <a class="header-anchor" href="#复杂请求" aria-label="Permalink to &quot;复杂请求&quot;">&ZeroWidthSpace;</a></h4>
<p><code>非简单请求</code>的即为复杂请求↓</p>
<p>对于复杂请求，首先会发起一个<strong>预检请求</strong>,请求方法为<code>options</code>,通过该请求来判断服务器是否允许跨域</p>
<p>与预检请求有关的以<code>Access-Control-</code>开头的响应头：</p>
<ul>
<li>Access-Control-Allow-Methods：表明服务器支持的所有跨域请求的方法</li>
<li>Access-Control-Allow-Headers：表明服务器支持的头信息</li>
<li>Access-Control-Max-Age：指定本次预检请求的有效期，单位为秒，在此期间，不用再重新发型新的预检请求</li>
</ul>
<h2 id="解决跨域的方案" tabindex="-1">解决跨域的方案 <a class="header-anchor" href="#解决跨域的方案" aria-label="Permalink to &quot;解决跨域的方案&quot;">&ZeroWidthSpace;</a></h2>
<p><strong>Tips:</strong> 对于前端页面的运行可以 使用 <a href="https://www.npmjs.com/package/http-server" target="_blank" rel="noreferrer"><strong>http-server</strong></a></p>
<h3 id="jsonp" tabindex="-1">jsonp <a class="header-anchor" href="#jsonp" aria-label="Permalink to &quot;jsonp&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">&ZeroWidthSpace;</a></h4>
<p>利用 <code>&lt;script&gt;</code>标签没有跨域限制的漏洞</p>
<p>通过 <code>&lt;script&gt;</code>标签的src属性指向一个需要访问的地址并提供一个回调函数来接收回调数据</p>
<p>script获取到的内容会被当做js脚本进行执行</p>
<p>所以需要服务端在回调上做一个字符串拼接操作 <code>callbackFunName(内容)</code></p>
<p>可以通过url传递需要的参数</p>
<p>如需要发送一个get请求<code>http://sugarat.top/path1/path2?param1=1</code></p>
<ol>
<li>客户端注册一个全局方法<code>function callbackFunName(res){}</code></li>
<li>服务端收到请求后获取到url上的参数</li>
<li>服务端返回字符串<code>callbackFunName({&quot;name&quot;:&quot;Desain&quot;,&quot;age&quot;:18})</code></li>
<li>客户端当做js脚本直接解析执行</li>
<li>就调用了方法<code>callbackFunName</code>并把里面的<code>{&quot;name&quot;:&quot;Desain&quot;,&quot;age&quot;:18}</code> 当做一个对象进行了传递</li>
</ol>
<p><strong>只支持get请求</strong></p>
<h4 id="简单使用示例" tabindex="-1">简单使用示例 <a class="header-anchor" href="#简单使用示例" aria-label="Permalink to &quot;简单使用示例&quot;">&ZeroWidthSpace;</a></h4>
<p>服务端代码</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// 以Node.js为例</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> http </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> app </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> http</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createServer</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">req</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">jsonData</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        name</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Desain</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        age</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #F78C6C">18</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">end</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">diyCallBackFun(</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stringify</span><span style="color: #A6ACCD">(jsonData)</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">)</span><span style="color: #89DDFF">`</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listen</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">3000</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><p>客户端代码</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// jsonp的回调函数</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">diyCallBackFun</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    	</span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">	</span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> $srcipt </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">script</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">$srcipt</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">src </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http://localhost:3000/path1/path2?param1=1&amp;param2=2</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #A6ACCD">($srcipt)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 最终构造出的标签 --&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- &lt;script src=&quot;localhost:3000/path1/path2?param1=1&amp;param2=2&quot;&gt;&lt;/script&gt; --&gt;</span></span></code></pre>
</div><p>页面中插入上述代码并运行可以在控制台看机输出</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjY0NTcwNjgwMg==606645706802" alt="图片"></p>
<h4 id="通用方法封装" tabindex="-1">通用方法封装 <a class="header-anchor" href="#通用方法封装" aria-label="Permalink to &quot;通用方法封装&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">* JSONP方法</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">* </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">string</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">url</span><span style="color: #676E95; font-style: italic"> 请求路径</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">* </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">string</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">callbackName</span><span style="color: #676E95; font-style: italic"> 全局函数名称（后端拼接的方法名称） </span></span>
<span class="line"><span style="color: #676E95; font-style: italic">* </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">function</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">success</span><span style="color: #676E95; font-style: italic"> 响应的回调函数</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">*/</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">jsonp</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">url</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">callbackName</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">success</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">$script</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">script</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #A6ACCD">$script</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">src</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">url</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">&amp;callback=</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">callbackName</span><span style="color: #89DDFF">}`</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #A6ACCD">$script</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">async</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #A6ACCD">$script</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">type</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">text/javascript</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #A6ACCD">window</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">callbackName</span><span style="color: #F07178">] </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">       </span><span style="color: #A6ACCD">success</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">success</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">   </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">$script</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h3 id="cors" tabindex="-1">CORS <a class="header-anchor" href="#cors" aria-label="Permalink to &quot;CORS&quot;">&ZeroWidthSpace;</a></h3>
<p>跨域资源共享（Cross-origin resource sharing）</p>
<p>允许浏览器向跨域服务器发送ajax请求</p>
<p>实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信</p>
<p>服务端在响应头设置 Access-Control-Allow-Origin 就可以开启 CORS</p>
<h4 id="原理-1" tabindex="-1">原理 <a class="header-anchor" href="#原理-1" aria-label="Permalink to &quot;原理&quot;">&ZeroWidthSpace;</a></h4>
<p>如果发起的跨域AJAX请求是<a href="./cors.html#简单请求">简单请求</a>，浏览器就会自动在头信息之中，添加一个Origin字段，
用来表示 请求来自哪个源</p>
<p>如:<code>origin: http://localhost:8080</code></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjY1MTI1OTk1OA==606651259958" alt="图片"></p>
<p>如果Origin的内容不包含在请求的响应头<code>Access-Control-Allow-Origin</code>中,就会抛出以下错误</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjY1MTgwMTg3OQ==606651801879" alt="图片"></p>
<p>与CORS有关的以<code>Access-Control-</code>开头的响应头：</p>
<ul>
<li>Access-Control-Allow-Origin：该字段是CORS中必须有的字段，它的值是请求时Origin字段的值以<code>,</code>分割多个域名，或者是<code>*</code>，表示对所有请求都放行</li>
<li>Access-Control-Expose-Headers：列出了哪些首部可以作为响应的一部分暴露给外部（XMLHttpRequest）
<ul>
<li>默认情况下，只有七种 simple response headers （简单响应首部）可以暴露给外部：
<ul>
<li>Cache-Control：控制缓存</li>
<li>Content-Language：资源的语言组</li>
<li>Content-Length：资源长度</li>
<li>Content-Type：支持的媒体类型</li>
<li>Expires：资源过期时间</li>
<li>Last-Modified：资源最后修改时间</li>
<li>Pragma：报文指令</li>
</ul>
</li>
</ul>
</li>
<li>Access-Control-Allow-Credentials：值类型是布尔类型，表示跨域请求是否允许携带cookie
<ul>
<li>CORS请求默认不携带cookie</li>
<li>还需要设置xhr（XMLHttpRequest）对象的withCredentials属性为true</li>
</ul>
</li>
</ul>
<h4 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">&ZeroWidthSpace;</a></h4>
<p>以Node.js为例子</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> http </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> server </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> http</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createServer</span><span style="color: #A6ACCD">(</span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">req</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">//  -------跨域支持-----------</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 放行指定域名</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHeader</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Access-Control-Allow-Origin</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">//跨域允许的header类型</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHeader</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Access-Control-Allow-Headers</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">&quot;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 允许跨域携带cookie</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHeader</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Access-Control-Allow-Credentials</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">true</span><span style="color: #89DDFF">&quot;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 允许的方法</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHeader</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Access-Control-Allow-Methods</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">PUT, GET, POST, DELETE, OPTIONS</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">method</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">url</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">req</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 对预检请求放行</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">method</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">OPTIONS</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">end</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">method</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">url</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">end</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 启动</span></span>
<span class="line"><span style="color: #A6ACCD">server</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listen</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">3000</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">err</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">listen 3000 success</span><span style="color: #89DDFF">`</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><h3 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">&ZeroWidthSpace;</a></h3>
<p>因为跨域是针对浏览器做出的限制</p>
<p>对后端服务没有影响</p>
<p>可以使用 Nginx,Node Server，Apache等技术方案为请求做一个转发</p>
<p>下面是一些示例</p>
<h4 id="nginx配置" tabindex="-1">Nginx配置 <a class="header-anchor" href="#nginx配置" aria-label="Permalink to &quot;Nginx配置&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">server</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">listen</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">80</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #FFCB6B">listen</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">443</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">ssl</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">http2</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">server_name</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">test.sugarat.top</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">index</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">index.php</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">index.html</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">index.htm</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">default.php</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">default.htm</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">default.html</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">root</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/xxx/aaa</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic"># 省略其它配置</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">location</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">/api</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #FFCB6B">proxy_pass</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">http://a.b.com</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #676E95; font-style: italic"># 防止缓存</span></span>
<span class="line"><span style="color: #A6ACCD">    	</span><span style="color: #FFCB6B">add_header</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">Cache-Control</span><span style="color: #A6ACCD"> </span><span style="color: #C3E88D">no-cache</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    }</span></span>
<span class="line"><span style="color: #A6ACCD">}</span></span></code></pre>
</div><p>访问 <code>http://test.sugarat.top/api/user/login</code>,实际是nginx服务器 访问<code>http://a.b.com/api/user/login</code></p>
<p>关于<code>proxy_pass</code>属性，更多详细内容可参考<a href="https://xuexb.github.io/learn-nginx/example/proxy_pass.html" target="_blank" rel="noreferrer">proxy_pass url 反向代理的坑</a></p>
<h4 id="node-server" tabindex="-1">Node Server <a class="header-anchor" href="#node-server" aria-label="Permalink to &quot;Node Server&quot;">&ZeroWidthSpace;</a></h4>
<p>这里采用Node原生http模块+axios实现请求的转发</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> http </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> axios </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">axios</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">default</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 要转发到哪里去</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> BASE_URL </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http://www.baidu.com</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 启动服务的端口</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> PORT </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3000</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> app </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> http</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createServer</span><span style="color: #A6ACCD">(</span><span style="color: #C792EA">async</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">req</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">url</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">method</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">req</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">url</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 对预检请求放行</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">method</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">OPTIONS</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">end</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 获取传递的参数</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">reqData</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #82AAFF">getBodyContent</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">req</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">reqData</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">await</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">axios</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">request</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">method</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">url</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        baseURL</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">BASE_URL</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        data</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">reqData</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHeader</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Access-Control-Allow-Origin</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setHeader</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Content-Type</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">application/json;charset=utf-8</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">end</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stringify</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">))</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listen</span><span style="color: #A6ACCD">(PORT</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">listen </span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">PORT</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D"> success</span><span style="color: #89DDFF">`</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">getBodyContent</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">req</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #FFCB6B">Promise</span><span style="color: #F07178">(</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">resolve</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">reject</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">buffer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Buffer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">alloc</span><span style="color: #F07178">(</span><span style="color: #F78C6C">0</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">req</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">on</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">data</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">chunk</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">try</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">buffer</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Buffer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">concat</span><span style="color: #F07178">([</span><span style="color: #A6ACCD">buffer</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">chunk</span><span style="color: #F07178">])</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">catch</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">err</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">error</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">err</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span><span style="color: #F07178">                </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">req</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">on</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">end</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">try</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">parse</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">buffer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toString</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">utf-8</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">))</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">catch</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">error</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">finally</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #82AAFF">resolve</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>测试页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">测试</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">fetch</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http://localhost:3000/sugrec?name=test</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD">res</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">json</span><span style="color: #A6ACCD">())</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #A6ACCD">(console</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">log)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>运行结果，请求被成功转发</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwODA4NTkxMjcxMw==608085912713" alt="图片"></p>
<h3 id="websocket" tabindex="-1">websocket <a class="header-anchor" href="#websocket" aria-label="Permalink to &quot;websocket&quot;">&ZeroWidthSpace;</a></h3>
<p>WebSocket protocol是HTML5一种新的协议。它实现了浏览器与服务器全双工通信，同时允许跨域通讯，是server push技术的一种很好的实现</p>
<p><strong>使用示例</strong></p>
<h4 id="客户端" tabindex="-1">客户端 <a class="header-anchor" href="#客户端" aria-label="Permalink to &quot;客户端&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">p</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">链接状态：</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">status</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">断开</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">p</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">label</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">for</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">content</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        内容</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">input</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">content</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">text</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">label</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">发送</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">close</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">断开</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> ws </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">WebSocket</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ws:localhost:3000</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">echo-protocol</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> status </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $status </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">status</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $send </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $close </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">close</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        $send</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onclick</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">text</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">content</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">发送: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">text</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">send</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">text</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">        ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onopen</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">connection open ...</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">send</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Hello</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">status</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">$status</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">链接成功</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">        $close</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onclick</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">close</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">        ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onmessage</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">client received: </span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">        ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onclose</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">close</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">status</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">$status</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">断开连接</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">        ws</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onerror</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">error</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">e</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">status</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">$status</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">链接发生错误</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h4 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端" aria-label="Permalink to &quot;服务端&quot;">&ZeroWidthSpace;</a></h4>
<p>这里采用Node实现，需安装<code>websocket</code>模块</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> WebSocketServer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">websocket</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">server</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> http </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">require</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> server </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> http</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createServer</span><span style="color: #A6ACCD">(</span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">request</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">response</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">((</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Date</span><span style="color: #F07178">()) </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> Received request for </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">request</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">url</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">response</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">writeHead</span><span style="color: #F07178">(</span><span style="color: #F78C6C">200</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">response</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">end</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">server</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">listen</span><span style="color: #A6ACCD">(</span><span style="color: #F78C6C">3000</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">((</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Date</span><span style="color: #F07178">()) </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> Server is listening on port 3000</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> wsServer </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">WebSocketServer</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">httpServer</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> server</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">autoAcceptConnections</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">originIsAllowed</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">origin</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">wsServer</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">on</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">request</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">request</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #82AAFF">originIsAllowed</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">request</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">origin</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">request</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">reject</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">((</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Date</span><span style="color: #F07178">()) </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> Connection from origin </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">request</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">origin</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> rejected.</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connection</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">request</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">accept</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">echo-protocol</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">request</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">origin</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">((</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Date</span><span style="color: #F07178">()) </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> Connection accepted.</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">connection</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">on</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">message</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">message</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">message</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">type</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">utf8</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Received Message: </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">message</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">utf8Data</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">connection</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">sendUTF</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`${</span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Date</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">toLocaleString</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">:</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">message</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">utf8Data</span><span style="color: #89DDFF">}`</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">connection</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">on</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">close</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">reasonCode</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">description</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">((</span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Date</span><span style="color: #F07178">()) </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> Peer </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">connection</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">remoteAddress</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D"> disconnected.</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span></code></pre>
</div><h4 id="运行结果" tabindex="-1">运行结果 <a class="header-anchor" href="#运行结果" aria-label="Permalink to &quot;运行结果&quot;">&ZeroWidthSpace;</a></h4>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwODI5NzY3ODk2MQ==608297678962" alt="图片"></p>
<h3 id="location-hash" tabindex="-1">location.hash <a class="header-anchor" href="#location-hash" aria-label="Permalink to &quot;location.hash&quot;">&ZeroWidthSpace;</a></h3>
<p>location的hash值发生变化，页面不会刷新，且浏览器提供了hashchange事件</p>
<p>主要用于iframe跨域通信</p>
<p><strong>示例</strong></p>
<p>父页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">父页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">send</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">iframe1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://localhost:3001/2.html</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $send </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $iframe </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iframe1</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> oldSrc </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> $iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">src</span></span>
<span class="line"><span style="color: #A6ACCD">        $send</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onclick</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">$iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">src</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">oldSrc</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">#</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">+</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #F07178">() </span><span style="color: #89DDFF">*</span><span style="color: #F07178"> </span><span style="color: #F78C6C">100</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>子页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">子页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        window</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hashchange</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #C792EA">function</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">e</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">location</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">hash</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>运行结果</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwODI5ODU2OTk2Nw==608298569967" alt="图片"></p>
<h3 id="window-name" tabindex="-1">window.name <a class="header-anchor" href="#window-name" aria-label="Permalink to &quot;window.name&quot;">&ZeroWidthSpace;</a></h3>
<p>只要当前的这个浏览器tab没有关闭，无论tab内的网页如何变动，这个name值都可以保持，并且tab内的网页都有权限访问到这个值</p>
<p>iframe中的页面利用上述特性，实现任意页面的window.name的读取</p>
<p><strong>使用示例</strong></p>
<p><strong>父页面 1.html</strong></p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">父页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">send</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">getCrossIframeName</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">http://localhost:3000/2.html</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">log</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">getCrossIframeName</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">url</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">callback</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">ok</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">iframe</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iframe</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">src</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">url</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">style</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">width</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">style</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">height</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">0px</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">iframe</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onload</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">ok</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">                    </span><span style="color: #676E95; font-style: italic">// 第二次触发时，同域的页面加载完成</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #82AAFF">callback</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">contentWindow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">                    </span><span style="color: #676E95; font-style: italic">// 移除</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">removeChild</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">iframe</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">                    </span><span style="color: #676E95; font-style: italic">// 第一次触发onload事件,定向到同域的中间页面</span></span>
<span class="line"><span style="color: #89DDFF">                    </span><span style="color: #676E95; font-style: italic">// 经测试 中间页面不存在也可以，如存在页面内容为空也可</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #A6ACCD">iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">contentWindow</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">location</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">href</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">/proxy.html</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #A6ACCD">ok</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">!</span><span style="color: #A6ACCD">ok</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">iframe</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>中间页面 proxy.html</strong></p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 空文件即可 --&gt;</span></span></code></pre>
</div><p><strong>目标页面 2.html</strong></p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">传输的数据</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">status</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">success</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">num</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">        window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stringify</span><span style="color: #A6ACCD">(data)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>运行结果</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwODM1OTA3NjA1Ng==608359076056" alt="图片"></p>
<h3 id="window-postmessage" tabindex="-1">window.postMessage <a class="header-anchor" href="#window-postmessage" aria-label="Permalink to &quot;window.postMessage&quot;">&ZeroWidthSpace;</a></h3>
<p>window.postMessage 方法可以安全地实现跨源通信,可以适用的场景:</p>
<ul>
<li>与其它页面之间的消息传递</li>
<li>与内嵌iframe通信</li>
</ul>
<p>用法</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">otherWindow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">postMessage</span><span style="color: #A6ACCD">(message</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> targetOrigin)</span><span style="color: #89DDFF">;</span></span></code></pre>
</div><p>targetOrigin值示例:</p>
<ul>
<li>协议+主机+端口：只有三者完全匹配，消息才会被发送</li>
<li>*：传递给任意窗口</li>
<li>/：和当前窗口同源的窗口</li>
</ul>
<p><strong>使用示例</strong></p>
<p>父页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">父页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">send</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">iframe1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://localhost:3001/2.html</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $send </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">send</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> $iframe </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">iframe1</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> oldSrc </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> $iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">src</span></span>
<span class="line"><span style="color: #A6ACCD">        $send</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">onclick</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">$iframe</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">contentWindow</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">postMessage</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">JSON</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">stringify</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{</span><span style="color: #F07178"> num</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Math</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">random</span><span style="color: #F07178">() </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span><span style="color: #89DDFF">,</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">*</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>子页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">子页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        window</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">message</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">receive</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">data</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>运行结果</strong>
<img src="https://img.cdn.sugarat.top/mdImg/MTYwODM0NzAyMzM1OA==608347023358" alt="图片"></p>
<h3 id="document-domain" tabindex="-1">document.domain <a class="header-anchor" href="#document-domain" aria-label="Permalink to &quot;document.domain&quot;">&ZeroWidthSpace;</a></h3>
<p>二级域名相同的情况下，比如 a.sugarat.top 和 b.sugarat.top 适用于该方式。</p>
<p>只需要给页面添加 document.domain = 'sugarat.top' 表示二级域名都相同就可以实现跨域</p>
<p><strong>简单示例</strong></p>
<p>首先修改host文件,添加两个自定义的域名，模拟跨域环境</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwODM0ODY3MTgzNg==608348671836" alt="图片"></p>
<p>父页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">父页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">iframe1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://b.sugarat.top:3000/2.html</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">iframe</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">domain </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">sugarat.top</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">var</span><span style="color: #A6ACCD"> a </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">666</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>子页面</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">子页面</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">domain </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">sugarat.top</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">get parent data a:</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">parent</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">a)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>运行结果</strong></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwODM0ODYyODM1MQ==608348628351" alt="图片"></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>上文只是介绍了常见的一些跨域方案，并配上了能直接复制粘贴运行的示例，方便读者理解与上手体验</p>
<p>在实际生产环境中需针对特定的场景进行方案的pick</p>
<p>面试中这也是一道经典考题，望能帮助读者加深理解</p>
<h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://wangningbo93.github.io/2017/06/16/%E6%B5%85%E8%B0%88%E5%87%A0%E7%A7%8D%E8%B7%A8%E5%9F%9F%E7%9A%84%E6%96%B9%E6%B3%95/" target="_blank" rel="noreferrer">wangningbo -浅谈几种跨域的方法</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy" target="_blank" rel="noreferrer">MDN - 浏览器的同源策略</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noreferrer">跨域资源共享 CORS 详解</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noreferrer">浏览器同源政策及其规避方法</a></li>
<li><a href="https://segmentfault.com/a/1190000011145364" target="_blank" rel="noreferrer">前端常见跨域解决方案</a></li>
<li><a href="https://github.com/theturtle32/WebSocket-Node" target="_blank" rel="noreferrer">WebSocket-Node</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[我眼中的前端🧐]]></title>
            <link>https://desain7.top./_configDoc/show/whyfe.html</link>
            <guid>https://desain7.top./_configDoc/show/whyfe.html</guid>
            <pubDate>Sat, 12 Dec 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[
 写本文目的
* 为了帮助想学前端，或者正在学前端的学弟学妹，前端新人等 重新认识前端或者说是加深对前端工程师的认识
* 回答收集到的一些疑问
tips:本文中提到的FE（Front-End）均指前]]></description>
            <content:encoded><![CDATA[<h1 id="我眼中的前端🧐" tabindex="-1">我眼中的前端🧐 <a class="header-anchor" href="#我眼中的前端🧐" aria-label="Permalink to &quot;我眼中的前端🧐&quot;">&ZeroWidthSpace;</a></h1>
<blockquote>
<p>个人能力有限，大部分内容均站在个人角度思考，如有表述错误之处，还请斧正，避免误导新同学</p>
</blockquote>
<h2 id="写本文目的" tabindex="-1">写本文目的 <a class="header-anchor" href="#写本文目的" aria-label="Permalink to &quot;写本文目的&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>为了帮助想学前端，或者正在学前端的学弟学妹，前端新人等 重新认识前端或者说是加深对<strong>前端工程师</strong>的认识</li>
<li>回答收集到的一些疑问</li>
</ul>
<p>tips:本文中提到的FE（Front-End）均指前端</p>
<h2 id="什么是前端开发" tabindex="-1">什么是前端开发 <a class="header-anchor" href="#什么是前端开发" aria-label="Permalink to &quot;什么是前端开发&quot;">&ZeroWidthSpace;</a></h2>
<p>这里先引用<a href="https://baike.baidu.com/item/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91" target="_blank" rel="noreferrer">百度百科-前端开发</a>的介绍</p>
<blockquote>
<p>前端开发是创建Web页面或app等前端界面呈现给用户的过程，通过HTML，CSS及JavaScript以及衍生出来的各种技术、框架、解决方案，来实现互联网产品的用户界面交互</p>
</blockquote>
<blockquote>
<p>从网页制作演变而来，名称上有很明显的时代特征。在互联网的演化进程中，网页制作是Web1.0时代的产物，早期网站主要内容都是静态，以图片和文字为主，用户使用网站的行为也以浏览为主。随着互联网技术的发展和HTML5、CSS3的应用，现代网页更加美观，交互效果显著，功能更加强大。</p>
</blockquote>
<p>目前很多新同学和部分学校的老师对前端开发的认识还是停留在<strong>Web1.0</strong>时代</p>
<p>认为FE的工作就是写写网页（页面），认为没有什么难度，容易学习，能力很容易达到天花板</p>
<p>加之网上各种在线教育机构，铺天盖地的针对没有过多FE基础的同学的课程广告 （XX天入门前端，仿XX项目，XX天入门到精通）容易对新人产生误导</p>
<p>这是一种比较狭义的认识</p>
<p><strong>从广义上来讲，所有用户终端产品与<code>视觉</code>和<code>交互</code>有关的部分，都有前端工程师的身影，且前端工程师的职责不止于此</strong>，后文会详细介绍</p>
<p><strong>终端指</strong></p>
<ul>
<li>PC</li>
<li>移动端：Android，IOS</li>
<li>嵌入式设备：Pos机，工作台，智能穿戴设备等</li>
</ul>
<h2 id="什么是web前端工程师" tabindex="-1">什么是Web前端工程师 <a class="header-anchor" href="#什么是web前端工程师" aria-label="Permalink to &quot;什么是Web前端工程师&quot;">&ZeroWidthSpace;</a></h2>
<p>字面上理解就是 主要掌握的Web开发相关技术的前端同学</p>
<p>而与Web相关的技术 就是 HTML,JS,CSS</p>
<p>由此大家就联想到 就是做网站的页面开发</p>
<p>在目前招聘中 Web前端工程师和前端工程师其实指的就是同一个岗位</p>
<h2 id="工作就只是写写页面吗" tabindex="-1">工作就只是写写页面吗 <a class="header-anchor" href="#工作就只是写写页面吗" aria-label="Permalink to &quot;工作就只是写写页面吗&quot;">&ZeroWidthSpace;</a></h2>
<p>前端只写网页页面的时代已经过去很久了</p>
<p>前面也提到了凡是在终端产品中的视觉与交互相关的工作都需要前端工程师 的参与</p>
<p>随着端上的硬件配置越来越高，性能越来越好，用户想要的功能就越来越多</p>
<p>前端的工作是直接影响用户体验的，PM（产品经理）也为了提升用户对产品的使用粘性，也会提出更多的用户体验上的要求，这些是光会写页面所解决不了的</p>
<p>为了丰富用户的体验，就需要丰富页面的交互，动画，提升用户粘性就是利用端上的游戏</p>
<p><strong>例如：</strong></p>
<p>年报（支付宝年度账单）里面的交互动画，数据报表，这里面就涉及到了 <strong>数据可视化</strong>，<strong>复杂交互动画</strong>等技术，各主流App中的内置,果园游戏,种树游戏,每年双十一的淘宝<strong>游戏</strong>活动等，这些都是需要前端工程师的工作内容</p>
<h2 id="快速发展的前端" tabindex="-1">快速发展的前端 <a class="header-anchor" href="#快速发展的前端" aria-label="Permalink to &quot;快速发展的前端&quot;">&ZeroWidthSpace;</a></h2>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNzgyODkyNTU2OA==607828925568" alt="图片"></p>
<p>在Web1.0时代掌握 HTML,JS,CSS 即可</p>
<p>但现代Web开发强调<strong>工程化</strong>，所需要掌握的内容远不止于此，尤其是JS现在已经算是前端的顶梁柱</p>
<p>由此诞生了一句名言：</p>
<blockquote>
<p>任何可以用 JavaScript 来写的应用，最终都将用 JavaScript 来写</p>
</blockquote>
<h2 id="我们能做什么" tabindex="-1">我们能做什么 <a class="header-anchor" href="#我们能做什么" aria-label="Permalink to &quot;我们能做什么&quot;">&ZeroWidthSpace;</a></h2>
<p>除了普通的页面编写，前端<strong>工程师</strong> 还有很多能做的事情...</p>
<h3 id="面向普通用户" tabindex="-1">面向普通用户 <a class="header-anchor" href="#面向普通用户" aria-label="Permalink to &quot;面向普通用户&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>PC：PC网页，桌面应用</li>
<li>移动端：H5应用，手机App，小程序</li>
<li>互动交互
<ul>
<li>游戏：比如支付宝（蚂蚁庄园，蚂蚁森林），淘宝（每年双十一的游戏活动页），各种App中的果园游戏，常见于活动页的交互游戏</li>
<li>动画：用户看见的一些有趣的动画</li>
<li>交互：组件/页面维度之间的交互动画</li>
</ul>
</li>
<li>数据可视化：用户常见的数据图表</li>
</ul>
<h3 id="面向开发者" tabindex="-1">面向开发者 <a class="header-anchor" href="#面向开发者" aria-label="Permalink to &quot;面向开发者&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>工程化
<ul>
<li>流程规范工具</li>
<li>度量监控系统：日志收集，错误上报，页面监控，数据分析，水印服务等</li>
<li>构建工具：基于现有的构建工具进行定制化</li>
<li>研发框架：针对特定业务场景框架，基于已有的开源框架进行定制化的框架</li>
<li>CLI：脚手架工具</li>
<li>组件：UI组件，业务组件，图形组件</li>
<li>测试：UI自动化测试工具</li>
<li>CI/CD：持续集成与持续交付平台搭建，云构建平台</li>
</ul>
</li>
<li>性能优化</li>
<li>Node.js
<ul>
<li>Node中间件</li>
<li>服务端开发框架</li>
<li>各种自动化工具</li>
</ul>
</li>
<li>跨端技术：一套代码，多端复用的框架
<ul>
<li>小程序跨端：微信，QQ,支付宝，百度，字节跳动，快应用等等小程序</li>
<li>移动端跨端：IOS,Android</li>
<li>PC端跨端：windows，Linux，MacOS</li>
</ul>
</li>
<li>可视化技术：将数据转化成为交互的图形或图像
<ul>
<li>数据报表</li>
<li>地理信息可视化</li>
<li>数据图表</li>
</ul>
</li>
<li>搭建服务平台：通过拖拽，结合少量配置的方式生成完整的页面技术</li>
<li>智能化平台：通过AI机器学习，实现直接通过设计原件 生成页面代码，并保证代码的高质量</li>
</ul>
<h2 id="如何成为合格的初级fe" tabindex="-1">如何成为合格的初级FE <a class="header-anchor" href="#如何成为合格的初级fe" aria-label="Permalink to &quot;如何成为合格的初级FE&quot;">&ZeroWidthSpace;</a></h2>
<p><strong>个人观点</strong></p>
<h3 id="_1-具备一定的html-css基础" tabindex="-1">1. 具备一定的HTML,CSS基础 <a class="header-anchor" href="#_1-具备一定的html-css基础" aria-label="Permalink to &quot;1. 具备一定的HTML,CSS基础&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>能完成对UI设计稿的还原</li>
<li>能完成一些简单的交互动画</li>
</ul>
<h3 id="_2-扎实的js基础" tabindex="-1">2. 扎实的JS基础 <a class="header-anchor" href="#_2-扎实的js基础" aria-label="Permalink to &quot;2. 扎实的JS基础&quot;">&ZeroWidthSpace;</a></h3>
<p>js是FE书写最多的内容，很多框架技术,工具等也由JS书写，即最终都脱离不了JS</p>
<ul>
<li>熟悉ES5,ES6的语法</li>
<li>了解BOM/DOM API: 至少了解这些API提供了哪些能力，不一定要记住API如何使用</li>
<li>熟悉一门现代Web框架（Vue,React,Angular）的使用,并了解其一些核心的原理</li>
</ul>
<h3 id="_3-工程化能力" tabindex="-1">3. 工程化能力 <a class="header-anchor" href="#_3-工程化能力" aria-label="Permalink to &quot;3. 工程化能力&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>了解如何使用构建工具</li>
<li>了解如何调试自己的应用</li>
</ul>
<h3 id="_4-项目能力" tabindex="-1">4. 项目能力 <a class="header-anchor" href="#_4-项目能力" aria-label="Permalink to &quot;4. 项目能力&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>能够部署自己的web应用</li>
<li>会使用一种数据库</li>
<li>具备一定的服务端开发能力</li>
</ul>
<h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>能够持续学习</li>
<li>不排斥新技术</li>
</ul>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>前端目前正在迅猛发展，未来的前景也是一片大好</p>
<p>随着硬件技术的迭代，会出现更多的应用场景，FE的工作还是非常具有挑战性的</p>
<p>行业缺的是 <strong>工程师</strong>，而不是 <strong>UI还原师</strong></p>
<h2 id="qa" tabindex="-1">QA <a class="header-anchor" href="#qa" aria-label="Permalink to &quot;QA&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-前端的主要工作-以及前端的好处及坏处" tabindex="-1">1. 前端的主要工作，以及前端的好处及坏处 <a class="header-anchor" href="#_1-前端的主要工作-以及前端的好处及坏处" aria-label="Permalink to &quot;1. 前端的主要工作，以及前端的好处及坏处&quot;">&ZeroWidthSpace;</a></h3>
<p>前端工程师的主要工作上面已经做了详细的介绍</p>
<p>好处，emmm，在我看来</p>
<ul>
<li>工作绝对是有挑战性，能挖掘自己的潜力，让自己持续不断的学习进步</li>
<li>随着企业纷纷开辟线上的场地，是非常缺<strong>前端工程师</strong>的，即好就业</li>
<li>技术产物是最接近用户的，能够获得极大的成就感</li>
</ul>
<p>坏处，我客观的说几个</p>
<ul>
<li>技术更新比较快，需要持续不断的学习</li>
<li>技术种类比较繁多，容易劝退刚会一点，没有人指导方向的初学者</li>
<li>容易原地踏步</li>
</ul>
<h3 id="_2-前端如何入门-前端学习的阶段-学习步骤" tabindex="-1">2. 前端如何入门，前端学习的阶段（学习步骤） <a class="header-anchor" href="#_2-前端如何入门-前端学习的阶段-学习步骤" aria-label="Permalink to &quot;2. 前端如何入门，前端学习的阶段（学习步骤）&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="阶段一-页面还原" tabindex="-1">阶段一：页面还原 <a class="header-anchor" href="#阶段一-页面还原" aria-label="Permalink to &quot;阶段一：页面还原&quot;">&ZeroWidthSpace;</a></h4>
<ol>
<li>了解CSS，HTML的基本语法，熟悉常用属性的编写</li>
<li>达到能对常见的页面(不包含复杂动画与交互)进行1:1的静态还原</li>
</ol>
<p>学习资料：</p>
<ul>
<li><a href="https://www.runoob.com/" target="_blank" rel="noreferrer">菜鸟教程</a>我一直觉得是个不错的入门学习的网站
<ul>
<li><a href="https://www.runoob.com/html/html-tutorial.html" target="_blank" rel="noreferrer">HTML部分内容</a></li>
<li><a href="https://www.runoob.com/css/css-tutorial.html" target="_blank" rel="noreferrer">CSS部分内容</a></li>
</ul>
</li>
</ul>
<p>学习过程主要是<strong>了解其所拥有的能力</strong>，而不是刻意去记住xx属性怎么拼写，有什么作用</p>
<p>在大致了解起基本能力后可以试着看几个综合案例的实现</p>
<ul>
<li><a href="https://www.runoob.com/w3cnote/htmlcss-make-a-website.html" target="_blank" rel="noreferrer">简单页面</a></li>
<li>去<a href="https://www.bilibili.com/" target="_blank" rel="noreferrer">学习网站</a>找个复杂的案例跟一遍
<ul>
<li>这里随便找了个<a href="https://www.bilibili.com/video/BV1yE411D77E?p=1" target="_blank" rel="noreferrer">案例</a></li>
</ul>
</li>
</ul>
<p>在看视频学习时，当遇到素材问题时，可<strong>不必与教程一模一样</strong>，我们的目的是学习这个过程，在实现上可以有<strong>自己的思考</strong>,素材可根据自己喜好替换或者留白</p>
<h4 id="阶段二-赋予页面活力" tabindex="-1">阶段二: 赋予页面活力 <a class="header-anchor" href="#阶段二-赋予页面活力" aria-label="Permalink to &quot;阶段二: 赋予页面活力&quot;">&ZeroWidthSpace;</a></h4>
<ol>
<li>了解JS的基本用法，能简单的对页面进行控制</li>
</ol>
<p>学习资料：</p>
<ul>
<li><a href="https://www.runoob.com/js/js-tutorial.html" target="_blank" rel="noreferrer">JavaScript 教程</a></li>
<li><a href="https://www.runoob.com/js/js-htmldom.html" target="_blank" rel="noreferrer">Js Dom</a></li>
</ul>
<p>资料始终是作为辅助学习<strong>工具</strong>，初学过程得自己判断章节的取舍，而不是按照目录 挨着挨着学</p>
<p>在<strong>了解基本语法后</strong>就可去学习网站上找一个 结合了js的综合案例</p>
<p>当能通过查阅资料来完成自己页面想法的时候，差不多就算入门了</p>
<h4 id="阶段三-趁热打铁" tabindex="-1">阶段三：趁热打铁 <a class="header-anchor" href="#阶段三-趁热打铁" aria-label="Permalink to &quot;阶段三：趁热打铁&quot;">&ZeroWidthSpace;</a></h4>
<ol>
<li>在学会了使用 传统的“三剑客”开发页面后，接着体验一下现代的开发框架开发</li>
</ol>
<p>此时针对JS基础薄弱的同学，推荐<strong>Vue.js入门</strong>，如果觉得自己的JS还不错可以考虑 <strong>React.js</strong></p>
<p>这两个都是js的框架，本质上也是js,即由js的基础能力构成的一个拥有完备工程开发能力的工具</p>
<ul>
<li><a href="https://cn.vuejs.org/index.html" target="_blank" rel="noreferrer">Vue</a></li>
<li><a href="https://zh-hans.reactjs.org/" target="_blank" rel="noreferrer">React</a></li>
</ul>
<p>如果不习惯看官方文档的学习方式，可自行网上找其它的学习资料，相信此时的你已经拥有自己的一套方法搜寻资料</p>
<p>不过最终还是会回到学习文档这里来</p>
<h4 id="阶段四-返璞归真" tabindex="-1">阶段四：返璞归真 <a class="header-anchor" href="#阶段四-返璞归真" aria-label="Permalink to &quot;阶段四：返璞归真&quot;">&ZeroWidthSpace;</a></h4>
<ul>
<li>此时的你应该已经具备开发一个普通项目/页面的能力了</li>
</ul>
<p>此时就需要重新系统的弥补自己的基础能力（JS为主,CSS为次要）,相信二次的学习，会有很大的收获，过程中会产生一些<strong>顿悟</strong></p>
<p>javascript:</p>
<ul>
<li><a href="https://wangdoc.com/javascript/" target="_blank" rel="noreferrer">ES5</a></li>
<li><a href="https://wangdoc.com/es6/" target="_blank" rel="noreferrer">ES6</a></li>
</ul>
<p>css:</p>
<ul>
<li><a href="https://www.runoob.com/css3/css3-tutorial.html" target="_blank" rel="noreferrer">css3的新能力</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noreferrer">弹性布局:flex</a></li>
<li><a href="https://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html" target="_blank" rel="noreferrer">栅栏布局:grid</a></li>
<li>响应式布局</li>
</ul>
<h4 id="阶段五-无尽的探索" tabindex="-1">阶段五：无尽的探索 <a class="header-anchor" href="#阶段五-无尽的探索" aria-label="Permalink to &quot;阶段五：无尽的探索&quot;">&ZeroWidthSpace;</a></h4>
<p>此时你已经是具备一定的实战经验，拥有扎实的基础知识支撑：</p>
<p>可以在后文列举的 开发技术中 探索自己感兴趣的内容</p>
<p>又或者不满足于只能实现静态网页，可以学习一些后端的技术（最低成本基于Node.js的后端能力）</p>
<p>后面的路，自己去探索是最好的，去寻找自己感兴趣的方向，先广度，后深入探寻</p>
<h3 id="_3-前端学习有什么需要注意的吗" tabindex="-1">3. 前端学习有什么需要注意的吗 <a class="header-anchor" href="#_3-前端学习有什么需要注意的吗" aria-label="Permalink to &quot;3. 前端学习有什么需要注意的吗&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li><strong>重视基础内容，尤其js</strong>，会的不在多，在于精</li>
<li>切勿急于求成，觉得自己<strong>能随心所欲的写出一个页面</strong>就沾沾自喜，能够完成学校的项目，觉得自己找工作就没问题了</li>
<li>不骄不躁，脚踏实地的学习</li>
</ol>
<h3 id="_4-前端学习进入大厂的方式" tabindex="-1">4. 前端学习进入大厂的方式 <a class="header-anchor" href="#_4-前端学习进入大厂的方式" aria-label="Permalink to &quot;4. 前端学习进入大厂的方式&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>了解：听说过这个概念，知道是干什么的</p>
</blockquote>
<blockquote>
<p>熟悉：能快速地利用这个技术构建一个可用的应用</p>
</blockquote>
<blockquote>
<p>精通：读过源码，了解其原理，可对其修改以满足某些特殊需求</p>
</blockquote>
<ul>
<li>扎实的前端技术
<ul>
<li>熟练掌握js，css，html</li>
<li>具备一定的实战项目开发经验</li>
<li>对框架（Vue/React）的原理有一定了解，能复现或者清楚的描述出来</li>
<li>对前端工程化有自己的理解和实战经验</li>
<li>一些额外的开发能力（能够描述清楚技术的原理）
<ul>
<li>xx插件</li>
<li>小程序</li>
<li>桌面应用</li>
<li>移动App</li>
<li>跨端开发技术</li>
<li>...</li>
</ul>
</li>
</ul>
</li>
<li>扎实的计算机基础知识（前端同学考察比较浅，但一定会考，<strong>切勿轻视</strong>）
<ul>
<li>操作系统</li>
<li>算法与数据结构</li>
<li>计算机网络</li>
<li>设计模式</li>
</ul>
</li>
<li>加分项（我认为）
<ul>
<li>有一定的后端开发能力
<ul>
<li>服务端开发经验</li>
<li>数据库</li>
</ul>
</li>
<li>多人协作项目的开发</li>
<li>熟悉Git</li>
<li>了解Linux的基本用法</li>
<li>会部署自己的前端工程</li>
<li>自己的个人博客</li>
<li>实习经验</li>
</ul>
</li>
</ul>
<p>校招考点在<a href="./../top/campusProblem.html">这里</a>也做了总结</p>
<h3 id="_5-前端学习如何可以快速做出一个项目-学什么" tabindex="-1">5. 前端学习如何可以快速做出一个项目（学什么） <a class="header-anchor" href="#_5-前端学习如何可以快速做出一个项目-学什么" aria-label="Permalink to &quot;5. 前端学习如何可以快速做出一个项目（学什么）&quot;">&ZeroWidthSpace;</a></h3>
<p>希望快速得到结果：</p>
<p>了解一下<strong>html,css</strong>怎么用如何书写,通过查阅资料,就可以开发一个简单的页面</p>
<p>如果希望丰富页面的交互，<strong>了解js的简单语法</strong>，根据自己想要的查一下<strong>BOM，DOM API</strong></p>
<p>能够通过查阅资料 写出代码（自己能懂每一行是什么意思）实现自己的项目，我觉得就算入门了</p>
<p>后续快速开发（JS基础薄弱的话）就可以学Vue框架（🍬）有时间的话，一周看完一个实践教程不成问题，过程中肯定会遇到很多 不解的东西，此时就需要记下来，下来去查资料，然后消化吸收，差不多1-2个实战教程后，就算框架入门了，自己也能更快速的实现自己想要的东西</p>
<p>接下来就需要回过头去 认真看一下JS</p>
<h3 id="_6-做一个桌面小程序或者微信小程序需要学习什么除了三件套之外" tabindex="-1">6. 做一个桌面小程序或者微信小程序需要学习什么除了三件套之外 <a class="header-anchor" href="#_6-做一个桌面小程序或者微信小程序需要学习什么除了三件套之外" aria-label="Permalink to &quot;6. 做一个桌面小程序或者微信小程序需要学习什么除了三件套之外&quot;">&ZeroWidthSpace;</a></h3>
<p>小程序厂商约束了开发的规范，阉割了一些 <strong>“三剑客”</strong> 的能力，实际开发 还是运用的这三者，只是换了一些概念</p>
<p>即学习成本只有：<strong>熟悉特定厂商的开发规范文档，与开发工具（IDE）的使用</strong></p>
<p>如果不知如何入手，看文档看不懂，就推荐找一门小程序的实战课程看一下</p>
<p>如果想同时开发一个能在多个平台上线的小程序，推荐去学习一个跨端开发框架，后文有介绍</p>
<p>如果做 <strong>桌面应用的话</strong>，学习<a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron</a>框架即可，所使用到的技术依旧是
<strong>三剑客</strong>，只是需要遵循框架的开发规范</p>
<h3 id="_7-进入大厂除了必要的前端知识-还需要什么知识。比如后端-数据库之类的需要吗" tabindex="-1">7. 进入大厂除了必要的前端知识，还需要什么知识。比如后端，数据库之类的需要吗 <a class="header-anchor" href="#_7-进入大厂除了必要的前端知识-还需要什么知识。比如后端-数据库之类的需要吗" aria-label="Permalink to &quot;7. 进入大厂除了必要的前端知识，还需要什么知识。比如后端，数据库之类的需要吗&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>计算机基础知识</li>
<li>有一定的实战项目经验</li>
<li>Git</li>
<li>关于后端技术
<ul>
<li>非必须，但技多不压身，你会别人不会 这就是你的优势，我相信你也不满足于只写静态页面</li>
<li>数据库：非关系数据库，关系数据库 会使用一个</li>
</ul>
</li>
</ul>
<h3 id="_8-进入大厂需要准备什么以前端来说-比如项目-或者奖-是必要的吗" tabindex="-1">8. 进入大厂需要准备什么以前端来说，比如项目，或者奖，是必要的吗 <a class="header-anchor" href="#_8-进入大厂需要准备什么以前端来说-比如项目-或者奖-是必要的吗" aria-label="Permalink to &quot;8. 进入大厂需要准备什么以前端来说，比如项目，或者奖，是必要的吗&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>项目是<strong>一定需要的</strong>
<ul>
<li>在筛选简历环节环节，除了学校和你的能力基本介绍信息之外，就是看你简历上的项目，来判断你的实际开发能力，<strong>如果简历上一个项目都没有，那你简历上还剩什么？</strong></li>
</ul>
</li>
<li>奖：非必须
<ul>
<li>ACM此类知名的算法大赛获奖是含金量最高的，其它的程序设计比赛或者项目竞赛奖我觉得至少需要<strong>省一及以上</strong></li>
</ul>
</li>
</ul>
<h3 id="_9-关于目前开发框架现状" tabindex="-1">9. 关于目前开发框架现状 <a class="header-anchor" href="#_9-关于目前开发框架现状" aria-label="Permalink to &quot;9. 关于目前开发框架现状&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>曾经流行: JQuery,UI库（Bootstrap,Layui）,requirejs(模块化方案)</li>
<li>现在流行: 组件化开发，Vue，React</li>
</ul>
<h3 id="_10-与前端开发相关技术有哪些" tabindex="-1">10. 与前端开发相关技术有哪些 <a class="header-anchor" href="#_10-与前端开发相关技术有哪些" aria-label="Permalink to &quot;10. 与前端开发相关技术有哪些&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>平台相关
<ul>
<li>桌面应用：Electron</li>
<li>跨端开发：Native，React Native，Cordova, Weex，uni-app，Rax（阿里），Taro（京东），Chameleon（滴滴），Hippy（腾讯）等 --- 百花齐放
<ul>
<li>一端开发多端复用：代码复用</li>
<li>端指：web,ios,Android,小程序等</li>
</ul>
</li>
<li>web：Vue，React，Angular</li>
</ul>
</li>
<li>强类型支持：TypeScript</li>
<li>构建工具：Webpack，Gulp，Grunt</li>
<li>服务端：Node.js -&gt; express,koa,egg 等</li>
<li>css预编译：SASS、Less、Stylus</li>
</ul>
<p>以上只是对一些前端技术做了一些列举，并不全面，来说明现在<strong>前端繁荣的生态</strong>，下面专门做了一些详细的列举</p>
<h2 id="前端相关开发技术列举" tabindex="-1">前端相关开发技术列举 <a class="header-anchor" href="#前端相关开发技术列举" aria-label="Permalink to &quot;前端相关开发技术列举&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-web开发" tabindex="-1">1. Web开发 <a class="header-anchor" href="#_1-web开发" aria-label="Permalink to &quot;1. Web开发&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>开发框架</strong></p>
<ul>
<li><a href="https://cn.vuejs.org/https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue</a></li>
<li><a href="https://react.docschina.org/" target="_blank" rel="noreferrer">React</a></li>
<li><a href="https://angular.cn/" target="_blank" rel="noreferrer">Angular</a></li>
</ul>
<p><strong>UI组件库</strong></p>
<ul>
<li>Vue: <a href="https://element.eleme.cn/" target="_blank" rel="noreferrer">ElementUI</a>,<a href="http://iview.talkingdata.com/#/" target="_blank" rel="noreferrer">iView</a>,<a href="https://didi.github.io/cube-ui/#/zh-CN" target="_blank" rel="noreferrer">Cube UI</a>，<a href="https://youzan.github.io/vant/#/zh-CN/" target="_blank" rel="noreferrer">Vant</a>,<a href="https://vuetifyjs.com/en/" target="_blank" rel="noreferrer">vuetify</a>，<a href="https://www.antdv.com/docs/vue/introduce-cn/" target="_blank" rel="noreferrer">Ant design</a></li>
<li>React: <a href="https://ant-design.gitee.io/docs/react/introduce-cn" target="_blank" rel="noreferrer">Ant design</a>，<a href="https://material-ui.com/zh/" target="_blank" rel="noreferrer">MATERIAL-UI</a>,<a href="https://chakra-ui.com/" target="_blank" rel="noreferrer">Chakra UI</a></li>
</ul>
<h3 id="_2-跨端开发" tabindex="-1">2. 跨端开发 <a class="header-anchor" href="#_2-跨端开发" aria-label="Permalink to &quot;2. 跨端开发&quot;">&ZeroWidthSpace;</a></h3>
<p>一套代码，多端复用</p>
<p><strong>桌面应用</strong></p>
<ul>
<li><a href="https://www.electronjs.org/" target="_blank" rel="noreferrer">Electron</a></li>
<li><a href="https://flutter.dev/" target="_blank" rel="noreferrer">Flutter</a></li>
</ul>
<p><strong>移动应用</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">框架名称</th>
<th style="text-align:center">IOS</th>
<th style="text-align:center">Android</th>
<th style="text-align:center">小程序</th>
<th style="text-align:center">Web</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://reactnative.cn/" target="_blank" rel="noreferrer">React Native</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://cordova.axuer.com/" target="_blank" rel="noreferrer">Cordova</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://uniapp.dcloud.io/" target="_blank" rel="noreferrer">uni-app</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://weex.apache.org/zh/" target="_blank" rel="noreferrer">Weex</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://rax.js.org/" target="_blank" rel="noreferrer">Rax</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://nervjs.github.io/taro/docs/README" target="_blank" rel="noreferrer">Taro</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="http://cml.didi.cn/" target="_blank" rel="noreferrer">Chameleon</a></td>
<td style="text-align:center">❌</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://github.com/Tencent/Hippy/blob/master/README.zh_CN.md" target="_blank" rel="noreferrer">Hippy</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://flutter.dev/" target="_blank" rel="noreferrer">Flutter</a></td>
<td style="text-align:center">✅</td>
<td style="text-align:center">✅</td>
<td style="text-align:center">❌</td>
<td style="text-align:center">✅</td>
</tr>
</tbody>
</table>
<h3 id="_3-游戏引擎" tabindex="-1">3. 游戏引擎 <a class="header-anchor" href="#_3-游戏引擎" aria-label="Permalink to &quot;3. 游戏引擎&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://www.egret.com/" target="_blank" rel="noreferrer">egret-白鹭引擎</a></li>
<li><a href="https://www.layabox.com/" target="_blank" rel="noreferrer">LayaAir</a></li>
<li><a href="http://phaser.io/" target="_blank" rel="noreferrer">phaser</a></li>
<li><a href="http://hiloteam.github.io/index.html" target="_blank" rel="noreferrer">Hilo</a></li>
</ul>
<h3 id="_4-服务端开发-node-js" tabindex="-1">4. 服务端开发-<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noreferrer">Node.js</a> <a class="header-anchor" href="#_4-服务端开发-node-js" aria-label="Permalink to &quot;4. 服务端开发-[Node.js](https://nodejs.org/zh-cn/)&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://expressjs.com/" target="_blank" rel="noreferrer">Express</a></li>
<li><a href="https://koajs.com/" target="_blank" rel="noreferrer">koa</a></li>
<li><a href="https://nestjs.com/" target="_blank" rel="noreferrer">Nest</a></li>
<li><a href="https://eggjs.org/zh-cn/" target="_blank" rel="noreferrer">egg</a></li>
</ul>
<h3 id="_5-数据可视化" tabindex="-1">5. 数据可视化 <a class="header-anchor" href="#_5-数据可视化" aria-label="Permalink to &quot;5. 数据可视化&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>相关技术：<a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG" target="_blank" rel="noreferrer">SVG</a>,<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebGL_API" target="_blank" rel="noreferrer">Web GL</a>,<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API" target="_blank" rel="noreferrer">Canvas</a></li>
<li>可视化库：<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="noreferrer">echarts</a>,<a href="https://antv.vision/" target="_blank" rel="noreferrer">antv</a>,<a href="https://www.chartjs.org/" target="_blank" rel="noreferrer">Chart.js</a>,<a href="https://formidable.com/open-source/victory/" target="_blank" rel="noreferrer">VICTORY</a>...</li>
</ul>
<h3 id="_6-构建工具" tabindex="-1">6. 构建工具 <a class="header-anchor" href="#_6-构建工具" aria-label="Permalink to &quot;6. 构建工具&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://www.webpackjs.com/" target="_blank" rel="noreferrer">webpack</a></li>
<li><a href="https://www.gulpjs.com.cn/" target="_blank" rel="noreferrer">glup</a></li>
<li><a href="https://www.gruntjs.net/" target="_blank" rel="noreferrer">grunt</a></li>
</ul>
<h3 id="_7-工程化中使用工具" tabindex="-1">7. 工程化中使用工具 <a class="header-anchor" href="#_7-工程化中使用工具" aria-label="Permalink to &quot;7. 工程化中使用工具&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://www.babeljs.cn/" target="_blank" rel="noreferrer">Babel</a></li>
<li><a href="https://cn.eslint.org/" target="_blank" rel="noreferrer">Eslint</a></li>
</ul>
<h3 id="_8-度量监控" tabindex="-1">8. 度量监控 <a class="header-anchor" href="#_8-度量监控" aria-label="Permalink to &quot;8. 度量监控&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://www.frontjs.com/" target="_blank" rel="noreferrer">frontjs</a></li>
<li><a href="https://www.fundebug.com/" target="_blank" rel="noreferrer">fundebug</a></li>
<li><a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="noreferrer">百度统计</a></li>
<li><a href="https://marketingplatform.google.com/about/" target="_blank" rel="noreferrer">Google Analytics</a></li>
<li><a href="https://www.umeng.com/web" target="_blank" rel="noreferrer">CNZZ</a></li>
</ul>
<h3 id="_9-智能化" tabindex="-1">9. 智能化 <a class="header-anchor" href="#_9-智能化" aria-label="Permalink to &quot;9. 智能化&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://www.imgcook.com/" target="_blank" rel="noreferrer">imgcook</a></li>
<li><a href="https://alibaba.github.io/pipcook/#/zh-cn/" target="_blank" rel="noreferrer">pipcook</a></li>
<li><a href="https://www.tensorflow.org/js?hl=zh-cn" target="_blank" rel="noreferrer">TensorFlow.js</a></li>
</ul>
<h3 id="其它-1" tabindex="-1">其它 <a class="header-anchor" href="#其它-1" aria-label="Permalink to &quot;其它&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://www.tslang.cn/" target="_blank" rel="noreferrer">TypeScript</a></li>
<li>...</li>
</ul>
<p>TODO: 补充一张前端技术的思维导图</p>
<h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="https://www.yuque.com/robinson/fe-pro/gu001d" target="_blank" rel="noreferrer">语雀-分享狼叔关于《大前端工程化的实践与思考》</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[🤔为什么需要手动刷新本站点]]></title>
            <link>https://desain7.top./_configDoc/show/sw.html</link>
            <guid>https://desain7.top./_configDoc/show/sw.html</guid>
            <pubDate>Fri, 27 Nov 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[当你访问站点时，如发现页面右下角有这个小窗时，请记得点一下
<div
    <img width="400px;" src ="https://img.cdn.sugarat.top/mdImg/M]]></description>
            <content:encoded><![CDATA[<h1 id="🤔为什么需要手动刷新本站点" tabindex="-1">🤔为什么需要手动刷新本站点 <a class="header-anchor" href="#🤔为什么需要手动刷新本站点" aria-label="Permalink to &quot;🤔为什么需要手动刷新本站点&quot;">&ZeroWidthSpace;</a></h1>
<p>当你访问站点时，如发现页面右下角有这个小窗时，请记得点一下</p>
<div>
    <img width="400px;" src ="https://img.cdn.sugarat.top/mdImg/MTYwNjU0NzUyMDQwNg==606547520406" alt="示例"/>
</div>
<h2 id="为什么🤔" tabindex="-1">为什么🤔 <a class="header-anchor" href="#为什么🤔" aria-label="Permalink to &quot;为什么🤔&quot;">&ZeroWidthSpace;</a></h2>
<p>网站接入了资源离线化方案 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Service_Worker_API" target="_blank" rel="noreferrer">ServiceWorker</a></p>
<p>通俗讲就是首次联网访问后，浏览器会把资源文件都缓存起来，用户断网后仍能访问本站点（需要用户的浏览器支持 ServiceWorker）</p>
<p>能提升用户的阅读体验，利用缓存也能大幅提高页面加载速率</p>
<h2 id="如何查看是否支持🤪" tabindex="-1">如何查看是否支持🤪 <a class="header-anchor" href="#如何查看是否支持🤪" aria-label="Permalink to &quot;如何查看是否支持🤪&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>
<p>通过<a href="https://caniuse.com/?search=serviceworker" target="_blank" rel="noreferrer">CAN I USE</a>查询自己的终端是否支持</p>
</li>
<li>
<p>可在DevTools(开发者调试工具) 中的 Application 面板的 ServiceWorkers的侧边栏中 看到如下内容</p>
</li>
</ol>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjU0OTYzNDg5NQ==606549634895" alt="图片"></p>
<ul>
<li>绿色的表示是目前正在使用的sw.js(缓存控制文件)版本</li>
<li>橙色表示已经就绪的新版本内容，等待被载入使用</li>
</ul>
<p>💡1. 用户可以通过弹窗的引导，主动载入最新的内容</p>
<p>💡2. <strong>完全</strong>退出浏览器，重新访问本站点</p>
<p>以上两种方式都可实现最新内容的加载</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器专题系列文章]]></title>
            <link>https://desain7.top./bigWeb/browser/</link>
            <guid>https://desain7.top./bigWeb/browser/</guid>
            <pubDate>Thu, 19 Nov 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[主要针对面试中所遇到的相关知识做一些梳理与知识延伸
其次分享一些与面试无关的知识，提升自己
你可以在评论区留下你的问题，让我们共同完善
 目录
* 阻塞
* 缓存机制
* 分享小册《Chrome-De]]></description>
            <content:encoded><![CDATA[<h1 id="浏览器专题系列文章" tabindex="-1">浏览器专题系列文章 <a class="header-anchor" href="#浏览器专题系列文章" aria-label="Permalink to &quot;浏览器专题系列文章&quot;">&ZeroWidthSpace;</a></h1>
<p>主要针对面试中所遇到的相关知识做一些梳理与知识延伸</p>
<p>其次分享一些与面试无关的知识，提升自己</p>
<p>你可以在评论区留下你的问题，让我们共同完善</p>
<h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><a href="./block.html">阻塞</a></li>
<li><a href="./cache.html">缓存机制</a></li>
<li><a href="./chrome-devtools-study.html">分享小册《Chrome-DevTools的使用技巧》中的精华</a></li>
<li><a href="./core.html">内核</a></li>
<li><a href="./cors.html">跨域与跨站</a></li>
<li><a href="./eventloop.html">浏览器中的Event loop</a></li>
<li><a href="./problem.html">常见问题</a></li>
<li><a href="./render.html">渲染原理</a></li>
<li><a href="./safe.html">安全</a></li>
<li><a href="./storage.html">本地存储</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-阻塞]]></title>
            <link>https://desain7.top./bigWeb/browser/block.html</link>
            <guid>https://desain7.top./bigWeb/browser/block.html</guid>
            <pubDate>Mon, 26 Oct 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ CSS
 1. 阻塞渲染
阻塞渲染，仅是指浏览器是否需要暂停网页的首次渲染，直至该资源准备就绪
CSS 被视为阻塞渲染的资源，这意味着浏览器将不会渲染任何已处理的内容，直至 CSSOM 构建完毕
举]]></description>
            <content:encoded><![CDATA[<h1 id="阻塞" tabindex="-1">阻塞 <a class="header-anchor" href="#阻塞" aria-label="Permalink to &quot;阻塞&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-阻塞渲染" tabindex="-1">1. 阻塞渲染 <a class="header-anchor" href="#_1-阻塞渲染" aria-label="Permalink to &quot;1. 阻塞渲染&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>阻塞渲染，仅是指浏览器是否需要暂停网页的首次渲染，直至该资源准备就绪</strong></p>
<p>CSS 被视为阻塞渲染的资源，这意味着浏览器将不会渲染任何已处理的内容，直至 CSSOM 构建完毕</p>
<p>举例：</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic">&lt;!-- 外网资源，无梯子无法访问 --&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">https://www.youtube.com/s/player/4a1799bd/www-player-webp.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./1.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">content</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>1.css</p>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">h1</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #B2CCD6">color</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> red</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>在外网样式资源下载完成前，页面将会处于白屏现象</p>
<p>如阻塞渲染的样式资源下载超时报错，则会跳过，会使用已经下载完成的CSS资源做解析构建CSSOM</p>
<p>所以在等待一段时间后（资源下载超时后）页面才会显示出来</p>
<h3 id="_2-阻塞html解析" tabindex="-1">2. 阻塞html解析 <a class="header-anchor" href="#_2-阻塞html解析" aria-label="Permalink to &quot;2. 阻塞html解析&quot;">&ZeroWidthSpace;</a></h3>
<p>举例</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">red1</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">https://www.youtube.com/s/player/4a1799bd/www-player-webp.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">red2</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>可以看到页面依旧处于白屏状态，此时在开发者工具中，可查看到Dom树中<code>link</code>节点后的<code>h1</code> 节点并未被解析出来</p>
<p>点击浏览器的停止加载按钮，<code>red1</code>内容会被渲染出来，此时查看Dom树，发现是没有<code>&lt;h1&gt;red2&lt;/h1&gt;</code>这个节点的</p>
<p>当资源下载失败时，<code>&lt;h1&gt;red2&lt;/h1&gt;</code> 才会被解析到，然后渲染出来</p>
<h3 id="_3-如何解除阻塞" tabindex="-1">3. 如何解除阻塞 <a class="header-anchor" href="#_3-如何解除阻塞" aria-label="Permalink to &quot;3. 如何解除阻塞&quot;">&ZeroWidthSpace;</a></h3>
<p>在渲染树构建中，要求同时具有 DOM 树和 CSSOM树 才能进行构建,任何一个🌲构建过程中出现阻塞，会导致页面显示异常，导致出现严重的性能问题</p>
<p><strong>HTML 和 CSS 都是阻塞渲染的资源</strong></p>
<ul>
<li>HTML 显然是必需的，因为如果没有 DOM，我们就没有可渲染的内容</li>
<li>CSS 的必要性就不一定
<ul>
<li><strong>浏览器会下载所有 CSS 资源，无论阻塞还是不阻塞</strong></li>
<li>CSS 是阻塞渲染的资源。需要将它尽早、尽快地下载到客户端，以便缩短首次渲染的时间</li>
</ul>
</li>
</ul>
<p><strong>通过<code>媒体类型</code>或<code>媒体查询</code>可以将一些 CSS 资源标记为不阻塞渲染的资源</strong></p>
<p>如果我们有一些 CSS 样式只在特定条件下（例如显示网页或将网页投影到大型显示器上时）使用,我们可以通过 CSS“媒体类型”或“媒体查询”来解决这类用例</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 适用于所有情况，始终阻塞渲染 --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">style.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 只在打印内容时适用，网页首次加载时 --&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 该样式表不需要阻塞渲染 --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">print.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">media</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">print</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 由浏览器执行的“媒体查询”：符合条件时--&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 浏览器将阻塞渲染，直至样式表下载并处理完毕--&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- (页面首次加载时，如果不满足条件，不会阻塞渲染，但依旧会请求下载对应的资源) --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">other.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">media</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">(max-width: 400px)</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>通过使用媒体查询，我们可以根据特定用例（比如显示或打印），也可以根据动态情况（比如屏幕方向变化、尺寸调整事件等）定制外观</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 阻塞渲染，适用于所有情况 --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">style.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">    </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 默认all，等价于不写 --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">style.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">    </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">media</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">all</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 具有动态媒体查询，将在网页加载时计算 --&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 根据网页加载时设备的方向，portrait(纵向-高度大于宽度).css 可能阻塞渲染，也可能不阻塞渲染 --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">portrait.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">media</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">orientation:portrait</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- 只在打印网页时应用，因此网页首次在浏览器中加载时，它不会阻塞渲染 --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">print.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">    </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">media</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">print</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>利用媒体查询解决上面的问题:</p>
<ul>
<li>只在加载时当屏幕宽度<code>&lt;=400px</code>时才阻塞,其它情况不阻塞渲染</li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic">&lt;!-- 外网资源，无梯子无法访问 --&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">https://www.youtube.com/s/player/4a1799bd/www-player-webp.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">media</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">(max-width: 400px)</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./1.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">content</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="_4-小结" tabindex="-1">4. 小结 <a class="header-anchor" href="#_4-小结" aria-label="Permalink to &quot;4. 小结&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>CSS 是阻塞渲染的资源，在CSSOM构建完毕之前浏览器将不会渲染任何已处理的内容</li>
<li>利用<strong>媒体类型</strong> 或 <strong>媒体查询</strong>来解除对渲染的阻塞</li>
<li>浏览器会下载所有 CSS 资源，无论阻塞还是不阻塞</li>
</ul>
<h2 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-label="Permalink to &quot;JS&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-阻塞渲染-1" tabindex="-1">1. 阻塞渲染 <a class="header-anchor" href="#_1-阻塞渲染-1" aria-label="Permalink to &quot;1. 阻塞渲染&quot;">&ZeroWidthSpace;</a></h3>
<p>JavaScript 可以查询和修改 DOM 与 CSSOM</p>
<p>所以当 HTML 解析器遇到一个 script 标记时，它会暂停构建 DOM，将控制权移交给 JS 引擎，等 JS 引擎运行完毕，浏览器会从中断的地方恢复 DOM 构建</p>
<p><strong>内联脚本阻塞渲染示例</strong></p>
<ul>
<li>刚加载时页面白屏，5秒后才会渲染出内容</li>
<li>说明内联js会阻塞DOM解析和渲染</li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">AAA</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> (Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h2</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">BBB</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h2</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>外联同步脚本阻塞渲染示例</strong></p>
<ul>
<li>可以看到会先渲染出 <code>AAA</code>,5 s 后才渲染出 <code>BBB</code></li>
<li>说明外联脚本也会阻塞DOM解析与渲染，但是因为无法确定脚本中的内容，所以会优先渲染一次已经构建DOM，确保加载的脚本能取得最新的DOM</li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">AAA</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./test.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h2</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">BBB</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h2</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>test.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> (Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span></code></pre>
</div><h3 id="_2-解除阻塞" tabindex="-1">2. 解除阻塞 <a class="header-anchor" href="#_2-解除阻塞" aria-label="Permalink to &quot;2. 解除阻塞&quot;">&ZeroWidthSpace;</a></h3>
<p>将 JavaScript 脚本显式声明为异步，即可防止其阻塞DOM构建与渲染</p>
<p>向 script 标记添加异步关键字可以指示浏览器在等待脚本可用期间不阻止 DOM 构建</p>
<ul>
<li>defer：异步进行下载，然后等待 HTML 解析完成后（DOM完成构建）按照下载顺序进行执行</li>
<li>async：异步进行下载,下载完成后会立即执行，执行时仍然会阻塞</li>
</ul>
<p><strong>defer使用示例</strong></p>
<ul>
<li>5 s 后可以看到渲染出<code>AAA</code>和<code>BBB</code></li>
<li>又经过 5 s后控制台打印 <code>render success</code>,<code>render success2</code></li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">AAA</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">defer</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./test.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">defer</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./tes2.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> k </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> (Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> k </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">BBB</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>test.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> (Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">5</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">render success</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span></code></pre>
</div><p>tes2.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">render success2</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span></code></pre>
</div><p><strong>async使用示例</strong></p>
<ul>
<li>4 s 后可以看到渲染出<code>AAA</code></li>
<li>又经过 4 s后渲染出<code>BBB</code></li>
<li>然后控制台打印 <code>render success</code>,</li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">AAA</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">async</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./test.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> k </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> (Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> k </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">BBB</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>test.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">while</span><span style="color: #A6ACCD"> (Date</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">now</span><span style="color: #A6ACCD">() </span><span style="color: #89DDFF">&lt;</span><span style="color: #A6ACCD"> d </span><span style="color: #89DDFF">+</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1000</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">4</span><span style="color: #A6ACCD">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">render success</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">;</span></span></code></pre>
</div><h3 id="_3-小结" tabindex="-1">3. 小结 <a class="header-anchor" href="#_3-小结" aria-label="Permalink to &quot;3. 小结&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>无论是内联还是外联，js脚本会阻塞DOM的解析与渲染</strong>但</p>
<ul>
<li>外联：因为无法确定外联脚本中的内容，所以会优先渲染一次已经构建DOM，确保加载的脚本能取得最新的DOM</li>
</ul>
<p>将 JavaScript 脚本显式声明为异步，即可防止其阻塞DOM构建与渲染</p>
<p>在 script 标签中添加异步关键字即可指示浏览器在等待脚本下载期间不阻止 DOM 构建</p>
<p><strong>异步关键字</strong></p>
<ul>
<li>defer：异步进行下载，然后等待 HTML 解析完成后（DOM完成构建）按照下载顺序进行执行</li>
<li>async：异步进行下载,下载完成后会立即执行，执行时仍然会阻塞</li>
</ul>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>JS 与 CSS 都是阻塞页面渲染的资源</li>
<li>可以通过媒体查询解除解决CSS在特定场景阻塞的问题</li>
<li>可通过为script添加异步属性来防止阻塞</li>
</ol>
<p><strong>补充：</strong> CSS 其实可以通过打包工具转化成js，在页面加载时，通过异步加载js资源，然后应用样式。这也是可以防止css阻塞渲染的一种方式</p>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<ul>
<li><a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-blocking-css" target="_blank" rel="noreferrer">developers-关键路径渲染</a></li>
</ul>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-常见面试题]]></title>
            <link>https://desain7.top./bigWeb/browser/problem.html</link>
            <guid>https://desain7.top./bigWeb/browser/problem.html</guid>
            <pubDate>Mon, 26 Oct 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ 目录
[[toc]]
::: warning TODO: 此页内容待重新完善
* 经典面试题：从URL输入到页面展现出来发生过了什么
* 。。。
:::
 💡1.为什么操作 DOM 慢?
DOM ]]></description>
            <content:encoded><![CDATA[<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">&ZeroWidthSpace;</a></h2>
<nav class="table-of-contents"><ul><li><a href="#目录">目录</a></li><li><a href="#💡1-为什么操作-dom-慢">💡1.为什么操作 DOM 慢?</a></li><li><a href="#_2-展示大量的数据-如何实现页面不卡顿">2.展示大量的数据,如何实现页面不卡顿?</a></li><li><a href="#_3-什么情况阻塞渲染">3.什么情况阻塞渲染?</a></li><li><a href="#_4-重绘-repaint-和回流-reflow">4.重绘（Repaint）和回流（Reflow）?</a></li><li><a href="#_5-如何减少重绘和回流">5.如何减少重绘和回流?</a></li><li><a href="#_6-在不考虑缓存和优化网络协议的前提下-考虑可以通过哪些方式来最快的渲染页面">6.在不考虑缓存和优化网络协议的前提下，考虑可以通过哪些方式来最快的渲染页面?</a></li><li><a href="#_7-为什么浏览器要使用同源策略">7.为什么浏览器要使用同源策略?</a></li><li><a href="#_8-跨域请求是否发出去了">8.跨域请求是否发出去了</a></li><li><a href="#_9-什么是跨域">9.什么是跨域</a></li><li><a href="#_10-为什么浏览器要使用同源策略">10.为什么浏览器要使用同源策略</a></li><li><a href="#_11-有哪些方式可以解决跨域问题">11.有哪些方式可以解决跨域问题</a></li><li><a href="#_12-什么是预检请求">12.什么是预检请求</a></li></ul></nav>
<div class="warning custom-block"><p class="custom-block-title">TODO: 此页内容待重新完善</p>
<ul>
<li>经典面试题：从URL输入到页面展现出来发生过了什么</li>
<li>。。。</li>
</ul>
</div>
<h2 id="💡1-为什么操作-dom-慢" tabindex="-1">💡1.为什么操作 DOM 慢? <a class="header-anchor" href="#💡1-为什么操作-dom-慢" aria-label="Permalink to &quot;💡1.为什么操作 DOM 慢?&quot;">&ZeroWidthSpace;</a></h2>
<p>DOM 是属于<strong>渲染引擎</strong>中的东西，而 JS 又是 <strong>JS 引擎</strong>中的。通过 JS 操作 DOM 的时候，这个操作涉及到了两个线程之间的通信，必然会带来一些性能上的损耗。操作 DOM 次数一多，就等同于一直在进行线程之间的通信，并且操作DOM可能还会带来重绘回流的影响，所以也就导致了性能上的问题。</p>
<h2 id="_2-展示大量的数据-如何实现页面不卡顿" tabindex="-1">2.展示大量的数据,如何实现页面不卡顿? <a class="header-anchor" href="#_2-展示大量的数据-如何实现页面不卡顿" aria-label="Permalink to &quot;2.展示大量的数据,如何实现页面不卡顿?&quot;">&ZeroWidthSpace;</a></h2>
<p>虚拟滚动(即懒加载的方式)</p>
<p>原理就是只渲染可视区域内的内容，非可见区域的那就完全不渲染了，当用户在滚动的时候就实时去替换渲染的内容。</p>
<h2 id="_3-什么情况阻塞渲染" tabindex="-1">3.什么情况阻塞渲染? <a class="header-anchor" href="#_3-什么情况阻塞渲染" aria-label="Permalink to &quot;3.什么情况阻塞渲染?&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>HTML 和 CSS 肯定会阻塞渲染
<ul>
<li>提升渲染速度:降低一开始需要渲染的文件大小，并且扁平层级，优化选择器。</li>
</ul>
</li>
<li>解析到 script 标签时，判断是否包含defer或者async
<ul>
<li>defer: JS 文件会并行下载，但是会放到 HTML 解析完成后顺序执行
<ul>
<li>可以把 script 标签放在任意位置。</li>
</ul>
</li>
<li>async:JS 文件下载和解析不会阻塞渲染
<ul>
<li>下载完后就执行</li>
<li>对于没有任何依赖的 JS 文件可以加上 async 属性</li>
</ul>
</li>
<li>两者都不含有:暂停构建 DOM，下载完成后才会从暂停的地方重新开始
<ul>
<li>建议将 script 标签放在 body 标签底部</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="_4-重绘-repaint-和回流-reflow" tabindex="-1">4.重绘（Repaint）和回流（Reflow）? <a class="header-anchor" href="#_4-重绘-repaint-和回流-reflow" aria-label="Permalink to &quot;4.重绘（Repaint）和回流（Reflow）?&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>回流:计算可见的Dom节点在设备视口的位置和尺寸,这个计算阶段就是回流
<ul>
<li>当节点需要更改外观而不会影响布局时，触发重绘</li>
</ul>
</li>
<li>重绘:经过生成的渲染树和回流阶段,得到了所有可见节点具体的几何信息与样式,然后将渲染树的每个节点转换成屏幕上的实际像素,这个阶段就叫重绘节点
<ul>
<li>布局或者节点的几何属性改变时,触发回流。</li>
</ul>
</li>
</ul>
<p><strong>回流必定会发生重绘，重绘不一定会引发回流!</strong></p>
<p>回流所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列的回流。</p>
<p>以下几个动作可能会导致性能问题：</p>
<ul>
<li>改变窗口(window)大小</li>
<li>改变字体</li>
<li>添加或删除样式</li>
<li>文字改变</li>
<li>定位或者浮动</li>
<li>盒模型</li>
</ul>
<p><strong>参与Event Loop</strong></p>
<ul>
<li>当 Eventloop 执行完 Microtasks(微任务)后,判断document是否需要更新，因为浏览器是 60Hz 的刷新率，每 16.6ms 才会更新一次。</li>
<li>然后判断是否有 resize 或者 scroll 事件，有的话会去触发事件，所以 resize 和 scroll 事件也是至少 16ms 才会触发一次，并且<strong>自带节流</strong>功能。</li>
<li>判断是否触发了 media query</li>
<li>更新动画并且发送事件</li>
<li>判断是否有全屏操作事件</li>
<li>执行 requestAnimationFrame 回调</li>
<li>执行 IntersectionObserver 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好</li>
<li>更新界面</li>
</ul>
<h2 id="_5-如何减少重绘和回流" tabindex="-1">5.如何减少重绘和回流? <a class="header-anchor" href="#_5-如何减少重绘和回流" aria-label="Permalink to &quot;5.如何减少重绘和回流?&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>使用 transform 替代 top</li>
<li>使用 visibility 替换 display: none
<ul>
<li>因为前者只会引起重绘，后者会引发回流（改变了布局）</li>
</ul>
</li>
<li>不要把节点的属性值放在一个循环里当成循环里的变量</li>
<li>不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局</li>
<li>动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用<code>requestAnimationFrame</code></li>
<li>CSS 选择符从右往左匹配查找，避免节点层级过多</li>
</ul>
<h2 id="_6-在不考虑缓存和优化网络协议的前提下-考虑可以通过哪些方式来最快的渲染页面" tabindex="-1">6.在不考虑缓存和优化网络协议的前提下，考虑可以通过哪些方式来最快的渲染页面? <a class="header-anchor" href="#_6-在不考虑缓存和优化网络协议的前提下-考虑可以通过哪些方式来最快的渲染页面" aria-label="Permalink to &quot;6.在不考虑缓存和优化网络协议的前提下，考虑可以通过哪些方式来最快的渲染页面?&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>考虑文件大小</li>
<li>考虑script 标签的使用</li>
<li>从 CSS、HTML 的代码书写上来考虑</li>
<li>需要下载的内容是否需要在首屏使用上来考虑</li>
</ol>
<h2 id="_7-为什么浏览器要使用同源策略" tabindex="-1">7.为什么浏览器要使用同源策略? <a class="header-anchor" href="#_7-为什么浏览器要使用同源策略" aria-label="Permalink to &quot;7.为什么浏览器要使用同源策略?&quot;">&ZeroWidthSpace;</a></h2>
<p>出于安全考虑,为了防止CSRF(跨站请求伪造)攻击:CSRF 攻击是利用用户的登录态发起恶意请求</p>
<h2 id="_8-跨域请求是否发出去了" tabindex="-1">8.跨域请求是否发出去了 <a class="header-anchor" href="#_8-跨域请求是否发出去了" aria-label="Permalink to &quot;8.跨域请求是否发出去了&quot;">&ZeroWidthSpace;</a></h2>
<p>请求是发出去了，但是浏览器拦截了响应。浏览器认为这不安全，所以拦截了响应。也就说明了跨域并不能完全阻止 CSRF，因为请求毕竟是发出去了。</p>
<h2 id="_9-什么是跨域" tabindex="-1">9.什么是跨域 <a class="header-anchor" href="#_9-什么是跨域" aria-label="Permalink to &quot;9.什么是跨域&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="_10-为什么浏览器要使用同源策略" tabindex="-1">10.为什么浏览器要使用同源策略 <a class="header-anchor" href="#_10-为什么浏览器要使用同源策略" aria-label="Permalink to &quot;10.为什么浏览器要使用同源策略&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="_11-有哪些方式可以解决跨域问题" tabindex="-1">11.有哪些方式可以解决跨域问题 <a class="header-anchor" href="#_11-有哪些方式可以解决跨域问题" aria-label="Permalink to &quot;11.有哪些方式可以解决跨域问题&quot;">&ZeroWidthSpace;</a></h2>
<h2 id="_12-什么是预检请求" tabindex="-1">12.什么是预检请求 <a class="header-anchor" href="#_12-什么是预检请求" aria-label="Permalink to &quot;12.什么是预检请求&quot;">&ZeroWidthSpace;</a></h2>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-安全问题]]></title>
            <link>https://desain7.top./bigWeb/browser/safe.html</link>
            <guid>https://desain7.top./bigWeb/browser/safe.html</guid>
            <pubDate>Mon, 26 Oct 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[在现代网络中，安全相关的问题是非常繁杂的，种类颇多
这里只介绍Web开发中经常碰到的一些安全问题：
* SQL注入
* XSS
* CSRF
* 点击劫持
* 中间人攻击
 SQL注入
 什么是SQL]]></description>
            <content:encoded><![CDATA[<h1 id="安全" tabindex="-1">安全 <a class="header-anchor" href="#安全" aria-label="Permalink to &quot;安全&quot;">&ZeroWidthSpace;</a></h1>
<p>在现代网络中，安全相关的问题是非常繁杂的，种类颇多</p>
<p>这里只介绍Web开发中经常碰到的一些安全问题：</p>
<ul>
<li>SQL注入</li>
<li>XSS</li>
<li>CSRF</li>
<li>点击劫持</li>
<li>中间人攻击</li>
</ul>
<h2 id="sql注入" tabindex="-1">SQL注入 <a class="header-anchor" href="#sql注入" aria-label="Permalink to &quot;SQL注入&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什么是sql注入" tabindex="-1">什么是SQL注入 <a class="header-anchor" href="#什么是sql注入" aria-label="Permalink to &quot;什么是SQL注入&quot;">&ZeroWidthSpace;</a></h3>
<p>后台人员使用用户输入的数据进行拼接组装SQL查询语句时,遇到恶意输入就会返回不应该返回的内容</p>
<h3 id="简单示例" tabindex="-1">简单示例 <a class="header-anchor" href="#简单示例" aria-label="Permalink to &quot;简单示例&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>普通的查询语句</strong></p>
<div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F78C6C">SELECT</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">FROM</span><span style="color: #A6ACCD"> articles </span><span style="color: #F78C6C">WHERE</span><span style="color: #A6ACCD"> id </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> $id</span></span></code></pre>
</div><p><strong>1. 客户端发送的正常请求</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">articlres</span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">article</span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD">id </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">12</span></span></code></pre>
</div><p>拼接后的SQL</p>
<div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F78C6C">SELECT</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">FROM</span><span style="color: #A6ACCD"> articles </span><span style="color: #F78C6C">WHERE</span><span style="color: #A6ACCD"> id </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">12</span></span></code></pre>
</div><p><strong>2. 注入SQL发送的恶意请求</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">api</span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">articlres</span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">article</span><span style="color: #89DDFF">?</span><span style="color: #A6ACCD">id</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">%</span><span style="color: #A6ACCD">20or</span><span style="color: #89DDFF">%</span><span style="color: #F78C6C">201</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span></span></code></pre>
</div><p>这里的 <code>%20</code>是空格经过UrlEncode过后的内容</p>
<p>拼接后的sql</p>
<div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #F78C6C">SELECT</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">*</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">FROM</span><span style="color: #A6ACCD"> articles </span><span style="color: #F78C6C">WHERE</span><span style="color: #A6ACCD"> id </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">12</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">or</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">=</span><span style="color: #F78C6C">1</span></span></code></pre>
</div><p>这样就扩大了查询数据的范围，导致查询异常或者 返回原本不该返回的数据</p>
<h3 id="如何防范" tabindex="-1">如何防范 <a class="header-anchor" href="#如何防范" aria-label="Permalink to &quot;如何防范&quot;">&ZeroWidthSpace;</a></h3>
<p>加入过滤和验证机制：</p>
<ul>
<li>将参数的所有内容当做值，而不是当做字符串的一部分</li>
<li>使用正则表达式过滤传入的参数</li>
<li>检查传入内容是否包含非法的关键字</li>
</ul>
<h2 id="xss" tabindex="-1">XSS <a class="header-anchor" href="#xss" aria-label="Permalink to &quot;XSS&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什么是-xss" tabindex="-1">什么是 XSS <a class="header-anchor" href="#什么是-xss" aria-label="Permalink to &quot;什么是 XSS&quot;">&ZeroWidthSpace;</a></h3>
<p><code>XSS</code>全称<code>Cross Site Scripting</code> ，<code>即跨站脚本</code>攻击</p>
<p>攻击者可以将代码注入页面，然后可以进行一系列损害用户利益的事情</p>
<ul>
<li>窃取Cookie</li>
<li>监听用户行为</li>
<li>修改 DOM 伪造登录表单</li>
<li>在页面中生成浮窗广告</li>
<li>恶意跳转</li>
<li>...</li>
</ul>
<p>恶意代码未经过滤，与网站正常的代码混在一起，以至于浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行</p>
<p>XSS 可以分为两类：<code>持久型</code>和<code>非持久型</code></p>
<p><strong>持久型</strong></p>
<p>持久型也就是攻击的代码被服务端写入进数据库中,在页面加载的时候执行</p>
<p>常见于服务端渲染的时候出现</p>
<p>示例</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">zh-cn</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./test.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">renderPage</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// ajax获取数据 &lt;script&gt;alert(123)&lt;/script&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 解析字符串生成对应dom节点</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">script</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">script</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">script</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">innerHTML</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">alert(123)</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">script</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #82AAFF">renderPage</span><span style="color: #A6ACCD">()</span></span></code></pre>
</div><p><strong>非持久型</strong></p>
<p>一般通过修改 URL 参数的方式加入攻击代码，诱导用户访问链接从而进行攻击</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!-- http://www.domain.com?name=&lt;script&gt;alert(1)&lt;/script&gt; --&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{name}}</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>jquery触发此错误示例</strong></p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">https://cdn.staticfile.org/jquery/1.10.0/jquery.min.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">大标题</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">ul</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">list</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">ul</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./test.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>test.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">2</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;script&gt;alert(123)&lt;/script&gt;</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">]</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">forEach</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD; font-style: italic">str</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">$</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">#list</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">append</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">&lt;li&gt;</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">&lt;/li&gt;</span><span style="color: #89DDFF">`</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><h3 id="如何防范-1" tabindex="-1">如何防范 <a class="header-anchor" href="#如何防范-1" aria-label="Permalink to &quot;如何防范&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="转义字符" tabindex="-1">转义字符 <a class="header-anchor" href="#转义字符" aria-label="Permalink to &quot;转义字符&quot;">&ZeroWidthSpace;</a></h4>
<blockquote>
<p>不相信任何用户的输入</p>
</blockquote>
<p>转译用户输入的内容</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">escape</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">str</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">&amp;</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;amp;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">&lt;</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;lt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">&gt;</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">&quot;</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;quto;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">&#39;</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;#39;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #C3E88D">`</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;#96;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #A6ACCD">str</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">replace</span><span style="color: #F07178">(</span><span style="color: #89DDFF">/</span><span style="color: #A6ACCD">\/</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">g</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&amp;#x2F;</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>或者利用现代浏览器的特性</p>
<p>自动处理特殊字符</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">filterStr</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">str</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">div</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">div</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">div</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">str</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">div</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">innerHTML</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #82AAFF">filterStr</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;div&gt;&lt;/div&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">) </span><span style="color: #676E95; font-style: italic">// &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;</span></span></code></pre>
</div><h3 id="csp" tabindex="-1">CSP <a class="header-anchor" href="#csp" aria-label="Permalink to &quot;CSP&quot;">&ZeroWidthSpace;</a></h3>
<p>CSP - 内容安全策略</p>
<p>本质上就是建立白名单，明确告诉浏览器哪些外部资源可以加载和执行</p>
<p>可以通过这种方式来尽量减少 XSS 攻击。</p>
<p><strong>使用方式</strong></p>
<ul>
<li>设置 HTTP Header 中的 Content-Security-Policy</li>
<li>设置 meta 标签的方式 <code>&lt;meta http-equiv=&quot;Content-Security-Policy&quot;&gt;</code></li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">http-equiv</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Content-Security-Policy</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>上述策略解释</p>
<ul>
<li>脚本：只信任当前域名</li>
<li><code>&lt;object&gt;</code>标签：不信任任何URL，即不加载任何资源</li>
<li>样式表：只信任cdn.example.org和third-party.org</li>
<li>框架（frame）：必须使用HTTPS协议加载</li>
<li>其他资源：没有限制</li>
</ul>
<p>示例：</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">lang</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">en</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">charset</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">UTF-8</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width, initial-scale=1.0</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">http-equiv</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">Content-Security-Policy</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https:</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">https://cdn.staticfile.org/jquery/1.10.0/jquery.min.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Document</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">测试</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">        console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">($)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>观察浏览器的devtools面板会发现以下内容</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjMxODQxNDk2NQ==606318414965" alt="图片"></p>
<p>阻止第三方域名的脚本资源加载，阻止内联脚本执行</p>
<h3 id="防止脚本读取cookie" tabindex="-1">防止脚本读取Cookie <a class="header-anchor" href="#防止脚本读取cookie" aria-label="Permalink to &quot;防止脚本读取Cookie&quot;">&ZeroWidthSpace;</a></h3>
<p>JavaScript提供了访问cookie的API</p>
<p>可以通过<code>document.cookie</code>读取与修改cookie</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">cookie</span></span></code></pre>
</div><p><strong>新增一个cookie</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">cookie </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">Desain=at;expires=session</span><span style="color: #89DDFF">&#39;</span></span></code></pre>
</div><p>执行后我们可以在devtools面板的<code>Application</code>选项卡中看到我们添加的cookie</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjMxOTM3NDEzMQ==606319374131" alt="图片"></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">cookie)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 可以看到我们刚才设置的cookie</span></span></code></pre>
</div><p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNjMyMDU3MDE0Mw==606320570143" alt="图片"></p>
<p>目前很多统计网站的埋点监控，权限控制，离线数据都依赖于cookie，第三方脚本很容易的能够进行窃取</p>
<p>可以为Cookie添加HttpOnly属性，防止脚本读取网站的cookie</p>
<p>添加<code>Secure</code>属性要求必须使用https协议才能传输此cookie，可以防止中间人截获修改到传输的cookie</p>
<h2 id="csrf" tabindex="-1">CSRF <a class="header-anchor" href="#csrf" aria-label="Permalink to &quot;CSRF&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什么是csrf" tabindex="-1">什么是CSRF <a class="header-anchor" href="#什么是csrf" aria-label="Permalink to &quot;什么是CSRF&quot;">&ZeroWidthSpace;</a></h3>
<p><code>CSRF</code>--<code>Cross-site request forgery</code>--跨站请求伪造</p>
<p>攻击者构造出一个请求链接，诱导用户点击或者通过某些途径自动发起请求</p>
<p>主要利用的cookie会自动附带在请求header中这个特性，很多网站使用cookie鉴权</p>
<p>如果当前用户是在登录状态下请求的此链接的话，服务端就以为是用户在操作，从而进行相应的逻辑</p>
<h3 id="发起手段" tabindex="-1">发起手段 <a class="header-anchor" href="#发起手段" aria-label="Permalink to &quot;发起手段&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>自动GET:使用img,link,script等等标签</li>
<li>自动POST:自动提交表单的脚本</li>
<li>诱导用户点击：iframe,a标签，透明的元素等</li>
</ul>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">img</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://a.b.com/api/xxx</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://a.b.com/api/xxx</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">http://a.b.com/api/xxx</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #82AAFF">setTimeout</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">$form</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">createElement</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">form</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">$form</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">method</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">POST</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">$form</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">action</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">a.b.com/api/xxx</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">$form</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">$form</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">submit</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">$form</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">remove</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #89DDFF">},</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="如何防范-2" tabindex="-1">如何防范 <a class="header-anchor" href="#如何防范-2" aria-label="Permalink to &quot;如何防范&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>Get请求不对数据进行修改,即无副作用操作</li>
<li>服务端过滤
<ul>
<li>阻止第三方网站请求接口</li>
<li>验证request header中的 Referer/Origin:通过Referer验证请求是否为第三方发送
<ul>
<li>Origin:域名信息</li>
<li>Referer:包含具体URL</li>
<li><strong>开发者可通过自定义请求头伪造</strong></li>
</ul>
</li>
</ul>
</li>
<li>请求时附带验证信息
<ul>
<li>添加验证码参数</li>
<li>request header中添加一个token字段</li>
</ul>
</li>
<li>阻止第三方网站访问到用户 Cookie</li>
<li>设置Cookie的SameSite属性： Cookie 随跨域请求发送的策略
<ul>
<li>Strict:仅允许一方请求携带 Cookie，即浏览器将只发送相同站点请求的 Cookie，当前网页 URL 与请求目标 URL 完全一致才发送</li>
<li>Lax:允许部分（导航到目标网址的 Get 请求）第三方请求携带 Cookie</li>
<li>None:无论是否跨站都会发送 Cookie</li>
</ul>
</li>
</ul>
<p>Cookie相关更多知识-&gt; <a href="./storage.html#set-cookie">本地存储-Cookie</a></p>
<h2 id="点击劫持" tabindex="-1">点击劫持 <a class="header-anchor" href="#点击劫持" aria-label="Permalink to &quot;点击劫持&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什么是点击劫持" tabindex="-1">什么是点击劫持 <a class="header-anchor" href="#什么是点击劫持" aria-label="Permalink to &quot;什么是点击劫持&quot;">&ZeroWidthSpace;</a></h3>
<p>点击劫持是一种视觉欺骗的攻击手段</p>
<ol>
<li>攻击者将需要攻击的网站通过 iframe 嵌套的方式嵌入自己的网页中，并将 iframe 设置为透明，在页面中透出一个按钮诱导用户点击：此种方式最为常见，因为iframe中可以嵌入用户已经登陆过的网页</li>
<li>使用一个透明的绑定了事件元素附在正常元素上，诱导用户点击</li>
</ol>
<h3 id="如何防范-3" tabindex="-1">如何防范 <a class="header-anchor" href="#如何防范-3" aria-label="Permalink to &quot;如何防范&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="_1-x-frame-options" tabindex="-1">1. X-FRAME-OPTIONS <a class="header-anchor" href="#_1-x-frame-options" aria-label="Permalink to &quot;1. X-FRAME-OPTIONS&quot;">&ZeroWidthSpace;</a></h4>
<p>针对iframe形式的可通过设置<strong>X-FRAME-OPTIONS</strong></p>
<p>X-FRAME-OPTIONS 是一个 HTTP 响应头</p>
<p>该响应头有三个值可选，分别是:</p>
<ul>
<li>DENY，表示页面不允许通过 iframe 的方式展示</li>
<li>SAMEORIGIN，表示页面可以在相同域名下通过 iframe 的方式展示</li>
<li>ALLOW-FROM，表示页面可以在指定来源的 iframe 中展示</li>
</ul>
<h4 id="_2-js-防御" tabindex="-1">2. JS 防御 <a class="header-anchor" href="#_2-js-防御" aria-label="Permalink to &quot;2. JS 防御&quot;">&ZeroWidthSpace;</a></h4>
<ul>
<li>window.self: 当前 window 对象的引用</li>
<li>window.top: 最顶层的窗口对象</li>
<li>window.parent: 当前窗口的直接父对象</li>
</ul>
<p>在页面中加入此代码</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">  &lt;</span><span style="color: #F07178">style</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">click-jack</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #FFCB6B">html</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">      </span><span style="color: #B2CCD6">display</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> none </span><span style="color: #F78C6C">!important</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">style</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">  &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (self </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> top) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #C792EA">var</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">style</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click-jack</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">body</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">removeChild</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">style</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">top</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">location</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">location</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="中间人攻击" tabindex="-1">中间人攻击 <a class="header-anchor" href="#中间人攻击" aria-label="Permalink to &quot;中间人攻击&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="什么是中间人攻击" tabindex="-1">什么是中间人攻击 <a class="header-anchor" href="#什么是中间人攻击" aria-label="Permalink to &quot;什么是中间人攻击&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>中间人攻击是<code>攻击方</code>同时与<code>服务端</code>和<code>客户端</code>建立起了连接，并让对方认为连接是安全的</li>
<li>攻击者不仅能获得双方的通信信息，还能修改通信信息</li>
</ul>
<p><strong>场景举例：使用非对称加密传输的数据</strong></p>
<ol>
<li>中间人已经同时与客户端与服务端建立了链接</li>
<li>服务端下发公钥a1，中间人截获，然后下发自己的公钥b1</li>
<li>客户端接收到公钥b1，对传输的数据 “你好” 加密成 “xxx”，然后发送给服务端</li>
<li>中间人收到数据 “xxx”，用自己的私钥B解密获得内容 “你好”，然后用截获的a1公钥 加密 内容“滚滚滚”成 “yyy”，发送给服务端</li>
<li>服务端收到内容 “yyy” 用自己的私钥A解密 得到 “滚滚滚”的内容</li>
</ol>
<p>在这个过程中，中间人不仅获取了用户传输的真实数据，还给服务的发送了错误的信息</p>
<h3 id="如何防范-4" tabindex="-1">如何防范 <a class="header-anchor" href="#如何防范-4" aria-label="Permalink to &quot;如何防范&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>使用https</li>
<li>不要在公共Wi-Fi上发送敏感数据</li>
<li>使用权威机构的CA证书</li>
</ul>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<ul>
<li><a href="https://www.jianshu.com/p/078df7a35671" target="_blank" rel="noreferrer">简书 - sql注入基础原理（超详细）</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy" target="_blank" rel="noreferrer">MDN:Content-Security-Policy</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2016/09/csp.html" target="_blank" rel="noreferrer">阮一峰:CSP</a></li>
</ul>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-内核]]></title>
            <link>https://desain7.top./bigWeb/browser/core.html</link>
            <guid>https://desain7.top./bigWeb/browser/core.html</guid>
            <pubDate>Sun, 25 Oct 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ 简介
浏览器最重要或者说核心的部分。
通常还有“Rendering Engine-页面渲染引擎”,“Layout Engine-排版引擎”,“Browser Engine-浏览器引擎”等其它叫法。
]]></description>
            <content:encoded><![CDATA[<h1 id="内核" tabindex="-1">内核 <a class="header-anchor" href="#内核" aria-label="Permalink to &quot;内核&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器最重要或者说核心的部分。</p>
<p>通常还有“<strong>Rendering Engine-页面渲染引擎</strong>”,“<strong>Layout Engine-排版引擎</strong>”,“<strong>Browser Engine-浏览器引擎</strong>”等其它叫法。</p>
<p><strong>浏览器内核</strong>决定了浏览器如何显示网页的内容以及页面的格式信息</p>
<p>主要负责对网页语法（HTML，JS，CSS）的解释，标记，整理，并将排版后的发送至输出设备（显示器，打印机等）。</p>
<p>不同浏览器的内核实现有所差异，导致对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染结果也可能不同，这就抛出了常见的 “<strong>浏览器兼容性问题</strong>”</p>
<h2 id="常见浏览器内核" tabindex="-1">常见浏览器内核 <a class="header-anchor" href="#常见浏览器内核" aria-label="Permalink to &quot;常见浏览器内核&quot;">&ZeroWidthSpace;</a></h2>
<p>这里不过多赘述内核的发展史，读者可以在文末的参考文章中进行拓展阅读</p>
<table>
<thead>
<tr>
<th style="text-align:center">浏览器名称</th>
<th style="text-align:center">内核</th>
<th style="text-align:center">补充</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">IE</td>
<td style="text-align:center">Trident</td>
<td style="text-align:center">主要包含在 window操作系统的 IE浏览器中</td>
</tr>
<tr>
<td style="text-align:center">firefox</td>
<td style="text-align:center">Gecko</td>
<td style="text-align:center">Gecko的特点是代码完全公开，因此，其可开发程度很高</td>
</tr>
<tr>
<td style="text-align:center">Safari</td>
<td style="text-align:center">webkit</td>
<td style="text-align:center">苹果公司自己的内核，包含WebCore排版引擎及JavaScriptCore解析引擎</td>
</tr>
<tr>
<td style="text-align:center">chrome</td>
<td style="text-align:center">Chromium/Blink/webkit</td>
<td style="text-align:center">Blink是开源引擎WebKit中WebCore组件的一个分支</td>
</tr>
<tr>
<td style="text-align:center">Opera</td>
<td style="text-align:center">blink/Webkit/Presto</td>
<td style="text-align:center">现在跟随chrome的步伐，同时参与开发</td>
</tr>
</tbody>
</table>
<p><strong>发展时间线</strong></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwMzYxMjcwNTI2MQ==603612705261" alt="图片"></p>
<p><strong>内核之间的关系</strong></p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNzc4MTYxNDEzMw==607781614133" alt="图片"></p>
<h2 id="浏览器内核构成" tabindex="-1">浏览器内核构成 <a class="header-anchor" href="#浏览器内核构成" aria-label="Permalink to &quot;浏览器内核构成&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>最开始渲染引擎和JS引擎并没有明确区分，随着不断的迭代，JS引擎越来越独立，内核更就倾向于只指渲染引擎</p>
</blockquote>
<p>核心的部分是“渲染引擎”，主要包括以下线程：</p>
<h3 id="_1-gui渲染线程" tabindex="-1">1. GUI渲染线程 <a class="header-anchor" href="#_1-gui渲染线程" aria-label="Permalink to &quot;1. GUI渲染线程&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>HTML Parser 解析HTML</li>
<li>CSS Parser 解析Style数据</li>
<li>Layout过程，为每个可见节点的几何信息</li>
<li>Painting过程，遍历Render Tree，调用UI接口绘制每个节点</li>
</ul>
<h3 id="_2-javascript-引擎线程" tabindex="-1">2. JavaScript 引擎线程 <a class="header-anchor" href="#_2-javascript-引擎线程" aria-label="Permalink to &quot;2. JavaScript 引擎线程&quot;">&ZeroWidthSpace;</a></h3>
<p>负责解析Javascript脚本，运行代码</p>
<h3 id="_3-定时触发器线程" tabindex="-1">3. 定时触发器线程 <a class="header-anchor" href="#_3-定时触发器线程" aria-label="Permalink to &quot;3. 定时触发器线程&quot;">&ZeroWidthSpace;</a></h3>
<p>浏览器定时计数器并不是由 JavaScript 引擎计数的, 因为 JavaScript 引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确, 因此通过单独线程来计时并触发定时</p>
<h3 id="_4-事件触发线程" tabindex="-1">4. 事件触发线程 <a class="header-anchor" href="#_4-事件触发线程" aria-label="Permalink to &quot;4. 事件触发线程&quot;">&ZeroWidthSpace;</a></h3>
<p>当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待 JavaScript 引擎的处理</p>
<h3 id="_5-异步http请求线程" tabindex="-1">5. 异步http请求线程 <a class="header-anchor" href="#_5-异步http请求线程" aria-label="Permalink to &quot;5. 异步http请求线程&quot;">&ZeroWidthSpace;</a></h3>
<p>XMLHttpRequest 请求会在浏览器中新开一个线程请求， 将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件放到 JavaScript 引擎的处理队列中</p>
<h2 id="移动端内核" tabindex="-1">移动端内核 <a class="header-anchor" href="#移动端内核" aria-label="Permalink to &quot;移动端内核&quot;">&ZeroWidthSpace;</a></h2>
<p>主要有：</p>
<ul>
<li>webkit: IOS内置浏览器，Android4.4之前</li>
<li>chromium：Android4.4之后内置</li>
<li>blink</li>
<li>trident：<s>Windows Phone 8 这个玩意儿感觉不用关注了</s></li>
<li>u3: UC打造 -&gt; UC浏览器</li>
<li>x5: 腾讯打造 -&gt; QQ浏览器，腾讯系App内置webview</li>
</ul>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="兼容问题" tabindex="-1">兼容问题 <a class="header-anchor" href="#兼容问题" aria-label="Permalink to &quot;兼容问题&quot;">&ZeroWidthSpace;</a></h3>
<p>正由于内核的 <code>&quot;多彩缤纷&quot;</code>, 前端开发者最头疼的问题莫过于此</p>
<h4 id="pc" tabindex="-1">PC <a class="header-anchor" href="#pc" aria-label="Permalink to &quot;PC&quot;">&ZeroWidthSpace;</a></h4>
<p>最头痛的就是兼容IE,尽管js能力可以通过polyfill支持一部分，但部分样式能力的缺失是无法弥补的</p>
<h4 id="移动端" tabindex="-1">移动端 <a class="header-anchor" href="#移动端" aria-label="Permalink to &quot;移动端&quot;">&ZeroWidthSpace;</a></h4>
<p>最头痛的就是在使用跨端开发框架时（uni-app,React Native等）样式在双端的差异有时比较大</p>
<p>尤其是在低版本的Android机上，需要花费大量的去做兼容测试与视图适配</p>
<p><strong>浏览器内核能力的统一，还有很长的路要走，需要一个契机</strong></p>
<h3 id="现状" tabindex="-1">现状 <a class="header-anchor" href="#现状" aria-label="Permalink to &quot;现状&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>google、opera拥抱的blink</li>
<li>IOS拥抱webkit</li>
<li>Firefox拥抱Gecko</li>
<li>微软新版Edge已经采用Chromium内核，旧版为EdgeHTML</li>
</ul>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%95%E6%93%8E" target="_blank" rel="noreferrer">维基百科-浏览器引擎</a></li>
<li><a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8" target="_blank" rel="noreferrer">百度百科-浏览器内核</a></li>
<li><a href="https://segmentfault.com/a/1190000018277184" target="_blank" rel="noreferrer">腾讯云+社区-一文看透浏览器架构</a></li>
<li><a href="https://www.jianshu.com/p/db1b230e3415" target="_blank" rel="noreferrer">简书-全面了解浏览器（内核）发展史</a></li>
</ul>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-渲染原理]]></title>
            <link>https://desain7.top./bigWeb/browser/render.html</link>
            <guid>https://desain7.top./bigWeb/browser/render.html</guid>
            <pubDate>Sun, 25 Oct 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[篇幅较长，需赖心阅读
示例代码
```html
<!DOCTYPE html
<html>
  <head>
    <meta name="viewport" content="width=devi]]></description>
            <content:encoded><![CDATA[<h1 id="渲染原理" tabindex="-1">渲染原理 <a class="header-anchor" href="#渲染原理" aria-label="Permalink to &quot;渲染原理&quot;">&ZeroWidthSpace;</a></h1>
<p>篇幅较长，需赖心阅读</p>
<p><strong>示例代码</strong></p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;!</span><span style="color: #F07178">DOCTYPE</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">meta</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">name</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">viewport</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">content</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">width=device-width,initial-scale=1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">style.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Critical Path</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">title</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">p</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Hello </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">web performance</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD"> students!</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">p</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;&lt;</span><span style="color: #F07178">img</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">awesome-photo.jpg</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">html</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="_1-构建对象模型" tabindex="-1">1. 构建对象模型 <a class="header-anchor" href="#_1-构建对象模型" aria-label="Permalink to &quot;1. 构建对象模型&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器渲染页面前需要先构建 DOM 和 CSSOM 树</p>
<h3 id="文档对象模型-dom" tabindex="-1">文档对象模型(DOM) <a class="header-anchor" href="#文档对象模型-dom" aria-label="Permalink to &quot;文档对象模型(DOM)&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>构建过程</strong></p>
<ol>
<li>转换：浏览器从磁盘或网络读取 HTML 的原始字节，并根据文件的指定编码（例如 UTF-8）将它们转换成各个字符</li>
<li>令牌化：浏览器将字符串转换成 <a href="https://html.spec.whatwg.org/" target="_blank" rel="noreferrer">W3C HTML5 标准</a>规定的各种令牌，例如，<code>&lt;html&gt;</code>、<code>&lt;body&gt;</code>，以及其他尖括号内的字符串。每个令牌都具有特殊含义和一组规则</li>
<li>词法分析：将令牌转换成定义了属性和规则的“对象”</li>
<li>DOM构建：由于 HTML 标记定义不同标记之间的关系（一些标记包含在其他标记内），创建的对象链接在一个树数据结构内，此结构也会捕获原始标记中定义的父项-子项关系：HTML 对象是 body 对象的父项，body 是 paragraph 对象的父项，依此类推</li>
</ol>
<img style="background-color:white;" src="https://img.cdn.sugarat.top/mdImg/MTYwMzYxNzU0MDI0Ng==603617540246"/>
<p>整个流程的最终输出是文档对象模型 (DOM)，浏览器对页面做进一步处理时会用到它</p>
<p>浏览器每次处理 HTML 标记时，都会完成以上所有步骤：将字节转换成字符，确定令牌，将令牌转换成节点，然后构建 DOM 树。</p>
<h3 id="css对象模型-cssom" tabindex="-1">CSS对象模型(CSSOM) <a class="header-anchor" href="#css对象模型-cssom" aria-label="Permalink to &quot;CSS对象模型(CSSOM)&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>在浏览器构建我们这个简单页面的 DOM 时，在文档的 head 部分遇到了一个 link 标记，该标记引用一个外部 CSS 样式表：style.css。</p>
</blockquote>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">body</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #B2CCD6">font-size</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">16px</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #FFCB6B">p</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #B2CCD6">font-weight</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> bold </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #FFCB6B">span</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #B2CCD6">color</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> red </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #FFCB6B">p</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">span</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #B2CCD6">display</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> none </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #FFCB6B">img</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #B2CCD6">float</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> right </span><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>与处理 HTML 时的流程类似</p>
<p>CSS 字节转换成字符，接着转换成令牌和节点，最后链接为为一个“CSS 对象模型”(CSSOM) 的树结构内</p>
<p><img style="background-color:white;" src="https://img.cdn.sugarat.top/mdImg/MTYwMzYxODk4NjE2Mw==603618986163">/&gt;</p>
<p><img style="background-color:white;" src="https://img.cdn.sugarat.top/mdImg/MTYwMzYxOTEwMjEzNA==603619102134">/&gt;</p>
<h3 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>浏览器渲染页面前需要先构建 DOM树 和 CSSOM 树</li>
<li>构建流程：字节(Bytes) → 字符(Characters) → 令牌(Tokens) → 节点(Nodes) → 对象模型(Dom)</li>
<li>DOM 和 CSSOM 是相互独立的数据结构</li>
</ul>
<h2 id="_2-渲染树构建" tabindex="-1">2. 渲染树构建 <a class="header-anchor" href="#_2-渲染树构建" aria-label="Permalink to &quot;2. 渲染树构建&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">&ZeroWidthSpace;</a></h3>
<p>渲染树用于计算每个可见元素的几何信息，然后根据这些元素的几何信息绘制出屏幕上的实际像素</p>
<h3 id="构建过程" tabindex="-1">构建过程 <a class="header-anchor" href="#构建过程" aria-label="Permalink to &quot;构建过程&quot;">&ZeroWidthSpace;</a></h3>
<p>浏览器将 DOM 数和 CSSOM 数合并成“渲染树”，包含页面上所有可见的内容，以及每个节点的所有 CSSOM 样式信息</p>
<p><img style="background-color:white;" src="https://img.cdn.sugarat.top/mdImg/MTYwMzYyMjExNzA4Ng==603622117086">/&gt;</p>
<ul>
<li>从 DOM 树的根节点开始遍历每个可见节点
<ul>
<li>某些节点不可见（例如脚本标记、元标记等--title,meta,link）</li>
<li>某些节点通过 CSS 隐藏，因此在渲染树中也会被忽略（display:none）</li>
</ul>
</li>
<li>对于每个可见节点，为其找到适配的 CSSOM 规则并应用它们</li>
</ul>
<h3 id="小结-1" tabindex="-1">小结 <a class="header-anchor" href="#小结-1" aria-label="Permalink to &quot;小结&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>DOM 树和 CSSOM 树合并生成渲染树</li>
<li>渲染树只包含渲染网页所需的节点(可见节点)</li>
</ol>
<h2 id="_3-回流与重绘" tabindex="-1">3. 回流与重绘 <a class="header-anchor" href="#_3-回流与重绘" aria-label="Permalink to &quot;3. 回流与重绘&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="回流" tabindex="-1">回流 <a class="header-anchor" href="#回流" aria-label="Permalink to &quot;回流&quot;">&ZeroWidthSpace;</a></h3>
<p>也有 “布局”,“重排”等叫法</p>
<p>根据生成的渲染树，从渲染树的根节点开始进行遍历，计算每个节点的几何信息(在设备视口内的确切位置和大小)</p>
<p>输出是一个“盒模型”，它会精确地捕获每个元素在视口内的确切位置和尺寸：所有相对测量值都会转换为屏幕上的绝对像素</p>
<h3 id="重绘" tabindex="-1">重绘 <a class="header-anchor" href="#重绘" aria-label="Permalink to &quot;重绘&quot;">&ZeroWidthSpace;</a></h3>
<p>也叫 “绘制”或“栅格化”</p>
<p>经过生成的渲染树和回流阶段,得到了所有可见节点具体的几何信息与样式,然后将渲染树的每个节点转换成屏幕上的实际像素</p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-解析html-构建dom" tabindex="-1">1. 解析HTML-构建DOM <a class="header-anchor" href="#_1-解析html-构建dom" aria-label="Permalink to &quot;1. 解析HTML-构建DOM&quot;">&ZeroWidthSpace;</a></h3>
<p>浏览器解析接收到的 HTML ，并构建出 DOM 树</p>
<ol>
<li>在网络中传输的内容其实都是0和1这些字节数据。当浏览器接收到这些字节数据以后，会将这些字节数据转换为字符串</li>
<li>将这些字符串通过词法分析转换为标记（token），这一过程在词法分析中叫做标记化（tokenization）</li>
<li>标记转换为 Node，根据不同 Node 之前的联系构建为一棵 DOM 树</li>
<li>在解析 HTML 文件的时候，当遇到 CSS 和 JS 文件，这时候浏览器也会去下载并解析这些文件，此时就会存在阻塞解析/渲染的问题</li>
</ol>
<h3 id="_2-解析css-构建cssom" tabindex="-1">2. 解析CSS-构建CSSOM <a class="header-anchor" href="#_2-解析css-构建cssom" aria-label="Permalink to &quot;2. 解析CSS-构建CSSOM&quot;">&ZeroWidthSpace;</a></h3>
<p>解析样式表，构建出 CSSOM 树</p>
<p>在这一过程中，浏览器会确定下每一个节点的样式是什么(这一过程其实是很消耗资源的，因为样式你可以自行设置给某个节点，也可以通过继承获得)，于是会递归 CSSOM 树，然后确定具体的元素到底是什么样式</p>
<p>因此：</p>
<ul>
<li>尽可能的避免写过于具体的 CSS 选择器</li>
<li>对于 HTML 来说也尽量少的添加无意义标签，保证层级扁平</li>
</ul>
<h3 id="_3-合并dom-cssom-生成渲染树" tabindex="-1">3. 合并DOM/CSSOM-生成渲染树 <a class="header-anchor" href="#_3-合并dom-cssom-生成渲染树" aria-label="Permalink to &quot;3. 合并DOM/CSSOM-生成渲染树&quot;">&ZeroWidthSpace;</a></h3>
<p>生成 DOM 树和 CSSOM 树之后，就会将这两棵树组合为渲染树</p>
<p>渲染树只会包括需要显示的节点和这些节点的样式信息</p>
<p><strong>不显示的节点</strong></p>
<ul>
<li>css:display:nonoe</li>
<li>标签:script,link,meta等等</li>
</ul>
<h3 id="_4-回流" tabindex="-1">4. 回流 <a class="header-anchor" href="#_4-回流" aria-label="Permalink to &quot;4. 回流&quot;">&ZeroWidthSpace;</a></h3>
<p>根据生成的渲染树，从渲染树的根节点开始进行遍历，计算每个节点的几何信息(在设备视口内的确切位置和大小)</p>
<h3 id="_5-重绘" tabindex="-1">5. 重绘 <a class="header-anchor" href="#_5-重绘" aria-label="Permalink to &quot;5. 重绘&quot;">&ZeroWidthSpace;</a></h3>
<p>经过生成的渲染树和回流阶段,得到了所有可见节点具体的几何信息与样式,然后将渲染树的每个节点转换成屏幕上的实际像素</p>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<ul>
<li><a href="https://yuchengkai.cn/docs/frontend/browser.html" target="_blank" rel="noreferrer">浏览器|前端进阶之道</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path" target="_blank" rel="noreferrer">developers.google</a></li>
</ul>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[路由原理]]></title>
            <link>https://desain7.top./bigWeb/vue/routing.html</link>
            <guid>https://desain7.top./bigWeb/vue/routing.html</guid>
            <pubDate>Sat, 02 May 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[* hash模式
* history模式
 hash
浏览器URL中会显示``，``以及``后面的字符称之为hash，可以用window.location.hash读取
监听hash模式用的是hash]]></description>
            <content:encoded><![CDATA[<h1 id="路由原理" tabindex="-1">路由原理 <a class="header-anchor" href="#路由原理" aria-label="Permalink to &quot;路由原理&quot;">&ZeroWidthSpace;</a></h1>
<ul>
<li>hash模式</li>
<li>history模式</li>
</ul>
<h2 id="hash" tabindex="-1">hash <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;hash&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器URL中会显示<code>#</code>，<code>#</code>以及<code>#</code>后面的字符称之为hash，可以用window.location.hash读取</p>
<p>监听hash模式用的是hashchange
<strong>特点</strong></p>
<ul>
<li>hash虽然在URL中，但不被包括在HTTP请求中</li>
<li>hash不会重加载页面</li>
</ul>
<h2 id="history" tabindex="-1">history <a class="header-anchor" href="#history" aria-label="Permalink to &quot;history&quot;">&ZeroWidthSpace;</a></h2>
<p>history采用HTML5的新特性,且提供了两个新方法:<code>pushState()</code>,<code>replaceState()</code>,可以对浏览器历史记录栈进行修改,只是当它们执行修改时，虽然改变了当前的 URL，但浏览器不会立即向后端发送请求</p>
<p>监听history模式用的是popstate</p>
<p>前端的 URL 必须和实际向后端发起请求的 URL 一致</p>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<p><a href="https://www.jianshu.com/p/f660804d8592" target="_blank" rel="noreferrer">简书:vue路由的实现原理</a><br>
<a href="https://www.jianshu.com/p/e8bffc26293f" target="_blank" rel="noreferrer">简书:vue路由的两种模式，hash与history原理</a></p>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[数据状态更新时的差异diff及patch机制]]></title>
            <link>https://desain7.top./bigWeb/vue/diff.html</link>
            <guid>https://desain7.top./bigWeb/vue/diff.html</guid>
            <pubDate>Mon, 20 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ diff
diff 算法是通过同层的树节点进行比较而非对树进行逐层搜索遍历的方式，所以时间复杂度只有 O(n)]]></description>
            <content:encoded><![CDATA[<h1 id="数据状态更新时的差异-diff-及-patch-机制" tabindex="-1">数据状态更新时的差异 diff 及 patch 机制 <a class="header-anchor" href="#数据状态更新时的差异-diff-及-patch-机制" aria-label="Permalink to &quot;数据状态更新时的差异 diff 及 patch 机制&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="diff" tabindex="-1">diff <a class="header-anchor" href="#diff" aria-label="Permalink to &quot;diff&quot;">&ZeroWidthSpace;</a></h2>
<p>diff 算法是通过同层的树节点进行比较而非对树进行逐层搜索遍历的方式，所以时间复杂度只有 O(n)</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-缓存机制]]></title>
            <link>https://desain7.top./bigWeb/browser/cache.html</link>
            <guid>https://desain7.top./bigWeb/browser/cache.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ 缓存定义
用于存储数据的硬件或软件的组成部分，以使得后续更快访问相应的数据
缓存中的数据可能是提前计算好的结果或者数据的副本
 浏览器缓存
浏览器端（客户端）保存数据用于快速读取或避免重复资源请求的]]></description>
            <content:encoded><![CDATA[<h1 id="缓存机制" tabindex="-1">缓存机制 <a class="header-anchor" href="#缓存机制" aria-label="Permalink to &quot;缓存机制&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="缓存定义" tabindex="-1">缓存定义 <a class="header-anchor" href="#缓存定义" aria-label="Permalink to &quot;缓存定义&quot;">&ZeroWidthSpace;</a></h2>
<p>用于存储数据的硬件或软件的组成部分，以使得后续更快访问相应的数据</p>
<p>缓存中的数据可能是提前计算好的结果或者数据的副本</p>
<h2 id="浏览器缓存" tabindex="-1">浏览器缓存 <a class="header-anchor" href="#浏览器缓存" aria-label="Permalink to &quot;浏览器缓存&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器端（客户端）保存数据用于快速读取或避免重复资源请求的优化机制</p>
<p>缓存是一种简单高效的性能优化方式，可以显著减少网络传输所带来的性能损耗</p>
<p>对于一个数据请求来说，可以分为三个步骤</p>
<ol>
<li>发起请求</li>
<li>后端处理</li>
<li>浏览器响应</li>
</ol>
<p>浏览器缓存可以在第一和第三步骤中优化性能</p>
<ul>
<li>直接使用缓存而不发起请求</li>
<li>发起了请求但后端存储的数据和缓存的数据一致，那么就没有必要再将数据回传回来，这样就减少了响应数据的传输</li>
</ul>
<h2 id="缓存位置" tabindex="-1">缓存位置 <a class="header-anchor" href="#缓存位置" aria-label="Permalink to &quot;缓存位置&quot;">&ZeroWidthSpace;</a></h2>
<p>从缓存位置上来说分为四种，并且各自有优先级，当依次查找缓存且都没有命中的时候，才会去请求网络</p>
<ol>
<li>Service Worker</li>
<li>Memory Cache</li>
<li>Disk Cache</li>
<li>Push Cache</li>
</ol>
<h3 id="service-worker" tabindex="-1">Service Worker <a class="header-anchor" href="#service-worker" aria-label="Permalink to &quot;Service Worker&quot;">&ZeroWidthSpace;</a></h3>
<p>Service Worker 是运行在浏览器背后的独立线程，一般可以用来实现缓存功能</p>
<p>使用 Service Worker的话，传输协议必须为 HTTPS,因为 Service Worker 中涉及到请求拦截，所以必须使用 HTTPS 协议来保障安全</p>
<p><strong>步骤</strong></p>
<ol>
<li>注册 Service Worker</li>
<li>监听到 install 事件以后就可以缓存需要的文件</li>
<li>下次用户访问的时候就可以通过拦截请求的方式查询是否存在缓存
<ul>
<li>是:可以直接读取缓存文件</li>
<li>否:请求数据</li>
</ul>
</li>
</ol>
<p>Service Worker 的缓存与浏览器其他内建的缓存机制不同，它可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的</p>
<p>当 Service Worker 没有命中缓存的时候，就需要去调用 fetch 函数获取数据</p>
<p>也就是说，当没有在 Service Worker 命中缓存的话，会根据缓存查找优先级去查找数据</p>
<p>但是不管是从 Memory Cache 中还是从网络请求中获取的数据，浏览器都会先从 Service Worker 中获取的内容</p>
<my-details title="使用示例">
<p>目录结构</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">serviceWorker</span><span style="color: #89DDFF">/</span></span>
<span class="line"><span style="color: #A6ACCD">├── index</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">css</span></span>
<span class="line"><span style="color: #A6ACCD">├── index</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">html</span></span>
<span class="line"><span style="color: #A6ACCD">├── index</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">js</span></span>
<span class="line"><span style="color: #A6ACCD">└── sw</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">js</span></span></code></pre>
</div><p>index.css</p>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">h1</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #B2CCD6">color</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">red</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>index.html</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">link</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">rel</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">stylesheet</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">href</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./index.css</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">head</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">Service Worker Test</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./index.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">    &lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">src</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">./sw.js</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">body</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>index.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">index.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 注册</span></span>
<span class="line"><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #A6ACCD"> (navigator</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">serviceWorker) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">开始注册service Worker</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">navigator</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">serviceWorker</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">register</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">sw.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">registration</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">service worker 注册成功</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">catch</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">err</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">servcie worker 注册失败</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>sw.js</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 监听 `install` 事件，回调中缓存所需文件</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">install</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">waitUntil</span><span style="color: #F07178">(</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">caches</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">open</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">my-cache</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">cache</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">cache</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addAll</span><span style="color: #F07178">([</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./index.html</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./index.js</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">./index.css</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">])</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    )</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 拦截所有请求事件</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 如果缓存中已经有请求的数据就直接用缓存，否则去请求数据</span></span>
<span class="line"><span style="color: #A6ACCD">self</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fetch</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">respondWith</span><span style="color: #F07178">(</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">caches</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">match</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">request</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">then</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">response</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">response</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">response</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">fetch source</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    )</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><p>显示效果</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5MzY2MjYwOQ==583293662609" alt="图片"></p>
<p>第一次运行输出</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5MzYzMDg4Nw==583293630887" alt="图片"></p>
<p>查看Service Worker(生效)</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5Mzc0MDM4Nw==583293740387" alt="图片"></p>
<p>查看cache(里面有我们缓存的文件)</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5NDM0ODk2Nw==583294348967" alt="图片"></p>
<p>我们改动index.css,然后保存</p>
<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">h1</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #B2CCD6">color</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD">blue</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>显示效果(不发生改变,说明是 我们设置的service Worker生效了)</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5MzY2MjYwOQ==583293662609" alt="图片"></p>
<p>查看控制台中的network</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5NDgzMzE2NA==583294833164" alt="图片"></p>
<p>查看控制台(打印了<code>fetch source</code>,说明是从service worker中取的)</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5NDAwODM1MA==583294008350" alt="图片"></p>
<p>以上就是ServiceWorker的使用方式</p>
</my-details>
<p>相关资源：</p>
<ul>
<li>Google 官方<a href="https://developers.google.com/web/tools/workbox" target="_blank" rel="noreferrer">workbox</a></li>
<li><a href="https://developers.google.com/web/fundamentals/primers/service-workers/" target="_blank" rel="noreferrer">developers文档：Service Worker</a></li>
</ul>
<h3 id="memory-cache" tabindex="-1">Memory Cache <a class="header-anchor" href="#memory-cache" aria-label="Permalink to &quot;Memory Cache&quot;">&ZeroWidthSpace;</a></h3>
<p>Memory Cache 也就是内存中的缓存，读取内存中的数据比磁盘快</p>
<p>内存缓存虽然读取高效，但是缓存持续性很短，会随着进程的释放而释放。一旦关闭 Tab 页面，内存中的缓存就被释放了</p>
<p>当我们访问过页面以后，再次刷新页面，可以发现很多数据都来自于内存缓存</p>
<p>随便打开一个网页看看</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4MzI5NDkzNTYxOQ==583294935619" alt="图片"></p>
<p><strong>浏览器会把哪些文件放入内存❓</strong></p>
<ul>
<li>浏览器会把解析完成的js与css放入内存中</li>
</ul>
<p><strong>特点</strong></p>
<ul>
<li>快速读取：将编译解析后的文件，直接存入该进程的内存中，占据该进程一定的内存资源，以方便下次运行使用时的快速读取</li>
<li>时效性：一旦该进程关闭，则该进程的内存则会清空</li>
</ul>
<h3 id="disk-cache" tabindex="-1">Disk Cache <a class="header-anchor" href="#disk-cache" aria-label="Permalink to &quot;Disk Cache&quot;">&ZeroWidthSpace;</a></h3>
<p>Disk Cache 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 Memory Cache 胜在容量和存储时效性上</p>
<p>在所有浏览器缓存中，Disk Cache 覆盖面基本是最大的</p>
<p>可以根据 HTTP Herder 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求</p>
<p>即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据</p>
<p><strong>哪些资源会被放入磁盘❓</strong></p>
<ul>
<li>对于大文件来说，大概率是不存储在内存中的，反之优先</li>
<li>当前系统内存使用率高的话，文件也会优先存储进硬盘</li>
</ul>
<p><strong>特点</strong></p>
<ul>
<li>直接将缓存写入硬盘文件中</li>
<li>读取需要对硬盘上文件进行I/O操作，然后重新解析该缓存内容，读取复杂，速度比内存缓存慢</li>
<li>文件类型覆盖面大</li>
<li>容量大，存储时间可控</li>
</ul>
<h3 id="push-cache" tabindex="-1">Push Cache <a class="header-anchor" href="#push-cache" aria-label="Permalink to &quot;Push Cache&quot;">&ZeroWidthSpace;</a></h3>
<p>Push Cache 是 HTTP2 协议新增的内容</p>
<p>当以上三种缓存都没有命中时，它才会被使用。并且缓存时间也很短暂，只在会话（Session）中存在，一旦会话结束就被释放。</p>
<p><strong>特点</strong></p>
<ul>
<li>所有的资源都能被推送，但有一定的兼容性问题</li>
<li>可以推送 no-cache 和 no-store 的资源</li>
<li>一旦连接被关闭，Push Cache 就被释放</li>
<li>多个页面可以使用相同的 HTTP/2 连接，即可以使用同一份缓存</li>
<li>Push Cache 中的缓存只能被使用一次</li>
<li>浏览器可以拒绝接受已经存在的资源推送</li>
</ul>
<p>当所有缓存都没有命中时,就会发起网络请求来获取资源</p>
<h2 id="缓存策略" tabindex="-1">缓存策略 <a class="header-anchor" href="#缓存策略" aria-label="Permalink to &quot;缓存策略&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>强缓存</li>
<li>协商缓存</li>
</ul>
<p>优先级较高的是强缓存，当强缓存失效的情况下，才会走协商缓存流程</p>
<p>都是通过设置 HTTP Header 来实现的</p>
<h3 id="强缓存" tabindex="-1">强缓存 <a class="header-anchor" href="#强缓存" aria-label="Permalink to &quot;强缓存&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">&ZeroWidthSpace;</a></h4>
<ol>
<li>不会向服务器发送网络请求，直接从缓存中读取资源</li>
<li>请求返回200的状态码</li>
<li>在devtools的network选项卡可以看到size显示from disk cache或from memory cache</li>
</ol>
<h4 id="设置方法" tabindex="-1">设置方法 <a class="header-anchor" href="#设置方法" aria-label="Permalink to &quot;设置方法&quot;">&ZeroWidthSpace;</a></h4>
<p>通过两种 HTTP Header 实现</p>
<ul>
<li>Expires</li>
<li>Cache-Control</li>
</ul>
<p><strong>二者区别</strong></p>
<ol>
<li>Expires 是RFC 2616（HTTP/1.0）协议中和网页缓存相关字段</li>
<li>Cache-Control 是HTTP/1.1 中实现缓存机制的指令</li>
<li>Cache-Control优先级高于Expires</li>
</ol>
<h4 id="expires" tabindex="-1">Expires <a class="header-anchor" href="#expires" aria-label="Permalink to &quot;Expires&quot;">&ZeroWidthSpace;</a></h4>
<p>使用举例：</p>
<div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">Expires : Wed Mar </span><span style="color: #F78C6C">04</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2020</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">13</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">33</span><span style="color: #A6ACCD">:</span><span style="color: #F78C6C">10</span><span style="color: #A6ACCD"> GMT</span></span></code></pre>
</div><p>用来指定资源的到期时间,表示资源在</p>
<ul>
<li>这个时间之前无需发起网络请求，直接使用缓存的资源</li>
<li>这个时间之后失效,需要重新发起网络请求获取</li>
</ul>
<p><strong>缺陷：</strong> 受限制与本地时间,可以通过修改本地时间致其失效</p>
<h4 id="cache-control" tabindex="-1">Cache-Control <a class="header-anchor" href="#cache-control" aria-label="Permalink to &quot;Cache-Control&quot;">&ZeroWidthSpace;</a></h4>
<p>使用举例：</p>
<div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">Cache-control: max-age=</span><span style="color: #F78C6C">30</span></span></code></pre>
</div><p>表示资源会在 30 秒后过期，需要再次请求，max-age是距离请求发起的时间的秒数</p>
<p>Cache-Control 生于 HTTP/1.1，<strong>优先级高于</strong> Expires 。</p>
<p>可以在<code>请求头</code>或者<code>响应头</code>中设置，并且可以组合使用多种指令</p>
<p><strong>常见指令</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">指令</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">public</td>
<td style="text-align:center">响应可以被服务端或者客户顿缓存</td>
</tr>
<tr>
<td style="text-align:center"><strong>private</strong>  默认值</td>
<td style="text-align:center">响应只可以被客户端缓存</td>
</tr>
<tr>
<td style="text-align:center">max-age=30</td>
<td style="text-align:center">缓存30s后过期需要重新请求</td>
</tr>
<tr>
<td style="text-align:center">s-maxage=30</td>
<td style="text-align:center">覆盖max-age,作用一致,代理服务器才生效</td>
</tr>
<tr>
<td style="text-align:center">no-store</td>
<td style="text-align:center">不缓存任何响应</td>
</tr>
<tr>
<td style="text-align:center">no-cache</td>
<td style="text-align:center">资源能被缓存,但立即失效</td>
</tr>
<tr>
<td style="text-align:center">max-stale=30</td>
<td style="text-align:center">30s内,即使缓存过期也使用该缓存</td>
</tr>
<tr>
<td style="text-align:center">min-fresh=30</td>
<td style="text-align:center">希望30s内获取最新的响应</td>
</tr>
</tbody>
</table>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNDc0MDczMDcyMQ==604740730721" alt="图片"></p>
<p><strong>特点</strong> 优先级高于Expires，指令可以组合</p>
<h3 id="协商缓存" tabindex="-1">协商缓存 <a class="header-anchor" href="#协商缓存" aria-label="Permalink to &quot;协商缓存&quot;">&ZeroWidthSpace;</a></h3>
<p>协商缓存就是强缓存失效后，浏览器携带资源的缓存标识向服务器发起请求，由服务器根据缓存标识决定是否继续使用缓存的过程</p>
<p>当浏览器发起请求验证资源时，如果资源没有做改变，那么服务端就会返回 304 状态码，并且更新浏览器现有缓存有效期</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNDc0MjYxODY2Nw==604742618667" alt="图片"></p>
<p>当资源失效时，返回 200 状态码和最新的资源</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNDc0Mjc1NjE5MA==604742756190" alt="图片"></p>
<p>协商缓存可以通过设置两种 HTTP Header实现</p>
<ul>
<li>Last-Modified</li>
<li>ETag</li>
</ul>
<h4 id="last-modified" tabindex="-1">Last-Modified <a class="header-anchor" href="#last-modified" aria-label="Permalink to &quot;Last-Modified&quot;">&ZeroWidthSpace;</a></h4>
<p>浏览器发起请求访问目标资源，服务器在返回资源的同时，会在response header中添加 Last-Modified这个header，表示这个资源在服务器上的最后修改时间</p>
<p>浏览器下一次请求这个资源，浏览器检测到有 Last-Modified这个header，于是会添加If-Modified-Since这个header其值就是Last-Modified中的值</p>
<p>服务器再次收到这个资源请求，会根据 If-Modified-Since 中的值与服务器中这个资源的最后修改时间对比</p>
<ul>
<li>若服务器的资源最后被修改时间不等于于If-Modified-Since中的值的话就会将新的资源发送回来</li>
<li>否则返回 304 状态码</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>如果本地打开缓存文件，即使没有对文件进行修改，但还是会造成 Last-Modified 被修改，服务端不能命中缓存导致发送相同的资源</li>
<li>Last-Modified 只能以秒计时，如果在不可感知的时间内修改完成文件，那么服务端会认为资源还是命中了，不会返回正确的资源</li>
</ul>
<p>因为以上这些弊端，所以在 HTTP / 1.1 出现了 <code>ETag</code></p>
<h4 id="etag" tabindex="-1">ETag <a class="header-anchor" href="#etag" aria-label="Permalink to &quot;ETag&quot;">&ZeroWidthSpace;</a></h4>
<p>Etag是服务器在响应请求时，返回的当前资源文件一个唯一标识(由服务器生成)，只要资源有变化，Etag就会重新生成</p>
<p>浏览器在向服务器发送请求时，会将上一次返回的Etag值放到请求头的If-None-Match字段里</p>
<p>服务端比较 If-None-Match 中的值跟目标资源的ETag是否一致</p>
<ul>
<li>一致，响应状态码为304</li>
<li>不一致，响应状态码为200，并返回新的资源</li>
</ul>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNDc1MjM0MjkwMg==604752342902" alt="图片"></p>
<p><strong>特点：</strong></p>
<ul>
<li>ETag 优先级比 Last-Modified 高</li>
<li>ETag 是服务端通过算法计算得出，需要损耗一定时间</li>
</ul>
<h4 id="两者对比" tabindex="-1">两者对比 <a class="header-anchor" href="#两者对比" aria-label="Permalink to &quot;两者对比&quot;">&ZeroWidthSpace;</a></h4>
<ul>
<li>Etag/If-None-Match优先级高于Last-Modified/If-Modified-Since
<ul>
<li>即同时存在则只有Etag / If-None-Match生效</li>
</ul>
</li>
<li>性能上，Last-Modified要优于Etag
<ul>
<li>Last-Modified只需要记录时间</li>
<li>Etag需要服务器通过算法来计算出一个hash值</li>
</ul>
</li>
<li>在精确度上，Etag要优于Last-Modified
<ul>
<li>Last-Modified的时间单位是秒，如果某个文件在1秒内被改变了多次，那么它的Last-Modified没有体现出来修改</li>
<li>文件只要发生改变，Etag就会改变</li>
</ul>
</li>
</ul>
<h2 id="执行流程" tabindex="-1">执行流程 <a class="header-anchor" href="#执行流程" aria-label="Permalink to &quot;执行流程&quot;">&ZeroWidthSpace;</a></h2>
<ol>
<li>强制缓存优先于协商缓存进行
<ul>
<li>若强制缓存(Expires和Cache-Control)生效则直接使用缓存</li>
<li>若不生效则进行协商缓存(Last-Modified / If-Modified-Since与Etag / If-None-Match)</li>
</ul>
</li>
<li>协商缓存由服务器决定是否使用缓存
<ul>
<li>若协商缓存失效，那么代表该请求的缓存失效，响应200，返回新的资源和缓存标识，并存入浏览器缓存中</li>
<li>生效则响应304，表示继续使用现有缓存</li>
</ul>
</li>
</ol>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTYwNDc1MzgyODAyMg==604753828022" alt="图片"></p>
<p><strong>如果什么缓存策略都没设置，那么浏览器会怎么处理❓</strong></p>
<p>对于这种情况，浏览器会采用一个<code>启发式的算法</code></p>
<p>取响应头中的 Date 减去 Last-Modified 值的 10% 作为缓存时间</p>
<h2 id="缓存策略应用场景" tabindex="-1">缓存策略应用场景 <a class="header-anchor" href="#缓存策略应用场景" aria-label="Permalink to &quot;缓存策略应用场景&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-频繁变动的资源" tabindex="-1">1. 频繁变动的资源 <a class="header-anchor" href="#_1-频繁变动的资源" aria-label="Permalink to &quot;1. 频繁变动的资源&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>首先使用 <code>Cache-Control: no-cache</code>,使浏览器每次都请求服务器</li>
<li>配合 ETag 或 Last-Modified 来验证资源是否过期</li>
</ol>
<p>这样的做法虽然不能节省请求数量，但是能显著减少响应数据大小</p>
<h3 id="_2-代码文件" tabindex="-1">2. 代码文件 <a class="header-anchor" href="#_2-代码文件" aria-label="Permalink to &quot;2. 代码文件&quot;">&ZeroWidthSpace;</a></h3>
<p>缓存除<code>HTML</code>外的文件</p>
<p>一般来说，现在都会使用工具来打包代码，那么就可以对<strong>HTML引用的静态资源的文件名进行哈希处理</strong>，只有当文件内容发生修改后才会生成新的文件名</p>
<p>因此可以给代码文件设置缓存有效期一年Cache-Control: max-age=31536000，这样只有当<code>HTML</code>文件中引入的文件名发生了改变才会去下载最新的代码文件，否则就一直使用缓存。</p>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<ul>
<li><a href="https://www.jianshu.com/p/54cc04190252" target="_blank" rel="noreferrer">简书 - 深入理解浏览器的缓存机制</a></li>
<li><a href="https://segmentfault.com/a/1190000017185195" target="_blank" rel="noreferrer">思否 - 浏览器缓存原理以及本地存储</a></li>
<li><a href="https://juejin.im/book/6844733763675488269/section/6844733763742597127" target="_blank" rel="noreferrer">掘金小册 - 前端面试之道</a></li>
<li><a href="https://juejin.im/entry/6844903593275817998" target="_blank" rel="noreferrer">掘金 - 彻底理解浏览器的缓存机制</a></li>
</ul>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[浏览器-本地存储]]></title>
            <link>https://desain7.top./bigWeb/browser/storage.html</link>
            <guid>https://desain7.top./bigWeb/browser/storage.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[在目前的现代浏览器中主要有以下几种存储方案
* cookie
* localStorage
* sessionStorage
* indexDB
下面为大家详细道来各种方案的适用场景与缺点
 Cook]]></description>
            <content:encoded><![CDATA[<h1 id="本地存储" tabindex="-1">本地存储 <a class="header-anchor" href="#本地存储" aria-label="Permalink to &quot;本地存储&quot;">&ZeroWidthSpace;</a></h1>
<p>在目前的现代浏览器中主要有以下几种存储方案</p>
<ul>
<li>cookie</li>
<li>localStorage</li>
<li>sessionStorage</li>
<li>indexDB</li>
</ul>
<p>下面为大家详细道来各种方案的适用场景与缺点</p>
<h2 id="cookie" tabindex="-1">Cookie <a class="header-anchor" href="#cookie" aria-label="Permalink to &quot;Cookie&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">&ZeroWidthSpace;</a></h3>
<p>主要为了辨别用户身份而储存在用户本地终端上的数据</p>
<p>可以记录用户对网站的访问情况（停留时长，访问深度，记录账号密码，在线状态等）</p>
<p>主要由服务端生成然后下发，客户端也可控制其内容</p>
<p>每次发送请求都会自动携带对应域名的cookie</p>
<h3 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端" aria-label="Permalink to &quot;服务端&quot;">&ZeroWidthSpace;</a></h4>
<p>服务端在响应头(Response Header)中添加一个<code>Set-Cookie</code>字段</p>
<p><strong>示例</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">Set</span><span style="color: #89DDFF">-</span><span style="color: #FFCB6B">Cookie</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">name=value;expires=session;path=/;domain=.sugarat.top;HttpOnly;secure;sameSite=lax</span><span style="color: #89DDFF">&quot;</span></span></code></pre>
</div><h4 id="客户端-浏览器" tabindex="-1">客户端（浏览器） <a class="header-anchor" href="#客户端-浏览器" aria-label="Permalink to &quot;客户端（浏览器）&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">cookie</span></span></code></pre>
</div><p>可以通过此 API获取或者修改cookie</p>
<h3 id="set-cookie" tabindex="-1">Set-Cookie <a class="header-anchor" href="#set-cookie" aria-label="Permalink to &quot;Set-Cookie&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>⭐Set-Cookie 字段的属性介绍</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">cookie属性</th>
<th style="text-align:center">简介</th>
<th style="text-align:center">特殊说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">name</td>
<td style="text-align:center">键</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">value</td>
<td style="text-align:center">值</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">Expires</td>
<td style="text-align:center">过期时间</td>
<td style="text-align:center">一个固定的时间</td>
</tr>
<tr>
<td style="text-align:center">Max-Age</td>
<td style="text-align:center">过期时间</td>
<td style="text-align:center">收到此cookie后多久后过期，优先级大于Expires</td>
</tr>
<tr>
<td style="text-align:center">Domain</td>
<td style="text-align:center">可以送达的主机名(域名)</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">path</td>
<td style="text-align:center">生效路径</td>
<td style="text-align:center">路径必须出现在要请求的资源的路径中才可以发送</td>
</tr>
<tr>
<td style="text-align:center">Secure</td>
<td style="text-align:center">安全标志</td>
<td style="text-align:center">只有使用HTTPS协议的时候才会携带此cookie</td>
</tr>
<tr>
<td style="text-align:center">HTTPOnly</td>
<td style="text-align:center">安全标志</td>
<td style="text-align:center">不允许使用脚本去更改/获取这个cookie</td>
</tr>
<tr>
<td style="text-align:center">SameSite</td>
<td style="text-align:center">安全标志</td>
<td style="text-align:center">控制跨站请求获取cookie</td>
</tr>
</tbody>
</table>
<p><strong>⭐属性补充说明</strong></p>
<ul>
<li>Expires：其值为默认session,即关闭浏览器时此cookie就过期失效</li>
<li>Max-Age：不同取值范围不同效果
<ul>
<li>大于0：会将cookie存到本地文件中</li>
<li>等于0：立即删除</li>
<li>小于0：等价于会话性cookie</li>
<li>优先级大于Expires</li>
</ul>
</li>
<li>Domain：指定了 Cookie 可以送达的主机名
<ul>
<li>没有指定：默认值为当前文档访问地址中的主机部分(不包含子域名)</li>
<li>如果设置为<code>.a.com</code>那么<code>a.com</code>,<code>a.a.com</code>，<code>b.a.com</code>等都能访问,即<code>a.com</code>的子域名都可以访问到这个cokie</li>
</ul>
</li>
<li>HTTPOnly
<ul>
<li>防止客户端脚本通过 <code>document.cookie</code> 方式访问或者更改 此Cookie</li>
<li>有助于避免 XSS 攻击</li>
</ul>
</li>
<li>SameSite:可以设置让 Cookie 在跨站请求时不会被发送，从而可以阻止跨站请求伪造攻击（CSRF）
<ul>
<li>Strict:仅允许一方请求携带 Cookie，即浏览器将只发送相同站点请求的 Cookie，当前网页 URL 与请求目标 URL 完全一致才发送</li>
<li>Lax:允许部（导航到目标网址的 Get 请求）分第三方请求携带 Cookie</li>
<li>None:无论是否跨站都会发送 Cookie</li>
<li><strong>之前默认值是 None ，在Chrome稳定版80及更高版本上默认是 Lax</strong></li>
</ul>
</li>
</ul>
<p><strong>⭐SameSite = lax 的影响</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">Set</span><span style="color: #89DDFF">-</span><span style="color: #FFCB6B">Cookie</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">name=value;SameSite=Lax;</span><span style="color: #89DDFF">&#39;</span></span></code></pre>
</div><p>大多数情况不发送第三方 Cookie，但是导航到目标网址的 Get 请求除外</p>
<ul>
<li>超链接</li>
<li>GET表单</li>
<li>预加载请求</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">请求类型</th>
<th style="text-align:center">示例</th>
<th style="text-align:center">SameSite = lax 是否发送cooie</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">超链接</td>
<td style="text-align:center">&lt;a\ href=&quot;...&quot;&gt;&lt;/a&gt;</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center">GET表单</td>
<td style="text-align:center">&lt;form method=&quot;GET&quot; action=&quot;...&quot;&gt;&lt;/form&gt;</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center">预加载</td>
<td style="text-align:center">&lt;link rel=&quot;prerender&quot; href=&quot;...&quot;/&gt;</td>
<td style="text-align:center">✅</td>
</tr>
<tr>
<td style="text-align:center">POST 表单</td>
<td style="text-align:center">&lt;form method=&quot;POST&quot; action=&quot;...&quot;&gt;&lt;/form&gt;</td>
<td style="text-align:center">❌</td>
</tr>
<tr>
<td style="text-align:center">image</td>
<td style="text-align:center">&lt;img src=&quot;...&quot; /&gt;</td>
<td style="text-align:center">❌</td>
</tr>
<tr>
<td style="text-align:center">iframe</td>
<td style="text-align:center">&lt;iframe src=&quot;...&quot;&gt;&lt;/iframe&gt;</td>
<td style="text-align:center">❌</td>
</tr>
<tr>
<td style="text-align:center">ajax</td>
<td style="text-align:center">fetch(url)</td>
<td style="text-align:center">❌</td>
</tr>
</tbody>
</table>
<p><strong>⭐Cookie 的作用域</strong></p>
<p>Domain 和 Path 标识共同定义了 Cookie 的作用域：即哪些URL的请求 会携带 目标Cookie</p>
<h3 id="用途" tabindex="-1">用途 <a class="header-anchor" href="#用途" aria-label="Permalink to &quot;用途&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>会话状态管理:（如用户登录状态、账号信息等）</li>
<li>个性化设置:（如用户自定义设置、主题等）</li>
<li>用户行为分析：埋点系统（访问深度，停留时长等）</li>
</ul>
<h3 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>容量问题：有上限，最大只能有 4KB</li>
<li>性能问题：同一个域名下的所有请求，都会携带 Cookie，某些请求（a,img,link等标签发出的请求）可能不需要此cookie，会加大传输的头部，损耗一定时空开销</li>
<li>安全问题：客户端可以通过一定手段（脚本，devtools，本地存储的文件，修改host文件）获取到，存在XSS,CSRF等安全问题</li>
</ul>
<h3 id="解决安全问题的方案" tabindex="-1">解决安全问题的方案 <a class="header-anchor" href="#解决安全问题的方案" aria-label="Permalink to &quot;解决安全问题的方案&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>减短cookie的有效时间</li>
<li>添加HttpOnly属性：防止本地脚本读取cookie</li>
<li>服务端对传送的cookie加密</li>
<li>添加Secure属性：使用https协议传输</li>
<li>设置samesite属性为需要的值：严格卡控cookie的携带范围</li>
</ul>
<h2 id="localstorage与sessionstorage" tabindex="-1">localStorage与sessionStorage <a class="header-anchor" href="#localstorage与sessionstorage" aria-label="Permalink to &quot;localStorage与sessionStorage&quot;">&ZeroWidthSpace;</a></h2>
<p>浏览器提供的数据存储API，作用相同，生命周期与作用域的不同</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">sessionStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setItem</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setItem</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">sessionStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getItem</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #A6ACCD">window</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">localStorage</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getItem</span><span style="color: #A6ACCD">()</span></span></code></pre>
</div><h3 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>localStorage 是持久化的本地存储,永远不会过期,除非手动删除</li>
<li>sessionStorage 是临时性的本地存储,在会话结束时(关闭页面),存储的内容就被释放</li>
</ul>
<h3 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to &quot;作用域&quot;">&ZeroWidthSpace;</a></h3>
<p><code>Local Storage</code>、<code>Session Storage</code> 和 <code>Cookie</code> 都遵循<strong>同源策略</strong></p>
<p>但Session Storage有特殊之处：即便是相同域名下的两个页面，只要它们不在浏览器的同一个Tab中打开，那么它们的 Session Storage 内容便无法共享</p>
<h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>存储容量大:不同浏览器，针对一个域名的存储容量(大小)可以达到 4-20M（不同编码的字符占用空间大小不一样）
<ul>
<li>一些资料通常说的5M：实际上指的存储内容字符串长度，即<code>length</code>等于 <strong>5*1024*1024</strong>，并不是实际上的内容大小为5Mb并且限制的是 key + value 的字符数不大于 5M(5*1024*1024)</li>
<li>UTF-8 - 英文：1字节</li>
<li>UTF-8 - 中文：3字节</li>
<li>UTF-16 - 中/英文：4字节</li>
</ul>
</li>
<li>存储于客户端，不会服务端发生通信</li>
</ul>
<p>关于存储容量的计算demo可以<a href="https://github.com/Desain7/demos/blob/main/getLocalStoragSize/README.md" target="_blank" rel="noreferrer">跳转查看</a></p>
<h3 id="缺点-1" tabindex="-1">缺点 <a class="header-anchor" href="#缺点-1" aria-label="Permalink to &quot;缺点&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>只能存储字符串，JSON对象需要转换为json string 存储</li>
<li>只适用于存储少量简单数据</li>
<li>localStorage需要手动删除</li>
</ul>
<h3 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>base64图片存储：存储logo</li>
<li>接口数据持久化：对于依赖于接口(变动周期比较长)生成的内容，可以使用storage存储，以加快首屏渲染</li>
</ul>
<h2 id="indexeddb" tabindex="-1">IndexedDB <a class="header-anchor" href="#indexeddb" aria-label="Permalink to &quot;IndexedDB&quot;">&ZeroWidthSpace;</a></h2>
<p>运行在浏览器上的非关系型数据库</p>
<p>依旧受同源策略限制</p>
<h3 id="优点-1" tabindex="-1">优点 <a class="header-anchor" href="#优点-1" aria-label="Permalink to &quot;优点&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>理论上没有存储上线</li>
<li>可以存储字符串，还可以存储二进制数据</li>
<li>浏览器提供了一套可简单操作的API</li>
</ul>
<h3 id="应用场景-1" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景-1" aria-label="Permalink to &quot;应用场景&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li>当数据的复杂度和规模上升到了 LocalStorage 无法解决的程度,就使用IndexDB</li>
<li>临时存储复杂的数据，如页面中的临时文章</li>
<li>一些复杂表单内容的离线保存</li>
</ul>
<h3 id="使用教程" tabindex="-1">使用教程 <a class="header-anchor" href="#使用教程" aria-label="Permalink to &quot;使用教程&quot;">&ZeroWidthSpace;</a></h3>
<p>笔者就不在这里赘述使用方法，网上有更优秀的资料</p>
<p>下面给大家推荐两篇</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB" target="_blank" rel="noreferrer">MDN：使用 IndexedDB</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2018/07/indexeddb.html" target="_blank" rel="noreferrer">阮一峰：浏览器数据库 IndexedDB 入门教程</a></li>
</ul>
<div class="tip custom-block"><p class="custom-block-title">参考</p>
<ul>
<li><a href="https://www.chromium.org/updates/same-site" target="_blank" rel="noreferrer">SameSite update 日志</a></li>
<li><a href="https://developers.google.com/web/tools/chrome-devtools/storage/cookies" target="_blank" rel="noreferrer">devTools Storage</a></li>
<li><a href="https://www.chromestatus.com/feature/5088147346030592" target="_blank" rel="noreferrer">Chrome Platform Status</a></li>
<li><a href="https://web.dev/samesite-cookies-explained/" target="_blank" rel="noreferrer">SameSite cookies explained</a></li>
</ul>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[组件通信]]></title>
            <link>https://desain7.top./bigWeb/vue/communicate.html</link>
            <guid>https://desain7.top./bigWeb/vue/communicate.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ 父子通信
 props与emit

```vue
<!--父组件中-->
<input :param1="val" @changeparam1="callback"/>
<!--子组件中-->
<s]]></description>
            <content:encoded><![CDATA[<h1 id="组件通信" tabindex="-1">组件通信 <a class="header-anchor" href="#组件通信" aria-label="Permalink to &quot;组件通信&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="父子通信" tabindex="-1">父子通信 <a class="header-anchor" href="#父子通信" aria-label="Permalink to &quot;父子通信&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="props与emit" tabindex="-1">props与emit <a class="header-anchor" href="#props与emit" aria-label="Permalink to &quot;props与emit&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>父组件通过 props 传递数据给子组件，子组件通过 emit 发送事件传递数据给父组件,这种父子通信方式也就是典型的单向数据流，父组件通过 props 传递数据，子组件不能直接修改 props， 而是必须通过发送事件的方式告知父组件修改数据。</p>
</blockquote>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">&lt;!--父组件中--&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">input</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">:</span><span style="color: #C792EA">param1</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">val</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">@</span><span style="color: #C792EA">changeparam1</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">callback</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">/&gt;</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">&lt;!--子组件中--&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">$emit</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">changeparam1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="v-model" tabindex="-1">v-model <a class="header-anchor" href="#v-model" aria-label="Permalink to &quot;v-model&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>v-model 默认会解析成名为 value 的 prop 和名为 input 的事件。这种语法糖的方式是典型的双向绑定，但是究其根本，还是通过事件的方法让父组件修改数据。</p>
</blockquote>
<p><strong>子组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    &lt;input @input=&quot;handleInput&quot; :value=&quot;value&quot;/&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">props</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">String</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">methods</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">handleInput</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">e</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">$emit</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">input</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>父组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{param1}}</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">fw-input</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">v-model</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">param1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">fw-input</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">date</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            param</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">666</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="parent与-children" tabindex="-1">$parent与$children <a class="header-anchor" href="#parent与-children" aria-label="Permalink to &quot;$parent与$children&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>通过访问 $parent 或者 $children 对象来访问组件实例中的方法和数据</p>
</blockquote>
<p><strong>子组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">&lt;button @click=&quot;changeParent&quot; type=&quot;button&quot;&gt;{{value}}&lt;/button&gt;</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">data</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            value</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">child</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">methods</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">changeParent</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">e</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">$parent</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">$data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">param1</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">change by child</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>父组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{param1}}</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">fw-child</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">fw-child</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">@</span><span style="color: #C792EA">click</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">changeChild</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">type</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">button</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">parent</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">data</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            param1</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">123</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">methods</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">changeChild</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">$children</span><span style="color: #F07178">[</span><span style="color: #F78C6C">0</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">$data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">change by parent</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="listeners" tabindex="-1">$listeners <a class="header-anchor" href="#listeners" aria-label="Permalink to &quot;$listeners&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>$listeners 属性会将父组件中的 (不含 .native 修饰器的) v-on 事件监听器传递给子组件，子组件可以通过访问 $listeners 来自定义监听器。</p>
</blockquote>
<p><strong>子组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">&lt;input v-on=&quot;inputListeners&quot; :value=&quot;value&quot;/&gt;</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">props</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">String</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">computed</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">inputListeners</span><span style="color: #F07178">() </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">that</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">assign</span><span style="color: #F07178">(</span><span style="color: #89DDFF">{},</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">that</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">$listeners</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                input</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">e</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #A6ACCD">that</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">$emit</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">input</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>父组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{param1}}</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">fw-input2</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">v-model</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">param1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">fw-input2</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">data</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            param1</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">123</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="sync" tabindex="-1">.sync <a class="header-anchor" href="#sync" aria-label="Permalink to &quot;.sync&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>.sync 属性是个语法糖，可以很简单的实现子组件与父组件通信
<strong>子组件</strong></p>
</blockquote>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">&lt;input @input=&quot;handleInput&quot; :value=&quot;value&quot;/&gt;</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">props</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">String</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">methods</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">handleInput</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">e</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">$emit</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">update:value</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">e</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>父组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{param1}}</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">fw-input3</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">:</span><span style="color: #C792EA">value</span><span style="color: #A6ACCD">.</span><span style="color: #C792EA">sync</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">param1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">fw-input3</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">data</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            param1</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">123</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="兄弟组件通信" tabindex="-1">兄弟组件通信 <a class="header-anchor" href="#兄弟组件通信" aria-label="Permalink to &quot;兄弟组件通信&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>通过查找父组件中的子组件实现，<strong>this.$parent.$children</strong>，在 $children 中可以通过组件 name 查询到需要的组件实例，然后进行通信。</p>
</blockquote>
<h2 id="跨多层次组件通信" tabindex="-1">跨多层次组件通信 <a class="header-anchor" href="#跨多层次组件通信" aria-label="Permalink to &quot;跨多层次组件通信&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="provide-inject" tabindex="-1">provide / inject <a class="header-anchor" href="#provide-inject" aria-label="Permalink to &quot;provide / inject&quot;">&ZeroWidthSpace;</a></h3>
<p><strong>子组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{parentValue}}</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">inject</span><span style="color: #89DDFF">:</span><span style="color: #F07178">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">parentValue</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p><strong>父组件</strong></p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">deep-child</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">deep-child</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">provide</span><span style="color: #89DDFF">:{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">parentValue</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">666</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="任意组件" tabindex="-1">任意组件 <a class="header-anchor" href="#任意组件" aria-label="Permalink to &quot;任意组件&quot;">&ZeroWidthSpace;</a></h2>
<p>使用 <code>Vuex</code> 或者 <code>Event Bus</code></p>
<h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://codepen.io/sugarInSoup/pen/wvapBYB" target="_blank" rel="noreferrer">CodePen:示例</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[编译template的过程]]></title>
            <link>https://desain7.top./bigWeb/vue/compile.html</link>
            <guid>https://desain7.top./bigWeb/vue/compile.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ Compile
compile 编译分为 `parse`,`optimize`,`generate` 三个阶段，最终得到` render function`
示例
```html
<div :cla]]></description>
            <content:encoded><![CDATA[<h1 id="编译template的过程" tabindex="-1">编译template的过程 <a class="header-anchor" href="#编译template的过程" aria-label="Permalink to &quot;编译template的过程&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="compile" tabindex="-1">Compile <a class="header-anchor" href="#compile" aria-label="Permalink to &quot;Compile&quot;">&ZeroWidthSpace;</a></h2>
<p>compile 编译分为 <code>parse</code>,<code>optimize</code>,<code>generate</code> 三个阶段，最终得到<code> render function</code></p>
<p>示例</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">:class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-if</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-for</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">item in sz</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">{{item}}123</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">var</span><span style="color: #A6ACCD"> html </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;div :class=&quot;c&quot; class=&quot;demo&quot; v-if=&quot;isShow&quot;&gt;&lt;span v-for=&quot;item in sz&quot;&gt;{{item}}&lt;/span&gt;&lt;/div&gt;</span><span style="color: #89DDFF">&#39;</span></span></code></pre>
</div><h2 id="parse" tabindex="-1">parse <a class="header-anchor" href="#parse" aria-label="Permalink to &quot;parse&quot;">&ZeroWidthSpace;</a></h2>
<p>使用正则等方式将 template 模板中进行字符串解析，得到指令、class、style等数据，形成 <word>AST</word></p>
<p><strong>解析结果</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 标签属性的map，记录了标签上属性 */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">attrsMap</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">:class</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">class</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">v-if</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 解析得到的:class */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">classBinding</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 标签属性v-if */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">if</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* v-if的条件 */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ifConditions</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: [</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">exp</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 标签属性class */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">staticClass</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 标签的tag */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tag</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">div</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 子标签数组 */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">children</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: [</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">attrsMap</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">v-for</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">item in sz</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #676E95; font-style: italic">/* for循环的参数 */</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">alias</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">item</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #676E95; font-style: italic">/* for循环的对象 */</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">for</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">sz</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #676E95; font-style: italic">/* for循环是否已经被处理的标记位 */</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">forProcessed</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">tag</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">span</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">children</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #676E95; font-style: italic">/* 表达式，_s是一个转字符串的函数 */</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">expression</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">_s(item)</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">text</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">{{item}}</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            ]</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h2 id="optimize" tabindex="-1">optimize <a class="header-anchor" href="#optimize" aria-label="Permalink to &quot;optimize&quot;">&ZeroWidthSpace;</a></h2>
<p>为静态的节点做上一些「标记」，在 patch 的时候我们就可以直接跳过这些被标记的节点的比对，从而达到「优化」的目的。</p>
<p>经过 optimize 这层的处理，每个节点会加上 static 属性，用来标记是否是静态的</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">attrsMap</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">:class</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">class</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">v-if</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">classBinding</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">if</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ifConditions</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: [</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">exp</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">staticClass</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">tag</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">div</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #676E95; font-style: italic">/* 静态标志 */</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">static</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">children</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">: [</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">attrsMap</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">v-for</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">item in sz</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">static</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">alias</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">item</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">for</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">sz</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">forProcessed</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">tag</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">span</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">children</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">expression</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">_s(item)</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">text</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">{{item}}</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">static</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">false</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            ]</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h2 id="generate" tabindex="-1">generate <a class="header-anchor" href="#generate" aria-label="Permalink to &quot;generate&quot;">&ZeroWidthSpace;</a></h2>
<p>generate 会将 AST 转化成 render funtion 字符串，最终得到 render 的字符串以及 staticRenderFns 字符串</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[computed与watch]]></title>
            <link>https://desain7.top./bigWeb/vue/computed.html</link>
            <guid>https://desain7.top./bigWeb/vue/computed.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[* ``computed`` 是计算属性，依赖其他属性计算值，并且 computed 的值有缓存，只有当计算值变化才会返回内容。
* ``watch`` 监听到值的变化就会执行回调，在回调中可以进行一]]></description>
            <content:encoded><![CDATA[<h1 id="computed-与-watch" tabindex="-1">computed 与 watch <a class="header-anchor" href="#computed-与-watch" aria-label="Permalink to &quot;computed 与 watch&quot;">&ZeroWidthSpace;</a></h1>
<ul>
<li><code>computed</code> 是计算属性，依赖其他属性计算值，并且 computed 的值有缓存，只有当计算值变化才会返回内容。</li>
<li><code>watch</code> 监听到值的变化就会执行回调，在回调中可以进行一些逻辑操作。</li>
</ul>
<h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>需要依赖别的属性来动态获得值的时候可以使用 <code>computed</code></li>
<li>对于监听到值的变化需要做一些复杂业务逻辑的情况可以使用 <code>watch</code></li>
</ul>
<h2 id="对象写法" tabindex="-1">对象写法 <a class="header-anchor" href="#对象写法" aria-label="Permalink to &quot;对象写法&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="computed" tabindex="-1">computed <a class="header-anchor" href="#computed" aria-label="Permalink to &quot;computed&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">data</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            num</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">computed</span><span style="color: #89DDFF">:{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">doubleNum</span><span style="color: #89DDFF">:{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">get</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">num</span><span style="color: #89DDFF">*</span><span style="color: #F78C6C">2</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">set</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #F07178">)</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">num</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">~~</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">2</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h3 id="watch" tabindex="-1">watch <a class="header-anchor" href="#watch" aria-label="Permalink to &quot;watch&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">export</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF; font-style: italic">default</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">data</span><span style="color: #F07178">()</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            num</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">watch</span><span style="color: #89DDFF">:{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">num</span><span style="color: #89DDFF">:{</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 深度遍历</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #FFCB6B">deep</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 立即触发</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #FFCB6B">immediate</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 执行的函数</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">handler</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">val</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">oldVal</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">oldVal</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[响应式系统的依赖收集追踪原理]]></title>
            <link>https://desain7.top./bigWeb/vue/dep.html</link>
            <guid>https://desain7.top./bigWeb/vue/dep.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ 订阅者 Dep
主要作用是用来存放 Watcher 观察者对象
```js
class Dep{
    constructor(){
        // 存放Watcher对象
        ]]></description>
            <content:encoded><![CDATA[<h1 id="响应式系统的依赖收集追踪原理" tabindex="-1">响应式系统的依赖收集追踪原理 <a class="header-anchor" href="#响应式系统的依赖收集追踪原理" aria-label="Permalink to &quot;响应式系统的依赖收集追踪原理&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="订阅者-dep" tabindex="-1">订阅者 Dep <a class="header-anchor" href="#订阅者-dep" aria-label="Permalink to &quot;订阅者 Dep&quot;">&ZeroWidthSpace;</a></h2>
<p>主要作用是用来存放 Watcher 观察者对象</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Dep</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 存放Watcher对象</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">subs</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> []</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">     * 添加一个Watcher对象</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">     **/</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">addSub</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">sub</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">subs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">sub</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">     * 通知所有Watcher对象更新视图</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">     **/</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">notify</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">subs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">forEach</span><span style="color: #F07178">(</span><span style="color: #A6ACCD; font-style: italic">sub</span><span style="color: #C792EA">=&gt;</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">sub</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">update</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h2 id="观察者-watcher" tabindex="-1">观察者 Watcher <a class="header-anchor" href="#观察者-watcher" aria-label="Permalink to &quot;观察者 Watcher&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">Dep</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">target </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">null;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Watcher</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">Dep</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">target</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">this</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">update</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">更新视图</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h2 id="依赖收集" tabindex="-1">依赖收集 <a class="header-anchor" href="#依赖收集" aria-label="Permalink to &quot;依赖收集&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>在对象被<code>读</code>的时候，触发 <code>reactiveGetter</code> 函数把当前的 Watcher 对象（存放在 Dep.target 中）收集到 Dep 类中去</li>
<li>当该对象被<code>写</code>的时候，触发 <code>reactiveSetter</code> 方法，通知 Dep 类调用 <code>notify</code> 来触发所有 <code>Watcher</code> 对象的 <code>update</code> 方法更新对应视图</li>
</ul>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">defineReactive</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">val</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">dep</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Dep</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">defineProperty</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        enumrable</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        configurable</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 进行依赖搜集</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">收集依赖</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">dep</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addSub</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">Dep</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">target</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">val</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">set</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">newVal</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">newVal</span><span style="color: #F07178"> </span><span style="color: #89DDFF">!==</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">val</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">dep</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">notify</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Vue</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">options</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">_data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">options</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">observer</span><span style="color: #F07178">(</span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">_data</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #676E95; font-style: italic">/* 新建一个Watcher观察者对象，这时候Dep.target会指向这个Watcher对象 */</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Watcher</span><span style="color: #F07178">()</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #676E95; font-style: italic">/* 模拟render的过程，触发test属性的get函数进行依赖搜集 */</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">render~</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 触发get收集依赖</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">_data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 收集依赖 name</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">_data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">friends</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name1</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 收集依赖name1</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p><strong>测试示例代码</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> app </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Vue</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">data</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">小明</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">friends</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">name1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">小红</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">            </span><span style="color: #F07178">name2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">小刚</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 触发set</span></span>
<span class="line"><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">_data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">_data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">friends</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name1 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">app</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">_data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">friends</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">3</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[extendAP]]></title>
            <link>https://desain7.top./bigWeb/vue/extend.html</link>
            <guid>https://desain7.top./bigWeb/vue/extend.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[扩展组件生成一个构造器，通常会与 $mount 一起使用
 简单使用
```html
<div id="app"
<script>
    let Component = Vue.extend({
 ]]></description>
            <content:encoded><![CDATA[<h1 id="extend-api" tabindex="-1">extend API <a class="header-anchor" href="#extend-api" aria-label="Permalink to &quot;extend API&quot;">&ZeroWidthSpace;</a></h1>
<p>扩展组件生成一个构造器，通常会与 $mount 一起使用</p>
<h2 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">app</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> Component </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Vue</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">extend</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">template</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">&lt;div&gt;{{param1}}&lt;/div&gt;</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">data</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                param1</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">666</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 挂载到 #app 上</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Component</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">$mount</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">#app</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="扩展现有组件" tabindex="-1">扩展现有组件 <a class="header-anchor" href="#扩展现有组件" aria-label="Permalink to &quot;扩展现有组件&quot;">&ZeroWidthSpace;</a></h2>
<p>接着上面的示例</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> SuperComponent </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Vue</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">exte</span><span style="color: #A6ACCD">   (Component)</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">SuperComponent</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">created</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #F78C6C">1</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 挂载到 #app 上</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">SuperComponent</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">$mount</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">#app</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[生命周期钩子]]></title>
            <link>https://desain7.top./bigWeb/vue/hook.html</link>
            <guid>https://desain7.top./bigWeb/vue/hook.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ beforeCreated
* 在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用
* 获取不到 props 或者 data 中的数据的，]]></description>
            <content:encoded><![CDATA[<h1 id="生命周期钩子" tabindex="-1">生命周期钩子 <a class="header-anchor" href="#生命周期钩子" aria-label="Permalink to &quot;生命周期钩子&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="beforecreated" tabindex="-1">beforeCreated <a class="header-anchor" href="#beforecreated" aria-label="Permalink to &quot;beforeCreated&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>
<p>在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用</p>
</li>
<li>
<p>获取不到 props 或者 data 中的数据的，这些数据的初始化都在 initState</p>
</li>
</ul>
<h2 id="created" tabindex="-1">created <a class="header-anchor" href="#created" aria-label="Permalink to &quot;created&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>
<p>在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前尚不可用。</p>
</li>
<li>
<p>可以访问到之前不能访问到的数据，但是这时候组件还没被挂载，所以是看不到的</p>
</li>
</ul>
<h2 id="beforemount" tabindex="-1">beforeMount <a class="header-anchor" href="#beforemount" aria-label="Permalink to &quot;beforeMount&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>
<p>在挂载开始之前被调用：相关的 render 函数首次被调用。</p>
</li>
<li>
<p><strong>该钩子在服务器端渲染期间不被调用。</strong></p>
</li>
<li>
<p>开始创建 VDOM(虚拟DOM)</p>
</li>
</ul>
<h2 id="mounted" tabindex="-1">mounted <a class="header-anchor" href="#mounted" aria-label="Permalink to &quot;mounted&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>
<p>实例被挂载后调用，这时 el 被新创建的 vm.$el 替换了。 如果根实例挂载到了一个文档内的元素上，当mounted被调用时vm.$el也在文档内。</p>
</li>
<li>
<p>mounted 不会保证所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以在 mounted 内部使用 vm.$nextTick：</p>
</li>
</ul>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">mounted</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">$nextTick</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// Code that will run only after the</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// entire view has been rendered</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><ul>
<li><strong>该钩子在服务器端渲染期间不被调用。</strong></li>
<li>将 VDOM 渲染为真实 DOM 并且渲染数据。组件中如果有子组件的话，会递归挂载子组件，只有当所有子组件全部挂载完毕，才会执行根组件的挂载钩子</li>
</ul>
<h2 id="beforeupdate" tabindex="-1">beforeUpdate <a class="header-anchor" href="#beforeupdate" aria-label="Permalink to &quot;beforeUpdate&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>
<p>数据更新时调用，发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM，比如手动移除已添加的事件监听器。</p>
</li>
<li>
<p><strong>该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行。</strong></p>
</li>
<li>
<p>数据更新前调用</p>
</li>
</ul>
<h2 id="updated" tabindex="-1">updated <a class="header-anchor" href="#updated" aria-label="Permalink to &quot;updated&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。</li>
<li>当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。</li>
<li>注意 updated 不会保证所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以在 updated 里使用 vm.$nextTick：</li>
</ul>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #FFCB6B">updated</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">$nextTick</span><span style="color: #F07178">(</span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// Code that will run only after the</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// entire view has been re-rendered</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><ul>
<li><strong>该钩子在服务器端渲染期间不被调用。</strong></li>
<li>数据更新后调用</li>
</ul>
<h2 id="activated-与-deactivated" tabindex="-1">activated 与 deactivated <a class="header-anchor" href="#activated-与-deactivated" aria-label="Permalink to &quot;activated 与 deactivated&quot;">&ZeroWidthSpace;</a></h2>
<p><code>keep-alive</code>独有的生命周期</p>
<ul>
<li>前者:被 keep-alive 缓存的组件激活时调用。</li>
<li>后者:被 keep-alive 缓存的组件停用时调用。</li>
<li>用 keep-alive 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 deactivated 钩子函数，命中缓存渲染后会执行 actived 钩子函数。</li>
</ul>
<h2 id="beforedestroy" tabindex="-1">beforeDestroy <a class="header-anchor" href="#beforedestroy" aria-label="Permalink to &quot;beforeDestroy&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>实例销毁之前调用。在这一步，实例仍然完全可用。</li>
<li><strong>该钩子在服务器端渲染期间不被调用。</strong></li>
<li>适合:移除事件、定时器,否则可能会引起内存泄露</li>
</ul>
<h2 id="destroyed" tabindex="-1">destroyed <a class="header-anchor" href="#destroyed" aria-label="Permalink to &quot;destroyed&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>实例销毁后调用。该钩子被调用后，对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁。</li>
<li><strong>该钩子在服务器端渲染期间不被调用。</strong></li>
<li>所有子组件都销毁完毕后才会执行根组件的 destroyed 钩子函数</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[keep-alive]]></title>
            <link>https://desain7.top./bigWeb/vue/keep-alive.html</link>
            <guid>https://desain7.top./bigWeb/vue/keep-alive.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[需要在组件切换的时候，保存一些组件的状态防止多次渲染，就可以使用 keep-alive 组件包裹需要保存的组件
keep-alive 组件拥有两个独有的生命周期钩子函数:
* activated:命中]]></description>
            <content:encoded><![CDATA[<h1 id="keep-alive" tabindex="-1">keep-alive <a class="header-anchor" href="#keep-alive" aria-label="Permalink to &quot;keep-alive&quot;">&ZeroWidthSpace;</a></h1>
<p>需要在组件切换的时候，保存一些组件的状态防止多次渲染，就可以使用 keep-alive 组件包裹需要保存的组件</p>
<p>keep-alive 组件拥有两个独有的生命周期钩子函数:</p>
<ul>
<li>activated:命中缓存渲染后会执行 actived 钩子函数</li>
<li>deactivated:用 keep-alive 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 deactivated</li>
</ul>
<h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">&ZeroWidthSpace;</a></h2>
<p><a href="https://codepen.io/sugarInSoup/pen/mdJpeqB" target="_blank" rel="noreferrer">CodePen:动态组件</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[运行机制概述]]></title>
            <link>https://desain7.top./bigWeb/vue/mechanism.html</link>
            <guid>https://desain7.top./bigWeb/vue/mechanism.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[<center
 初始化及挂载
* 在 new Vue() 之后。 Vue 会调用 _init 函数进行初始化
  * 初始化生命周期、事件、 props、 methods、 data、 comput]]></description>
            <content:encoded><![CDATA[<h1 id="运行机制概述" tabindex="-1">运行机制概述 <a class="header-anchor" href="#运行机制概述" aria-label="Permalink to &quot;运行机制概述&quot;">&ZeroWidthSpace;</a></h1>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4NjgzMzgxNDE1OA==586833814158" alt="图片"></p>
<center>全局概览</center>
<h2 id="初始化及挂载" tabindex="-1">初始化及挂载 <a class="header-anchor" href="#初始化及挂载" aria-label="Permalink to &quot;初始化及挂载&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>在 new Vue() 之后。 Vue 会调用 _init 函数进行初始化
<ul>
<li>初始化生命周期、事件、 props、 methods、 data、 computed 与 watch 等</li>
<li><strong>通过 Object.defineProperty 设置 setter 与 getter 函数，用来实现<code>响应式</code>以及<code>依赖收集</code></strong></li>
<li>初始化之后调用 $mount 挂载组件
<ul>
<li>如果是运行时编译，即不存在 render function</li>
<li>存在 template 的情况，需要进行<code>编译</code>步骤。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">&ZeroWidthSpace;</a></h2>
<p>compile编译分为 <word title='解析'>parse</word>,</p>
<word title='优化'>optimize</word>,<word title='生成'>generate</word>三个阶段，最终需要得到 <word title='渲染函数'>render function</word><h3 id="parse" tabindex="-1">parse <a class="header-anchor" href="#parse" aria-label="Permalink to &quot;parse&quot;">&ZeroWidthSpace;</a></h3>
<p>使用正则表达式等方式<code>解析</code>Template模板中的指令,class,style等等数据,形成<word title='Abstract Syntax Tree' content='抽象语法树'>AST</word></p>
<h3 id="optimize" tabindex="-1">optimize <a class="header-anchor" href="#optimize" aria-label="Permalink to &quot;optimize&quot;">&ZeroWidthSpace;</a></h3>
<p>optimize 的主要作用是<word content='这是 Vue 在编译过程中的一处优化'>标记 static 静态节点</word>，当 <code>update</code> 更新界面时，会有一个 <code>patch</code> 的过程， <code>diff</code> 算法会直接跳过静态节点，从而减少了比较的过程，优化了 <code>patch</code> 的性能</p>
<h3 id="generate" tabindex="-1">generate <a class="header-anchor" href="#generate" aria-label="Permalink to &quot;generate&quot;">&ZeroWidthSpace;</a></h3>
<p>generate 是将 <code>AST</code> 转化成 <code>render function</code> 字符串的过程，得到结果是 render 的字符串以及 <word title='静态Render' content='静态 render 其实跟 render 是一样的，都是执行得到 Vnode,只是静态 render，没有绑定动态数据，即说不会变化'>staticRenderFns</word>字符串。</p>
<p>在经历过 <code>parse</code>,<code>optimize</code>,<code>generate</code>这三个阶段以后，组件中就会存在渲染 <word title='Virtual DOM' content='虚拟DOM是JavaScript对象'>VNode</word> 所需的 <code>render function</code> 了</p>
<h2 id="响应式" tabindex="-1">响应式 <a class="header-anchor" href="#响应式" aria-label="Permalink to &quot;响应式&quot;">&ZeroWidthSpace;</a></h2>
<p><code>getter</code> 跟 <code>setter</code>在 init 的时候通过 Object.defineProperty 进行了绑定</p>
<ul>
<li>当被设置的对象被读取的时候会执行 <code>getter</code> 函数</li>
<li>当被赋值的时候会执行 <code>setter</code> 函数</li>
</ul>
<p>当 <code>render function</code> 被渲染的时候，因为会读取所需对象的值，所以会触发 <code>getter</code> 函数进行<strong>依赖收集</strong>,目的是将观察者 <code>Watcher</code> 对象存放到当前闭包中的订阅者 <code>Dep</code> 的 <code>subs</code> 中</p>
<p><img src="https://img.cdn.sugarat.top/mdImg/MTU4Njg0NTExMjAxOA==586845112018" alt="图片"></p>
<p>修改对象的值的时候，会触发对应的 <code>setter</code>， <code>setter</code> 通知之前<strong>依赖收集</strong>得到的 <code>Dep</code> 中的每一个 <code>Watcher</code>，告知他们我的值改变了，需要重新渲染视图。这时候这些 <code>Watcher</code> 就会开始调用 <code>update</code> 来更新视图，当然这中间还有一个 <code>patch</code> 的过程以及使用队列来异步更新的策略</p>
<h2 id="virtual-dom" tabindex="-1">Virtual DOM <a class="header-anchor" href="#virtual-dom" aria-label="Permalink to &quot;Virtual DOM&quot;">&ZeroWidthSpace;</a></h2>
<p><code>render function</code> 会被转化成 <code>VNode</code> 节点</p>
<ul>
<li><code>Virtual DOM</code> 是一棵以 JavaScript 对象（ VNode 节点）作为基础的树，用对象属性来描述节点，实际上它只是一层对真实 DOM 的抽象</li>
<li>最终可以通过一系列操作使这棵树映射到真实环境上</li>
<li>Virtual DOM 是以 JavaScript 对象为基础而不依赖真实平台环境，所以它具有了跨平台的能力
<ul>
<li>浏览器平台</li>
<li>Weex</li>
<li>Node</li>
<li>...</li>
</ul>
</li>
</ul>
<p><strong>简单示例</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">tag</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">div</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">                 </span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">children</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> [                 </span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            tag</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">a</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178">    </span></span>
<span class="line"><span style="color: #F07178">            text</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click me</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>渲染为</p>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">a</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">click me</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">a</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">div</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="更新视图" tabindex="-1">更新视图 <a class="header-anchor" href="#更新视图" aria-label="Permalink to &quot;更新视图&quot;">&ZeroWidthSpace;</a></h2>
<p>在修改一个对象值的时候，会通过 <code>setter</code> -&gt; <code>Watcher</code> -&gt; <code>update</code> 的流程来修改对应的视图</p>
<p>当数据变化后，执行 <code>render function</code> 就可以得到一个新的 <code>VNode</code> 节点,将<code>新 VNode</code> 与<code>旧 VNode</code> 一起传入 <code>patch</code> 进行比较，经过 diff 算法得出它们的<code>差异</code>
,只需要将这些<code>差异</code>的对应 DOM 进行修改即可。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[mixin与mixins]]></title>
            <link>https://desain7.top./bigWeb/vue/mixin.html</link>
            <guid>https://desain7.top./bigWeb/vue/mixin.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ mixin
mixin 用于全局混入，会影响到每个组件实例，通常插件都是这样做初始化的。
```vue
<script
Vue.mixin({
    beforeCreate(){
       ]]></description>
            <content:encoded><![CDATA[<h1 id="mixin-与-mixins" tabindex="-1">mixin 与 mixins <a class="header-anchor" href="#mixin-与-mixins" aria-label="Permalink to &quot;mixin 与 mixins&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="mixin" tabindex="-1">mixin <a class="header-anchor" href="#mixin" aria-label="Permalink to &quot;mixin&quot;">&ZeroWidthSpace;</a></h2>
<p>mixin 用于全局混入，会影响到每个组件实例，通常插件都是这样做初始化的。</p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">Vue</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">mixin</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">beforeCreate</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">init success</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><h2 id="mixins" tabindex="-1">mixins <a class="header-anchor" href="#mixins" aria-label="Permalink to &quot;mixins&quot;">&ZeroWidthSpace;</a></h2>
<p>多个组件中有相同的业务逻辑，就可以将这些逻辑剥离出来，通过 mixins 混入代码</p>
<div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> myMixin </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #82AAFF">created</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">this.</span><span style="color: #82AAFF">hello</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">methods</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">hello</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">hello from mixin!</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">data</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">          msg</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">hello world!</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #F07178">      </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">  </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 定义一个使用混入对象的组件</span></span>
<span class="line"><span style="color: #C792EA">var</span><span style="color: #A6ACCD"> Component </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Vue</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">extend</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">mixins</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [myMixin]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #F07178">template</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">&lt;h1&gt;{{msg}}&lt;/h1&gt;</span><span style="color: #89DDFF">&quot;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Component</span><span style="color: #A6ACCD">()</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">$mount</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">#app</span><span style="color: #89DDFF">&quot;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">script</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[响应式的基本原理]]></title>
            <link>https://desain7.top./bigWeb/vue/responsive.html</link>
            <guid>https://desain7.top./bigWeb/vue/responsive.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[Vue3.0 中将会通过 Proxy 来替换原本的 Object.defineProperty 来实现数据响应式
 vue2.x版本
使用``Object.defineProperty`` 来实现数据]]></description>
            <content:encoded><![CDATA[<h1 id="响应式的基本原理" tabindex="-1">响应式的基本原理 <a class="header-anchor" href="#响应式的基本原理" aria-label="Permalink to &quot;响应式的基本原理&quot;">&ZeroWidthSpace;</a></h1>
<p>Vue3.0 中将会通过 Proxy 来替换原本的 Object.defineProperty 来实现数据响应式</p>
<h2 id="vue2-x版本" tabindex="-1">vue2.x版本 <a class="header-anchor" href="#vue2-x版本" aria-label="Permalink to &quot;vue2.x版本&quot;">&ZeroWidthSpace;</a></h2>
<p>使用<code>Object.defineProperty</code> 来实现数据响应式</p>
<p>通过定义对象的get与set行为来实现的</p>
<h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">test1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">add</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">add</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> obj </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">value</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> v </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> obj</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> test1 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">test1</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">defineProperty</span><span style="color: #A6ACCD">(obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">value</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #82AAFF">set</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">value</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">test1</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">querySelector</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">#add</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">++;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><h3 id="封装成watch方法" tabindex="-1">封装成watch方法 <a class="header-anchor" href="#封装成watch方法" aria-label="Permalink to &quot;封装成watch方法&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">watch</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">callback</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">defineProperty</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">get</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #82AAFF">set</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">newValue</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">newValue</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">callback</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">test1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">test2</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">add</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">add</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> obj </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">value1</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">value2</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">2</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> test1 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">test1</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> test2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">test2</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #82AAFF">watch</span><span style="color: #A6ACCD">(obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">value1</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">test1</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #82AAFF">watch</span><span style="color: #A6ACCD">(obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">value2</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">res</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">test2</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">res</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">querySelector</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">#add</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value1</span><span style="color: #89DDFF">++;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">value2</span><span style="color: #F07178"> </span><span style="color: #89DDFF">*=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><h3 id="模拟实现observe" tabindex="-1">模拟实现observe <a class="header-anchor" href="#模拟实现observe" aria-label="Permalink to &quot;模拟实现observe&quot;">&ZeroWidthSpace;</a></h3>
<p>将普通对象转化为响应式对象</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// 重定义数组的常规方法</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> originProto </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">Array</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">prototype</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> newArrayProto </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">create</span><span style="color: #A6ACCD">(originProto)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">;</span><span style="color: #A6ACCD">[</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">push</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">pop</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">shift</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">unshift</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">splice</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">sort</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">reverse</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">forEach</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD; font-style: italic">method</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">newArrayProto</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">method</span><span style="color: #F07178">] </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 先执行本来的操作</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">originProto</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">method</span><span style="color: #F07178">]</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">apply</span><span style="color: #F07178">(</span><span style="color: #89DDFF">this,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">arguments</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 新数据也变为响应式</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #F07178"> (</span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">of</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">arguments</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #82AAFF">observe</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 通知更新视图</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">notifyUpdate</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 将普通对象变为响应式对象</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">object</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">observe</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 如果不是对象直接返回</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null</span><span style="color: #F07178"> </span><span style="color: #89DDFF">||</span><span style="color: #F07178"> </span><span style="color: #89DDFF">typeof</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178"> </span><span style="color: #89DDFF">!==</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">object</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 如果是数组替换其原型</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">Array</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">isArray</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">setPrototypeOf</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">newArrayProto</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #F07178"> (</span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">of</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">observe</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 定义每个属性的get与set方法</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">keys</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">keys</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #F07178"> (</span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">i</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">i</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">keys</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">length</span><span style="color: #89DDFF">;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">i</span><span style="color: #89DDFF">++</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">keys</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">i</span><span style="color: #F07178">]</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 对每个key都进行拦截</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">defineReactive</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">])</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 定义指定key的get与set</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">object</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">string</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">any</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">val</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">defineReactive</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">val</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 递归遍历</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// val可能也是对象</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">observe</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">val</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">Object</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">defineProperty</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        get</span><span style="color: #89DDFF">()</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 进行依赖搜集</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">val</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">        set</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">newVal</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 新的值可能也是对像</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">observe</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">newVal</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 通知更新视图</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">notifyUpdate</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 通知视图更新</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">notifyUpdate</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// ...code</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">更新视图</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// ...code</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// ------testCode-------</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xm</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">info</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">18</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">23</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">children</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">a</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">18</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">b</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 变为响应式对象</span></span>
<span class="line"><span style="color: #82AAFF">observe</span><span style="color: #A6ACCD">(data)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xxmm</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">age </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">32</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">aa</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">17</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">) </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children[</span><span style="color: #F78C6C">2</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">cc</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 更新视图</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children[</span><span style="color: #F78C6C">1</span><span style="color: #A6ACCD">] </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 不更新</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ccc</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">38</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children[</span><span style="color: #F78C6C">3</span><span style="color: #A6ACCD">] </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #676E95; font-style: italic">// 不更新</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ee</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">33</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h3 id="存在的问题" tabindex="-1">存在的问题 <a class="header-anchor" href="#存在的问题" aria-label="Permalink to &quot;存在的问题&quot;">&ZeroWidthSpace;</a></h3>
<ol>
<li>需要响应的数据较大时，递归存在性能问题</li>
<li>新增或者删除属性无法被监听</li>
</ol>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">newKey </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">a</span><span style="color: #89DDFF">:</span><span style="color: #F78C6C">1</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">delete</span><span style="color: #A6ACCD"> data</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name</span></span></code></pre>
</div><ol start="3">
<li>数组
<ol>
<li>响应需要额外的实现</li>
<li>修改有语法限制，不能通过下标索引直接进行新增与修改</li>
</ol>
</li>
</ol>
<h2 id="vue3-x" tabindex="-1">vue3.x <a class="header-anchor" href="#vue3-x" aria-label="Permalink to &quot;vue3.x&quot;">&ZeroWidthSpace;</a></h2>
<p>使用<code>defineProperty</code>只能定义属性的<code>get</code>与<code>set</code>等行为</p>
<p><code>es6</code>提供了<code>proxy</code>(代理),可以自定义更多的行为(13种),可以参考<a href="https://es6.ruanyifeng.com/#docs/proxy#Proxy-%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">es6相关电子书籍</a></p>
<h3 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">title1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">add</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">add</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> obj </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">num</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> p </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">Proxy</span><span style="color: #A6ACCD">(obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">set</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">property</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">value</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">target</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">property</span><span style="color: #F07178">] </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">property</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">num</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">title1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">add</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">p</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">num</span><span style="color: #89DDFF">++;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><h3 id="封装成watch方法-1" tabindex="-1">封装成watch方法 <a class="header-anchor" href="#封装成watch方法-1" aria-label="Permalink to &quot;封装成watch方法&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">watch</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">callback</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Proxy</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        set</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">value</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">target</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">] </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">callback</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">        get</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">target</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">h1</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">title1</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">0</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">h1</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">button</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">id</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">add</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span><span style="color: #A6ACCD">add</span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">button</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> obj </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">num</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #C792EA">let</span><span style="color: #A6ACCD"> p </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">watch</span><span style="color: #A6ACCD">(obj</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">value</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">key</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">num</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">title1</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">textContent</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">document</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">add</span><span style="color: #89DDFF">&#39;</span><span style="color: #A6ACCD">)</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">click</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">p</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">num</span><span style="color: #89DDFF">++;</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span></code></pre>
</div><h3 id="模拟实现reactive" tabindex="-1">模拟实现reactive <a class="header-anchor" href="#模拟实现reactive" aria-label="Permalink to &quot;模拟实现reactive&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">isObject</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">typeof</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">object</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178"> </span><span style="color: #89DDFF">!==</span><span style="color: #F07178"> </span><span style="color: #89DDFF">null</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 用于缓存</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> toProxy </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">WeakMap</span><span style="color: #A6ACCD">()</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> toRaw </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">WeakMap</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 依赖收集：建立target.key和响应函数之间对应关系 </span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> effectStack </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 映射关系表 target-&gt;key-&gt;[fn1,fn2,...]</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> targetsMap </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">new</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">WeakMap</span><span style="color: #A6ACCD">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 依赖搜集</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">object</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">string</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">track</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 从栈中取出响应函数</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">activeEffect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">effectStack</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">effectStack</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">length</span><span style="color: #F07178"> </span><span style="color: #89DDFF">-</span><span style="color: #F07178"> </span><span style="color: #F78C6C">1</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">activeEffect</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 获取target的依赖列表</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">depsMap</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">targetsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #A6ACCD">depsMap</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 不存在则创建</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">targetsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">depsMap</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Map</span><span style="color: #F07178">()))</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 获取key对应的响应函数列表</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">let</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">dep</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">depsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #A6ACCD">dep</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span><span style="color: #F07178"> </span><span style="color: #676E95; font-style: italic">// 不存在则创建</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">depsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">dep</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Set</span><span style="color: #F07178">()))</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 不存在则将新的响应函数加入对应的集合</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #A6ACCD">dep</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">has</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">activeEffect</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">dep</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">activeEffect</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 触发响应函数</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">object</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">string</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">type</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">String</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">trigger</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">type</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 获取依赖列表</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">depsMap</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">targetsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">depsMap</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 获取响应函数集合</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">deps</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">depsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">effects</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Set</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">deps</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 添加所有的响应函数到一个新的集合</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #A6ACCD">deps</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">forEach</span><span style="color: #F07178">(</span><span style="color: #A6ACCD; font-style: italic">effect</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">effects</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">effect</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 特殊处理数组元素的新增与删除</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">type</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ADD</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">||</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">type</span><span style="color: #F07178"> </span><span style="color: #89DDFF">===</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">DELETE</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">Array</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">isArray</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">deps</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">depsMap</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">length</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">deps</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #A6ACCD">deps</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">forEach</span><span style="color: #F07178">(</span><span style="color: #A6ACCD; font-style: italic">effect</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                        </span><span style="color: #A6ACCD">effects</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">add</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">effect</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">                    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 执行effects</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">effects</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">forEach</span><span style="color: #F07178">(</span><span style="color: #A6ACCD; font-style: italic">effect</span><span style="color: #F07178"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #F07178"> </span><span style="color: #82AAFF">effect</span><span style="color: #F07178">())</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 将普通对象转换成响应式对象</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">object</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">reactive</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">obj</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #82AAFF">isObject</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 取出缓存</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">toProxy</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">has</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">toProxy</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">toRaw</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">has</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">observed</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">Proxy</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        get</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">receiver</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Reflect</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">get</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">receiver</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// console.log(`获取${key}:${target[key]}`);</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// 依赖收集</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #82AAFF">track</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">isObject</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #F07178">) </span><span style="color: #89DDFF">?</span><span style="color: #F07178"> </span><span style="color: #82AAFF">reactive</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">v</span><span style="color: #F07178">) </span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">        set</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">value</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">receiver</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">isOwnProperty</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">hasOwnProperty</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">oldVal</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">target</span><span style="color: #F07178">[</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">]</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Reflect</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">receiver</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">            </span><span style="color: #676E95; font-style: italic">// console.log(`设置${key}:${value}`);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #89DDFF">!</span><span style="color: #A6ACCD">isOwnProperty</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">新增</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">:</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">}`</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #82AAFF">trigger</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">ADD</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">oldVal</span><span style="color: #F07178"> </span><span style="color: #89DDFF">!==</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">value</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">设置</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">:</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">value</span><span style="color: #89DDFF">}`</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #82AAFF">trigger</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">SET</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">        deleteProperty</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD; font-style: italic">key</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">isOwnProperty</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">hasOwnProperty</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">Reflect</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">deleteProperty</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #F07178"> (</span><span style="color: #A6ACCD">v</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&amp;&amp;</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">isOwnProperty</span><span style="color: #F07178">) </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">`</span><span style="color: #C3E88D">删除</span><span style="color: #89DDFF">${</span><span style="color: #A6ACCD">key</span><span style="color: #89DDFF">}</span><span style="color: #C3E88D">属性</span><span style="color: #89DDFF">`</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #82AAFF">trigger</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">target</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">DELETE</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">key</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">v</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// 缓存</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">toProxy</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">obj</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">observed</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">toRaw</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">set</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">observed</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">obj</span><span style="color: #F07178">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">observed</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h3 id="模拟effect" tabindex="-1">模拟effect <a class="header-anchor" href="#模拟effect" aria-label="Permalink to &quot;模拟effect&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 模拟effect任务</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">function</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">fn</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">effect</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">fn</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wapperEffect</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #C792EA">function</span><span style="color: #F07178"> </span><span style="color: #89DDFF">(...</span><span style="color: #A6ACCD; font-style: italic">args</span><span style="color: #89DDFF">)</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">run</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">wapperEffect</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">fn</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">args</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #82AAFF">wapperEffect</span><span style="color: #F07178">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">wapperEffect</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">/**</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * 执行包装函数</span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">function</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">effect</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">function</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">fn</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> * </span><span style="color: #89DDFF; font-style: italic">@</span><span style="color: #C792EA; font-style: italic">param</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #89DDFF; font-style: italic">{</span><span style="color: #FFCB6B; font-style: italic">any[]</span><span style="color: #89DDFF; font-style: italic">}</span><span style="color: #676E95; font-style: italic"> </span><span style="color: #A6ACCD; font-style: italic">args</span><span style="color: #676E95; font-style: italic"> </span></span>
<span class="line"><span style="color: #676E95; font-style: italic"> */</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">run</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">effect</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">fn</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD; font-style: italic">args</span><span style="color: #89DDFF">)</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">try</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">effectStack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">effect</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 收集依赖</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #82AAFF">fn</span><span style="color: #F07178">(</span><span style="color: #89DDFF">...</span><span style="color: #A6ACCD">args</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span><span style="color: #F07178"> </span><span style="color: #89DDFF; font-style: italic">finally</span><span style="color: #F07178"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #A6ACCD">effectStack</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">pop</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><h3 id="测试-1" tabindex="-1">测试 <a class="header-anchor" href="#测试-1" aria-label="Permalink to &quot;测试&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// --------testReactive-----------</span></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> data </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xm</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">info</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">18</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">23</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #F07178">children</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> [</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">a</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">18</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #A6ACCD">        </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">b</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">    ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">const</span><span style="color: #A6ACCD"> rData </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">reactive</span><span style="color: #A6ACCD">(data)</span></span>
<span class="line"><span style="color: #676E95; font-style: italic">// --------testEffect--------</span></span>
<span class="line"><span style="color: #82AAFF">effect</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">()</span><span style="color: #A6ACCD"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// afterUpdate</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">info age 发生了变化</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">age</span><span style="color: #F07178">)</span><span style="color: #89DDFF">;</span></span>
<span class="line"><span style="color: #89DDFF">    </span><span style="color: #676E95; font-style: italic">// ...more code</span></span>
<span class="line"><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">age </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">100</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// -------------testResponsive----------</span></span>
<span class="line"><span style="color: #A6ACCD">console</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">log</span><span style="color: #A6ACCD">(rData </span><span style="color: #89DDFF">===</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">reactive</span><span style="color: #A6ACCD">(rData))</span><span style="color: #89DDFF">;</span><span style="color: #676E95; font-style: italic">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 更新已存在属性</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">xxmm</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">push</span><span style="color: #A6ACCD">(</span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">name</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">c</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">22</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span><span style="color: #A6ACCD">)</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children[</span><span style="color: #F78C6C">0</span><span style="color: #A6ACCD">]</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">age </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">age </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">{</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">age</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">20</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD"> </span><span style="color: #F07178">id</span><span style="color: #89DDFF">:</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">999</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">info</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">id </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #F78C6C">0</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 新增不存在的属性</span></span>
<span class="line"><span style="color: #A6ACCD">rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name2 </span><span style="color: #89DDFF">=</span><span style="color: #A6ACCD"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">name22222</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 删除指定的属性</span></span>
<span class="line"><span style="color: #89DDFF">delete</span><span style="color: #A6ACCD"> rData</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">name</span></span></code></pre>
</div><div class="tip custom-block"><p class="custom-block-title">参考</p>
<p><a href="https://github.com/mqyqingfeng/Blog/issues/107" target="_blank" rel="noreferrer">冴羽大大:ES6 系列之 defineProperty 与 proxy</a><br>
<a href="https://es6.ruanyifeng.com/#docs/proxy#Proxy-%E5%AE%9E%E4%BE%8B%E7%9A%84%E6%96%B9%E6%B3%95" target="_blank" rel="noreferrer">阮一峰:ECMAScript 6 入门</a>
<a href="https://github.com/vuejs/vue-next/blob/master/packages/reactivity/src/reactive.ts" target="_blank" rel="noreferrer">vue-next:reactive.ts</a></p>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[v-show与v-if]]></title>
            <link>https://desain7.top./bigWeb/vue/showif.html</link>
            <guid>https://desain7.top./bigWeb/vue/showif.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ v-show
* ``v-show`` 只是在 display: none 和 display: block|inline-block|flex ... 之间切换。无论初始条件是什么都会被渲染出来
]]></description>
            <content:encoded><![CDATA[<h1 id="v-show-与-v-if" tabindex="-1">v-show 与 v-if <a class="header-anchor" href="#v-show-与-v-if" aria-label="Permalink to &quot;v-show 与 v-if&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="v-show" tabindex="-1">v-show <a class="header-anchor" href="#v-show" aria-label="Permalink to &quot;v-show&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li><code>v-show</code> 只是在 display: none 和 display: block|inline-block|flex ... 之间切换。无论初始条件是什么都会被渲染出来</li>
<li>初始渲染时有更高的开销
<ul>
<li>切换开销很小，适合于频繁切换的场景</li>
</ul>
</li>
</ul>
<h2 id="v-if" tabindex="-1">v-if <a class="header-anchor" href="#v-if" aria-label="Permalink to &quot;v-if&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>属性初始为 false 时，组件就不会被渲染</li>
<li>条件为 true时渲染出来，并且切换条件时会触发销毁/挂载组件
<ul>
<li>切换时开销更高</li>
<li>适合不经常切换的场景。</li>
</ul>
</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[实现VNode节点]]></title>
            <link>https://desain7.top./bigWeb/vue/vnode.html</link>
            <guid>https://desain7.top./bigWeb/vue/vnode.html</guid>
            <pubDate>Mon, 13 Apr 2020 16:00:00 GMT</pubDate>
            <description><![CDATA[ VNode?
`render function` 会被转化成 `VNode` 节点
`Virtual DOM` 其实就是一棵以 JavaScript 对象（VNode 节点）作为基础的树，用对象属性]]></description>
            <content:encoded><![CDATA[<h1 id="实现-vnode-节点" tabindex="-1">实现 VNode 节点 <a class="header-anchor" href="#实现-vnode-节点" aria-label="Permalink to &quot;实现 VNode 节点&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="vnode" tabindex="-1">VNode? <a class="header-anchor" href="#vnode" aria-label="Permalink to &quot;VNode?&quot;">&ZeroWidthSpace;</a></h2>
<p><code>render function</code> 会被转化成 <code>VNode</code> 节点</p>
<p><code>Virtual DOM</code> 其实就是一棵以 JavaScript 对象（VNode 节点）作为基础的树，用对象属性来描述节点，实际上它只是一层对真实 DOM 的抽象。最终可以通过一系列操作使这棵树映射到真实环境上。由于 Virtual DOM 是以 JavaScript 对象为基础而不依赖真实平台环境，所以使它具有了跨平台的能力，如浏览器平台、Weex、Node 等</p>
<h2 id="简单实现" tabindex="-1">简单实现 <a class="header-anchor" href="#简单实现" aria-label="Permalink to &quot;简单实现&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">class</span><span style="color: #A6ACCD"> </span><span style="color: #FFCB6B">VNode</span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #C792EA">constructor</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">tag</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD; font-style: italic">data</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD; font-style: italic">children</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">text.element</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 节点标签名称</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">tag</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">tag</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 节点的数据信息 props,attr 等等</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">data</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">data</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 子节点</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">children</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">children</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 节点的文本</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">text</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">text</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 虚拟节点对应的真实dom</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">this.</span><span style="color: #A6ACCD">element</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">element</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p><strong>示例</strong></p>
<p>vue组件</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;</span><span style="color: #F07178">span</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">class</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF"> </span><span style="color: #C792EA">v-show</span><span style="color: #89DDFF">=</span><span style="color: #89DDFF">&quot;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&quot;</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">    This is a span.</span></span>
<span class="line"><span style="color: #A6ACCD">  </span><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">span</span><span style="color: #89DDFF">&gt;</span></span>
<span class="line"><span style="color: #89DDFF">&lt;/</span><span style="color: #F07178">template</span><span style="color: #89DDFF">&gt;</span></span></code></pre>
</div><p>生成的js对象</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">render</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">VNode</span><span style="color: #F07178">(</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">span</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,{</span></span>
<span class="line"><span style="color: #89DDFF">        </span><span style="color: #676E95; font-style: italic">// 指令集合</span></span>
<span class="line"><span style="color: #F07178">        directives</span><span style="color: #89DDFF">:</span><span style="color: #F07178">[</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                </span><span style="color: #676E95; font-style: italic">/* v-show指令 */</span></span>
<span class="line"><span style="color: #F07178">                rawName</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">v-show</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                expression</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                name</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">show</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                value</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #FF9CAC">true</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #676E95; font-style: italic">/* 静态class */</span></span>
<span class="line"><span style="color: #F07178">        staticClass</span><span style="color: #89DDFF">:</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span><span style="color: #F07178">[</span><span style="color: #89DDFF">undefined,undefined,undefined,</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">This is a span.</span><span style="color: #89DDFF">&#39;</span><span style="color: #F07178">])</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p>转换为VNode</p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">tag</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">span</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">data</span><span style="color: #89DDFF">:{</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">directives</span><span style="color: #89DDFF">:</span><span style="color: #F07178">[</span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">                rawName</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">v-show</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                expression</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">isShow</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                name</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">show</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">                value</span><span style="color: #89DDFF">:</span><span style="color: #FF9CAC">true</span><span style="color: #F07178"> </span></span>
<span class="line"><span style="color: #F07178">            </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">        ]</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #FFCB6B">staticClass</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">demo</span><span style="color: #89DDFF">&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF">},</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">text</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #FFCB6B">children</span><span style="color: #89DDFF">:</span><span style="color: #F07178">[</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #F07178">            tag</span><span style="color: #89DDFF">:undefined,</span></span>
<span class="line"><span style="color: #F07178">            data</span><span style="color: #89DDFF">:undefined,</span></span>
<span class="line"><span style="color: #F07178">            text</span><span style="color: #89DDFF">:</span><span style="color: #89DDFF">&#39;</span><span style="color: #C3E88D">This is a span</span><span style="color: #89DDFF">&#39;</span><span style="color: #89DDFF">,</span></span>
<span class="line"><span style="color: #F07178">            chidlren</span><span style="color: #89DDFF">:</span><span style="color: #F07178">[]</span></span>
<span class="line"><span style="color: #F07178">        </span><span style="color: #89DDFF">}</span></span>
<span class="line"><span style="color: #F07178">    ]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p><strong>方法封装</strong></p>
<div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre v-pre class="shiki material-theme-palenight" ><code><span class="line"><span style="color: #676E95; font-style: italic">// 空节点</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">createEmptyVNode</span><span style="color: #89DDFF">(){</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">node</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">VNode</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">text</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">&#39;&#39;</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">node</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 文本节点</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">createTextVNode</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">val</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #C792EA">const</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">node</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">VNode</span><span style="color: #F07178">()</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">text</span><span style="color: #F07178"> </span><span style="color: #89DDFF">=</span><span style="color: #F07178"> </span><span style="color: #82AAFF">String</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">val</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #A6ACCD">node</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #676E95; font-style: italic">// 克隆节点</span></span>
<span class="line"><span style="color: #C792EA">function</span><span style="color: #A6ACCD"> </span><span style="color: #82AAFF">cloneVNode</span><span style="color: #89DDFF">(</span><span style="color: #A6ACCD; font-style: italic">node</span><span style="color: #89DDFF">){</span></span>
<span class="line"><span style="color: #F07178">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #F07178"> </span><span style="color: #89DDFF">new</span><span style="color: #F07178"> </span><span style="color: #82AAFF">VNode</span><span style="color: #F07178">(</span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">tag</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">data</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">children</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">text</span><span style="color: #89DDFF">,</span><span style="color: #A6ACCD">node</span><span style="color: #89DDFF">.</span><span style="color: #A6ACCD">element</span><span style="color: #F07178">)</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre>
</div><p><strong>总结</strong></p>
<ul>
<li>VNode 就是一个 JavaScript 对象,用 JavaScript 对象的属性来描述当前节点的一些状态</li>
<li>用 VNode 节点的形式来模拟一棵 Virtual DOM 树</li>
</ul>
]]></content:encoded>
        </item>
    </channel>
</rss>